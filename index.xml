<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Dynamics 365 Finance &amp; Operations | nuxulu.com</title><link>https://nuxulu.com/</link><description>Dynamics 365 Finance &amp; Operations</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor><webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Wed, 16 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://nuxulu.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Theme Documentation - mermaid Shortcode</title><link>https://nuxulu.com/theme-documentation-mermaid-shortcode/</link><pubDate>Tue, 03 Mar 2020 15:29:41 +0800</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/theme-documentation-mermaid-shortcode/</guid><description><![CDATA[<a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.11" rel="noopener noreffer" target="_blank"></a>
<p>The <code>mermaid</code> shortcode supports diagrams in Hugo with <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener noreffer ">Mermaid</a> library.</p>
<p><strong>Mermaid</strong> is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.</p>
<p>Just insert your mermaid code in the <code>mermaid</code> shortcode and thatâ€™s it.</p>
<h2 id="flowchart">Flowchart</h2>
<p>Example <strong>flowchart</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">graph LR;
</span></span><span class="line"><span class="cl">    A[Hard edge] --&gt;|Link text| B(Round edge)
</span></span><span class="line"><span class="cl">    B --&gt; C{Decision}
</span></span><span class="line"><span class="cl">    C --&gt;|One| D[Result one]
</span></span><span class="line"><span class="cl">    C --&gt;|Two| E[Result two]
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-1"></div>
<h2 id="sequence-diagram">Sequence Diagram</h2>
<p>Example <strong>sequence diagram</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">sequenceDiagram
</span></span><span class="line"><span class="cl">    participant Alice
</span></span><span class="line"><span class="cl">    participant Bob
</span></span><span class="line"><span class="cl">    Alice-&gt;&gt;John: Hello John, how are you?
</span></span><span class="line"><span class="cl">    loop Healthcheck
</span></span><span class="line"><span class="cl">        John-&gt;John: Fight against hypochondria
</span></span><span class="line"><span class="cl">    end
</span></span><span class="line"><span class="cl">    Note right of John: Rational thoughts <span class="p">&lt;</span><span class="nt">br</span><span class="p">/&gt;</span>prevail...
</span></span><span class="line"><span class="cl">    John--&gt;Alice: Great!
</span></span><span class="line"><span class="cl">    John-&gt;Bob: How about you?
</span></span><span class="line"><span class="cl">    Bob--&gt;John: Jolly good!
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-2"></div>
<h2 id="gantt">Gantt</h2>
<p>Example <strong>Gantt</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">gantt
</span></span><span class="line"><span class="cl">dateFormat  YYYY-MM-DD
</span></span><span class="line"><span class="cl">title Adding GANTT diagram to mermaid
</span></span><span class="line"><span class="cl">excludes weekdays 2014-01-10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">section A section
</span></span><span class="line"><span class="cl">Completed task            :done,    des1, 2014-01-06,2014-01-08
</span></span><span class="line"><span class="cl">Active task               :active,  des2, 2014-01-09, 3d
</span></span><span class="line"><span class="cl">Future task               :         des3, after des2, 5d
</span></span><span class="line"><span class="cl">Future task2              :         des4, after des3, 5d
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-3"></div>
<h2 id="class-diagram">Class Diagram</h2>
<p>Example <strong>class diagram</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">classDiagram
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Duck
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Fish
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Zebra
</span></span><span class="line"><span class="cl">    Animal : +int age
</span></span><span class="line"><span class="cl">    Animal : +String gender
</span></span><span class="line"><span class="cl">    Animal: +isMammal()
</span></span><span class="line"><span class="cl">    Animal: +mate()
</span></span><span class="line"><span class="cl">    class Duck{
</span></span><span class="line"><span class="cl">        +String beakColor
</span></span><span class="line"><span class="cl">        +swim()
</span></span><span class="line"><span class="cl">        +quack()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    class Fish{
</span></span><span class="line"><span class="cl">        -int sizeInFeet
</span></span><span class="line"><span class="cl">        -canEat()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    class Zebra{
</span></span><span class="line"><span class="cl">        +bool is_wild
</span></span><span class="line"><span class="cl">        +run()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-4"></div>
<h2 id="state-diagram">State Diagram</h2>
<p>Example <strong>state diagram</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">stateDiagram-v2
</span></span><span class="line"><span class="cl">    [*] --&gt; Still
</span></span><span class="line"><span class="cl">    Still --&gt; [*]
</span></span><span class="line"><span class="cl">    Still --&gt; Moving
</span></span><span class="line"><span class="cl">    Moving --&gt; Still
</span></span><span class="line"><span class="cl">    Moving --&gt; Crash
</span></span><span class="line"><span class="cl">    Crash --&gt; [*]
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-5"></div>
<h2 id="git-graph">Git Graph</h2>
<p>Example <strong>git graph</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">gitGraph
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    branch develop
</span></span><span class="line"><span class="cl">    checkout develop
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    checkout main
</span></span><span class="line"><span class="cl">    merge develop
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-6"></div>
<h2 id="entity-relationship-diagram">Entity Relationship Diagram</h2>
<p>Example <strong>entity-relationship diagram</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">erDiagram
</span></span><span class="line"><span class="cl">    CUSTOMER ||--o{ ORDER : places
</span></span><span class="line"><span class="cl">    ORDER ||--|{ LINE-ITEM : contains
</span></span><span class="line"><span class="cl">    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-7"></div>
<h2 id="user-journey">User Journey</h2>
<p>Example <strong>user journey</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">journey
</span></span><span class="line"><span class="cl">    title My working day
</span></span><span class="line"><span class="cl">    section Go to work
</span></span><span class="line"><span class="cl">      Make tea: 5: Me
</span></span><span class="line"><span class="cl">      Go upstairs: 3: Me
</span></span><span class="line"><span class="cl">      Do work: 1: Me, Cat
</span></span><span class="line"><span class="cl">    section Go home
</span></span><span class="line"><span class="cl">      Go downstairs: 5: Me
</span></span><span class="line"><span class="cl">      Sit down: 5: Me
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-8"></div>
<h2 id="pie-chart">Pie Chart</h2>
<p>Example <strong>pie chart</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">pie
</span></span><span class="line"><span class="cl">    &#34;Dogs&#34; : 386
</span></span><span class="line"><span class="cl">    &#34;Cats&#34; : 85
</span></span><span class="line"><span class="cl">    &#34;Rats&#34; : 15
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-9"></div>
<h2 id="requirement-diagram">Requirement Diagram</h2>
<p>Example <strong>requirement diagram</strong> <code>mermaid</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">requirementDiagram
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">requirement test_req {
</span></span><span class="line"><span class="cl">id: 1
</span></span><span class="line"><span class="cl">text: the test text.
</span></span><span class="line"><span class="cl">risk: high
</span></span><span class="line"><span class="cl">verifymethod: test
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">element test_entity {
</span></span><span class="line"><span class="cl">type: simulation
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">test_entity - satisfies -&gt; test_req
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mermaid" id="id-10"></div>]]></description></item><item><title>Theme Documentation - echarts Shortcode</title><link>https://nuxulu.com/theme-documentation-echarts-shortcode/</link><pubDate>Tue, 03 Mar 2020 14:29:41 +0800</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/theme-documentation-echarts-shortcode/</guid><description><![CDATA[<p>The <code>echarts</code> shortcode supports data visualization in Hugo with <a href="https://echarts.apache.org/" target="_blank" rel="noopener noreffer ">ECharts</a> library.</p>
<p><strong>ECharts</strong> is a library helping you to generate interactive data visualization.</p>
<p>The basic chart types ECharts supports include <a href="https://echarts.apache.org/en/option.html#series-line" target="_blank" rel="noopener noreffer ">line series</a>, <a href="https://echarts.apache.org/en/option.html#series-line" target="_blank" rel="noopener noreffer ">bar series</a>, <a href="https://echarts.apache.org/en/option.html#series-scatter" target="_blank" rel="noopener noreffer ">scatter series</a>, <a href="https://echarts.apache.org/en/option.html#series-pie" target="_blank" rel="noopener noreffer ">pie charts</a>, <a href="https://echarts.apache.org/en/option.html#series-candlestick" target="_blank" rel="noopener noreffer ">candle-stick series</a>, <a href="https://echarts.apache.org/en/option.html#series-boxplot" target="_blank" rel="noopener noreffer ">boxplot series</a> for statistics, <a href="https://echarts.apache.org/en/option.html#series-map" target="_blank" rel="noopener noreffer ">map series</a>, <a href="https://echarts.apache.org/en/option.html#series-heatmap" target="_blank" rel="noopener noreffer ">heatmap series</a>, <a href="https://echarts.apache.org/en/option.html#series-lines" target="_blank" rel="noopener noreffer ">lines series</a> for directional information, <a href="https://echarts.apache.org/en/option.html#series-graph" target="_blank" rel="noopener noreffer ">graph series</a> for relationships, <a href="https://echarts.apache.org/en/option.html#series-treemap" target="_blank" rel="noopener noreffer ">treemap series</a>, <a href="https://echarts.apache.org/en/option.html#series-sunburst" target="_blank" rel="noopener noreffer ">sunburst series</a>, <a href="https://echarts.apache.org/en/option.html#series-parallel" target="_blank" rel="noopener noreffer ">parallel series</a> for multi-dimensional data, <a href="https://echarts.apache.org/en/option.html#series-funnel" target="_blank" rel="noopener noreffer ">funnel series</a>, <a href="https://echarts.apache.org/en/option.html#series-gauge" target="_blank" rel="noopener noreffer ">gauge series</a>. And it&rsquo;s extremely easy to create a combinition of them with ECharts.</p>
<p>Just insert your ECharts option in <code>JSON</code>/<code>YAML</code>/<code>TOML</code> format in the <code>echarts</code> shortcode and thatâ€™s it.</p>
<p>Example <code>echarts</code> input in <code>JSON</code> format:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span><span class="err">{&lt;</span> <span class="err">echarts</span> <span class="err">&gt;</span><span class="p">}</span><span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;text&#34;</span><span class="p">:</span> <span class="s2">&#34;Summary Line Chart&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;top&#34;</span><span class="p">:</span> <span class="s2">&#34;2%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;left&#34;</span><span class="p">:</span> <span class="s2">&#34;center&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;tooltip&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;trigger&#34;</span><span class="p">:</span> <span class="s2">&#34;axis&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;legend&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;Email Marketing&#34;</span><span class="p">,</span> <span class="s2">&#34;Affiliate Advertising&#34;</span><span class="p">,</span> <span class="s2">&#34;Video Advertising&#34;</span><span class="p">,</span> <span class="s2">&#34;Direct View&#34;</span><span class="p">,</span> <span class="s2">&#34;Search Engine&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;top&#34;</span><span class="p">:</span> <span class="s2">&#34;10%&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;grid&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;left&#34;</span><span class="p">:</span> <span class="s2">&#34;5%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;right&#34;</span><span class="p">:</span> <span class="s2">&#34;5%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;bottom&#34;</span><span class="p">:</span> <span class="s2">&#34;5%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;top&#34;</span><span class="p">:</span> <span class="s2">&#34;20%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;containLabel&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;toolbox&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;feature&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;saveAsImage&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;Save as Image&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;xAxis&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;category&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;boundaryGap&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;Monday&#34;</span><span class="p">,</span> <span class="s2">&#34;Tuesday&#34;</span><span class="p">,</span> <span class="s2">&#34;Wednesday&#34;</span><span class="p">,</span> <span class="s2">&#34;Thursday&#34;</span><span class="p">,</span> <span class="s2">&#34;Friday&#34;</span><span class="p">,</span> <span class="s2">&#34;Saturday&#34;</span><span class="p">,</span> <span class="s2">&#34;Sunday&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;yAxis&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;value&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;series&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Email Marketing&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;line&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stack&#34;</span><span class="p">:</span> <span class="s2">&#34;Total&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="mi">120</span><span class="p">,</span> <span class="mi">132</span><span class="p">,</span> <span class="mi">101</span><span class="p">,</span> <span class="mi">134</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">230</span><span class="p">,</span> <span class="mi">210</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Affiliate Advertising&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;line&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stack&#34;</span><span class="p">:</span> <span class="s2">&#34;Total&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="mi">220</span><span class="p">,</span> <span class="mi">182</span><span class="p">,</span> <span class="mi">191</span><span class="p">,</span> <span class="mi">234</span><span class="p">,</span> <span class="mi">290</span><span class="p">,</span> <span class="mi">330</span><span class="p">,</span> <span class="mi">310</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Video Advertising&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;line&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stack&#34;</span><span class="p">:</span> <span class="s2">&#34;Total&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="mi">150</span><span class="p">,</span> <span class="mi">232</span><span class="p">,</span> <span class="mi">201</span><span class="p">,</span> <span class="mi">154</span><span class="p">,</span> <span class="mi">190</span><span class="p">,</span> <span class="mi">330</span><span class="p">,</span> <span class="mi">410</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Direct View&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;line&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stack&#34;</span><span class="p">:</span> <span class="s2">&#34;Total&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="mi">320</span><span class="p">,</span> <span class="mi">332</span><span class="p">,</span> <span class="mi">301</span><span class="p">,</span> <span class="mi">334</span><span class="p">,</span> <span class="mi">390</span><span class="p">,</span> <span class="mi">330</span><span class="p">,</span> <span class="mi">320</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Search Engine&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;line&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;stack&#34;</span><span class="p">:</span> <span class="s2">&#34;Total&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[</span><span class="mi">820</span><span class="p">,</span> <span class="mi">932</span><span class="p">,</span> <span class="mi">901</span><span class="p">,</span> <span class="mi">934</span><span class="p">,</span> <span class="mi">1290</span><span class="p">,</span> <span class="mi">1330</span><span class="p">,</span> <span class="mi">1320</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="err">{&lt;</span> <span class="err">/echarts</span> <span class="err">&gt;</span><span class="p">}</span><span class="err">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The same in <code>YAML</code> format:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">{{<span class="l">&lt; echarts &gt;}}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">title</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">text</span><span class="p">:</span><span class="w"> </span><span class="l">Summary Line Chart</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">top</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">left</span><span class="p">:</span><span class="w"> </span><span class="l">center</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tooltip</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">trigger</span><span class="p">:</span><span class="w"> </span><span class="l">axis</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">legend</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Email Marketing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Affiliate Advertising</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Video Advertising</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Direct View</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Search Engine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">top</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">grid</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">left</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">right</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">bottom</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">top</span><span class="p">:</span><span class="w"> </span><span class="m">20</span><span class="l">%</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">containLabel</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">toolbox</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">feature</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">saveAsImage</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">Save as Image</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">xAxis</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">category</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">boundaryGap</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Monday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Tuesday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Wednesday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Thursday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Friday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Saturday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">Sunday</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">yAxis</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">series</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Email Marketing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">line</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stack</span><span class="p">:</span><span class="w"> </span><span class="l">Total</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">120</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">132</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">101</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">134</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">230</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">210</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Affiliate Advertising</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">line</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stack</span><span class="p">:</span><span class="w"> </span><span class="l">Total</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">220</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">182</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">191</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">234</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">290</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">330</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">310</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Video Advertising</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">line</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stack</span><span class="p">:</span><span class="w"> </span><span class="l">Total</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">150</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">232</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">154</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">190</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">330</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">410</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Direct View</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">line</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stack</span><span class="p">:</span><span class="w"> </span><span class="l">Total</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">320</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">332</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">301</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">334</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">390</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">330</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">320</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Search Engine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">line</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stack</span><span class="p">:</span><span class="w"> </span><span class="l">Total</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">820</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">932</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">901</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">934</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">1290</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">1330</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="m">1320</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>{{<span class="l">&lt; /echarts &gt;}}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>The same in <code>TOML</code> format:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="p">{{</span><span class="err">&lt;</span> <span class="nx">echarts</span> <span class="err">&gt;</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">title</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">text</span> <span class="p">=</span> <span class="s2">&#34;Summary Line Chart&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">top</span> <span class="p">=</span> <span class="s2">&#34;2%&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">left</span> <span class="p">=</span> <span class="s2">&#34;center&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">tooltip</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">trigger</span> <span class="p">=</span> <span class="s2">&#34;axis&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">legend</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Email Marketing&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Affiliate Advertising&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Video Advertising&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Direct View&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Search Engine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">top</span> <span class="p">=</span> <span class="s2">&#34;10%&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">grid</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">left</span> <span class="p">=</span> <span class="s2">&#34;5%&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">right</span> <span class="p">=</span> <span class="s2">&#34;5%&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">bottom</span> <span class="p">=</span> <span class="s2">&#34;5%&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">top</span> <span class="p">=</span> <span class="s2">&#34;20%&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">containLabel</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">toolbox</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">toolbox</span><span class="p">.</span><span class="nx">feature</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">toolbox</span><span class="p">.</span><span class="nx">feature</span><span class="p">.</span><span class="nx">saveAsImage</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">title</span> <span class="p">=</span> <span class="s2">&#34;Save as Image&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">xAxis</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;category&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">boundaryGap</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Monday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Tuesday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Wednesday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Thursday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Friday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Saturday&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;Sunday&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">yAxis</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;value&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">series</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Email Marketing&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;line&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">stack</span> <span class="p">=</span> <span class="s2">&#34;Total&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="mf">120.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">132.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">101.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">134.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">90.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">230.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">210.0</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">series</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Affiliate Advertising&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;line&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">stack</span> <span class="p">=</span> <span class="s2">&#34;Total&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="mf">220.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">182.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">191.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">234.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">290.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">330.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">310.0</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">series</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Video Advertising&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;line&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">stack</span> <span class="p">=</span> <span class="s2">&#34;Total&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="mf">150.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">232.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">201.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">154.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">190.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">330.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">410.0</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">series</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Direct View&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;line&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">stack</span> <span class="p">=</span> <span class="s2">&#34;Total&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="mf">320.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">332.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">301.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">334.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">390.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">330.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">320.0</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[[</span><span class="nx">series</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;Search Engine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">type</span> <span class="p">=</span> <span class="s2">&#34;line&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">stack</span> <span class="p">=</span> <span class="s2">&#34;Total&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">data</span> <span class="p">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="mf">820.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">932.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">901.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">934.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">1290.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">1330.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="mf">1320.0</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="err">&lt;</span> <span class="err">/</span><span class="nx">echarts</span> <span class="err">&gt;</span><span class="p">}}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="echarts" id="id-1" style="width: 100%; height: 30rem;"></div>
<p>The <code>echarts</code> shortcode has also the following named parameters:</p>
<ul>
<li>
<p><strong>width</strong> <em>[optional]</em> (<strong>first</strong> positional parameter)</p>
<p><a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.0" rel="noopener noreffer" target="_blank"></a> Width of the data visualization, default value is <code>100%</code>.</p>
</li>
<li>
<p><strong>height</strong> <em>[optional]</em> (<strong>second</strong> positional parameter)</p>
<p><a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.0" rel="noopener noreffer" target="_blank"></a> Height of the data visualization, default value is <code>30rem</code>.</p>
</li>
</ul>
]]></description></item><item><title>Theme Documentation - mapbox Shortcode</title><link>https://nuxulu.com/theme-documentation-mapbox-shortcode/</link><pubDate>Tue, 03 Mar 2020 13:29:41 +0800</pubDate><author>false</author><guid>https://nuxulu.com/theme-documentation-mapbox-shortcode/</guid><description><![CDATA[<a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.0" rel="noopener noreffer" target="_blank"></a>
<p>The <code>mapbox</code> shortcode supports interactive maps in Hugo with <a href="https://docs.mapbox.com/mapbox-gl-js" target="_blank" rel="noopener noreffer ">Mapbox GL JS</a> library.</p>
<p><strong>Mapbox GL JS</strong> is a JavaScript library that uses WebGL to render interactive maps from <a href="https://docs.mapbox.com/help/glossary/vector-tiles/" target="_blank" rel="noopener noreffer ">vector tiles</a> and <a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/" target="_blank" rel="noopener noreffer ">Mapbox styles</a>.</p>
<p>The <code>mapbox</code> shortcode has the following named parameters to use Mapbox GL JS:</p>
<ul>
<li>
<p><strong>lng</strong> <em>[required]</em> (<strong>first</strong> positional parameter)</p>
<p>Longitude of the inital centerpoint of the map, measured in degrees.</p>
</li>
<li>
<p><strong>lat</strong> <em>[required]</em> (<strong>second</strong> positional parameter)</p>
<p>Latitude of the inital centerpoint of the map, measured in degrees.</p>
</li>
<li>
<p><strong>zoom</strong> <em>[optional]</em> (<strong>third</strong> positional parameter)</p>
<p>The initial zoom level of the map, default value is <code>10</code>.</p>
</li>
<li>
<p><strong>marked</strong> <em>[optional]</em> (<strong>fourth</strong> positional parameter)</p>
<p>Whether to add a marker at the inital centerpoint of the map, default value is <code>true</code>.</p>
</li>
<li>
<p><strong>light-style</strong> <em>[optional]</em> (<strong>fifth</strong> positional parameter)</p>
<p>Style for the light theme, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>dark-style</strong> <em>[optional]</em> (<strong>sixth</strong> positional parameter)</p>
<p>Style for the dark theme, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>navigation</strong> <em>[optional]</em></p>
<p>Whether to add <a href="https://docs.mapbox.com/mapbox-gl-js/api#navigationcontrol" target="_blank" rel="noopener noreffer ">NavigationControl</a>, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>geolocate</strong> <em>[optional]</em></p>
<p>Whether to add <a href="https://docs.mapbox.com/mapbox-gl-js/api#geolocatecontrol" target="_blank" rel="noopener noreffer ">GeolocateControl</a>, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>scale</strong> <em>[optional]</em></p>
<p>Whether to add <a href="https://docs.mapbox.com/mapbox-gl-js/api#scalecontrol" target="_blank" rel="noopener noreffer ">ScaleControl</a>, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>fullscreen</strong> <em>[optional]</em></p>
<p>Whether to add <a href="https://docs.mapbox.com/mapbox-gl-js/api#fullscreencontrol" target="_blank" rel="noopener noreffer ">FullscreenControl</a>, default value is the value set in the <a href="../theme-documentation-content#front-matter" rel="">front matter</a> or the <a href="../theme-documentation-basics#site-configuration" rel="">site configuration</a>.</p>
</li>
<li>
<p><strong>width</strong> <em>[optional]</em></p>
<p>Width of the map, default value is <code>100%</code>.</p>
</li>
<li>
<p><strong>height</strong> <em>[optional]</em></p>
<p>Height of the map, default value is <code>20rem</code>.</p>
</li>
</ul>
<p>Example simple <code>mapbox</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mapbox</span> <span class="na">121</span><span class="err">.</span><span class="na">485</span> <span class="na">31</span><span class="err">.</span><span class="na">233</span> <span class="na">12</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mapbox</span> <span class="na">lng</span><span class="o">=</span><span class="s">121.485</span> <span class="na">lat</span><span class="o">=</span><span class="s">31.233</span> <span class="na">zoom</span><span class="o">=</span><span class="s">12</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mapbox" id="id-1" style="width: 100%; height: 20rem;"></div>
<p>Example <code>mapbox</code> input with the custom style:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mapbox</span> <span class="na">-122</span><span class="err">.</span><span class="na">252</span> <span class="na">37</span><span class="err">.</span><span class="na">453</span> <span class="na">10</span> <span class="na">false</span> <span class="err">&#34;</span><span class="na">mapbox:</span><span class="err">//</span><span class="na">styles</span><span class="err">/</span><span class="na">mapbox</span><span class="err">/</span><span class="na">navigation-preview-day-v4</span><span class="err">&#34;</span> <span class="err">&#34;</span><span class="na">mapbox:</span><span class="err">//</span><span class="na">styles</span><span class="err">/</span><span class="na">mapbox</span><span class="err">/</span><span class="na">navigation-preview-night-v4</span><span class="err">&#34;</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mapbox</span> <span class="na">lng</span><span class="o">=</span><span class="s">-122.252</span> <span class="na">lat</span><span class="o">=</span><span class="s">37.453</span> <span class="na">zoom</span><span class="o">=</span><span class="s">10</span> <span class="na">marked</span><span class="o">=</span><span class="s">false</span> <span class="na">light-style</span><span class="o">=</span><span class="s">&#34;mapbox://styles/mapbox/navigation-preview-day-v4&#34;</span> <span class="na">dark-style</span><span class="o">=</span><span class="s">&#34;mapbox://styles/mapbox/navigation-preview-night-v4&#34;</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="mapbox" id="id-2" style="width: 100%; height: 20rem;"></div>]]></description></item><item><title>Theme Documentation - music Shortcode</title><link>https://nuxulu.com/theme-documentation-music-shortcode/</link><pubDate>Tue, 03 Mar 2020 12:29:41 +0800</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/theme-documentation-music-shortcode/</guid><description><![CDATA[<p>The <code>music</code> shortcode embeds a responsive music player based on <a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener noreffer ">APlayer</a> and <a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener noreffer ">MetingJS</a>.</p>
<p>There are three ways to use it the <code>music</code> shortcode.</p>
<h2 id="custom-music-url">1 Custom Music URL</h2>
<p><a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.10" rel="noopener noreffer" target="_blank"></a> The complete usage of <a href="../theme-documentation-content#contents-organization" rel="">local resource references</a> is supported.</p>
<p>The <code>music</code> shortcode has the following named parameters by custom music URL:</p>
<ul>
<li>
<p><strong>server</strong> <em>[required]</em></p>
<p>URL of the custom music.</p>
</li>
<li>
<p><strong>name</strong> <em>[optional]</em></p>
<p>Name of the custom music.</p>
</li>
<li>
<p><strong>artist</strong> <em>[optional]</em></p>
<p>Artist of the custom music.</p>
</li>
<li>
<p><strong>cover</strong> <em>[required]</em></p>
<p>URL of the custom music cover.</p>
</li>
</ul>
<p>Example <code>music</code> input by custom music URL:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">music</span> <span class="na">url</span><span class="o">=</span><span class="s">&#34;/music/Wavelength.mp3&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">Wavelength</span> <span class="na">artist</span><span class="o">=</span><span class="s">oldmanyoung</span> <span class="na">cover</span><span class="o">=</span><span class="s">&#34;/images/Wavelength.jpg&#34;</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<meting-js url="/music/Wavelength.mp3" name="Wavelength" artist="oldmanyoung" cover="/images/Wavelength.jpg" theme="#448aff"></meting-js>
<h2 id="automatic-identification">2 Music Platform URL Automatic Identification</h2>
<p>The <code>music</code> shortcode has one named parameter by music platform URL automatic identification:</p>
<ul>
<li>
<p><strong>auto</strong> <em>[required]</em> (<strong>first</strong> positional parameter)</p>
<p>URL of the music platform URL for automatic identification,
which supports <code>netease</code>, <code>tencent</code> and <code>xiami</code> music platform.</p>
</li>
</ul>
<p>Example <code>music</code> input by music platform URL automatic identification:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">music</span> <span class="na">auto</span><span class="o">=</span><span class="s">&#34;https://music.163.com/#/playlist?id=60198&#34;</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">music</span> <span class="err">&#34;</span><span class="na">https:</span><span class="err">//</span><span class="na">music</span><span class="err">.</span><span class="na">163</span><span class="err">.</span><span class="na">com</span><span class="err">/#/</span><span class="na">playlist</span><span class="err">?</span><span class="na">id</span><span class="o">=</span><span class="s">60198&#34;</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<meting-js auto="https://music.163.com/#/playlist?id=60198" theme="#448aff"></meting-js>
<h2 id="custom-server">3 Custom Server, Type and ID</h2>
<p>The <code>music</code> shortcode has the following named parameters by custom music platform:</p>
<ul>
<li>
<p><strong>server</strong> <em>[required]</em> (<strong>first</strong> positional parameter)</p>
<p>[<code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code>]</p>
<p>Music platform.</p>
</li>
<li>
<p><strong>type</strong> <em>[required]</em> (<strong>second</strong> positional parameter)</p>
<p>[<code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code>]</p>
<p>Type of the music.</p>
</li>
<li>
<p><strong>id</strong> <em>[required]</em> (<strong>third</strong> positional parameter)</p>
<p>Song ID, or playlist ID, or album ID, or search keyword, or artist ID.</p>
</li>
</ul>
<p>Example <code>music</code> input by custom music platform:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">music</span> <span class="na">server</span><span class="o">=</span><span class="s">&#34;netease&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;song&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;1868553&#34;</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">music</span> <span class="na">netease</span> <span class="na">song</span> <span class="na">1868553</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<meting-js server="netease" type="song" id="1868553" theme="#448aff"></meting-js>
<h2 id="other-parameters">4 Other Parameters</h2>
<p>The <code>music</code> shortcode has other named parameters applying to the above three ways:</p>
<ul>
<li>
<p><strong>theme</strong> <em>[optional]</em></p>
<p><a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.0" rel="noopener noreffer" target="_blank"></a> Main color of the music player, default value is <code>#448aff</code>.</p>
</li>
<li>
<p><strong>fixed</strong> <em>[optional]</em></p>
<p>Whether to enable fixed mode, default value is <code>false</code>.</p>
</li>
<li>
<p><strong>mini</strong> <em>[optional]</em></p>
<p>Whether to enable mini mode, default value is <code>false</code>.</p>
</li>
<li>
<p><strong>autoplay</strong> <em>[optional]</em></p>
<p>Whether to autoplay music, default value is <code>false</code>.</p>
</li>
<li>
<p><strong>volume</strong> <em>[optional]</em></p>
<p>Default volume when the player is first opened, which will be remembered in the browser, default value is <code>0.7</code>.</p>
</li>
<li>
<p><strong>mutex</strong> <em>[optional]</em></p>
<p>Whether to pause other players when this player starts playing, default value is <code>true</code>.</p>
</li>
</ul>
<p>The <code>music</code> shortcode has the following named parameters only applying to the type of music list:</p>
<ul>
<li>
<p><strong>loop</strong> <em>[optional]</em></p>
<p>[<code>all</code>, <code>one</code>, <code>none</code>]</p>
<p>Loop mode of the music list, default value is <code>none</code>.</p>
</li>
<li>
<p><strong>order</strong> <em>[optional]</em></p>
<p>[<code>list</code>, <code>random</code>]</p>
<p>Play order of the music list, default value is <code>list</code>.</p>
</li>
<li>
<p><strong>list-folded</strong> <em>[optional]</em></p>
<p>Whether the music list should be folded at first, default value is <code>false</code>.</p>
</li>
<li>
<p><strong>list-max-height</strong> <em>[optional]</em></p>
<p>Max height of the music list, default value is <code>340px</code>.</p>
</li>
</ul>]]></description></item><item><title>Theme Documentation - bilibili Shortcode</title><link>https://nuxulu.com/theme-documentation-bilibili-shortcode/</link><pubDate>Tue, 03 Mar 2020 11:29:41 +0800</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/theme-documentation-bilibili-shortcode/</guid><description><![CDATA[<a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.0" rel="noopener noreffer" target="_blank"></a>
<p>The <code>bilibili</code> shortcode embeds a responsive video player for bilibili videos.</p>
<p>When the video only has one part, only the BV <code>id</code> of the video is required, e.g.:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://www.bilibili.com/video/BV1Sx411T7QQ
</span></span></code></pre></td></tr></table>
</div>
</div><p>Example <code>bilibili</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">bilibili</span> <span class="na">BV1Sx411T7QQ</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">bilibili</span> <span class="na">id</span><span class="o">=</span><span class="s">BV1Sx411T7QQ</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1Sx411T7QQ&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>

<p>When the video has multiple parts, in addition to the BV <code>id</code> of the video,
<code>p</code> is also required, whose default value is <code>1</code>, e.g.:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://www.bilibili.com/video/BV1TJ411C7An?p=3
</span></span></code></pre></td></tr></table>
</div>
</div><p>Example <code>bilibili</code> input with <code>p</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">bilibili</span> <span class="na">BV1TJ411C7An</span> <span class="na">3</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">Or
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">bilibili</span> <span class="na">id</span><span class="o">=</span><span class="s">BV1TJ411C7An</span> <span class="na">p</span><span class="o">=</span><span class="s">3</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1TJ411C7An&page=3" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>]]></description></item><item><title>Theme Documentation - typeit Shortcode</title><link>https://nuxulu.com/theme-documentation-typeit-shortcode/</link><pubDate>Tue, 03 Mar 2020 10:29:41 +0800</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/theme-documentation-typeit-shortcode/</guid><description><![CDATA[<p>The <code>typeit</code> shortcode provides typing animation based on <a href="https://typeitjs.com/" target="_blank" rel="noopener noreffer ">TypeIt</a> library.</p>
<p>Just insert your content in the <code>typeit</code> shortcode and thatâ€™s it.</p>
<h2 id="simple-content">1 Simple Content</h2>
<p>Simple content is allowed in <code>Markdown</code> format and <strong>without</strong> rich block content such as images and more&hellip;</p>
<p>Example <code>typeit</code> input:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">This is a <span class="ge">*paragraph*</span> with <span class="gs">**typing animation**</span> based on [<span class="nt">TypeIt</span>](<span class="na">https://typeitjs.com/</span>)...
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="typeit"><div id="id-1"></div></div>

<p>Alternatively, you can use custom <strong>HTML tags</strong>.</p>
<p>Example <code>typeit</code> input with <code>h4</code> tag:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">typeit</span> <span class="na">tag</span><span class="o">=</span><span class="s">h4</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">This is a <span class="ge">*paragraph*</span> with <span class="gs">**typing animation**</span> based on [<span class="nt">TypeIt</span>](<span class="na">https://typeitjs.com/</span>)...
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="typeit"><h4 id="id-2"></h4></div>

<h2 id="code-content">2 Code Content</h2>
<p>Code content is allowed and will be highlighted by named parameter <code>code</code> for the type of code language.</p>
<p>Example <code>typeit</code> input with <code>code</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">typeit</span> <span class="na">code</span><span class="o">=</span><span class="s">java</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">public class HelloWorld {
</span></span><span class="line"><span class="cl">    public static void main(String []args) {
</span></span><span class="line"><span class="cl">        System.out.println(&#34;Hello World&#34;);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="typeit"><div id="id-3" class="highlight"></div></div>

<h2 id="group-content">3 Group Content</h2>
<p>All typing animations start at the same time by default.
But sometimes you may want to start a set of <code>typeit</code> contents in order.</p>
<p>A set of <code>typeit</code> contents with the same value of named parameter <code>group</code> will start typing animation in sequence.</p>
<p>Example <code>typeit</code> input with <code>group</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">typeit</span> <span class="na">group</span><span class="o">=</span><span class="s">paragraph</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl"><span class="gs">**First**</span> this paragraph begins
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">typeit</span> <span class="na">group</span><span class="o">=</span><span class="s">paragraph</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl"><span class="gs">**Then**</span> this paragraph begins
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">typeit</span> <span class="p">&gt;</span>}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>The rendered output looks like this:</p>
<div class="typeit"><div id="id-4"></div></div>

<div class="typeit"><div id="id-5"></div></div>]]></description></item><item><title>Extend on-hand inventory entities FinOps</title><link>https://nuxulu.com/2022-11-13-extend-on-hand-entities-fin-ops/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/2022-11-13-extend-on-hand-entities-fin-ops/</guid><description><![CDATA[<p>There are some entities that you can use to get the on-hand inventory from Dynamics 365 Finance Operations:</p>
<p><i class="fa-solid fa-shield-check" aria-hidden="true"></i></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="n">InventorySiteOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventorySiteOnHandV2Entity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseInventoryStatusOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseInventoryStatusOnHandV2Entity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseOnHandV2Entity</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can extend the ententies by <a href="/2022-09-23-add-custom-fields-to-composite-entity/" rel="">adding new fields to tables and entities</a>.</p>
<p>After you add fields to tables that are used by the <code>inventSiteOnHandView</code> view, you must sync the engine so that the extensions are correctly recognized.</p>
<ol>
<li>Extend the <code>InventSiteOnHandView</code> view by adding the extension field.</li>
<li>Extend the <code>InventSiteOnHandAggregatedView</code> view with the extension fields.</li>
<li>Extend the <code>InventSiteOnHandAggregatedViewBuilder</code> viewBuilder class by modifying the <code>getExtensionFields()</code> method. In this way, you map old view fields to new view fields when viewBuilder synchronization is run.</li>
</ol>
<p>For example, you&rsquo;ve added the following four fields to the InventTable table through extension:</p>
<ul>
<li>Custom field 1</li>
<li>Custom field 2</li>
<li>Custom field 3</li>
<li>Custom field 4</li>
</ul>
<p>In the case, you must modify the <code>getExtensionFields()</code> method in the following way.</p>
]]></description></item><item><title>Reservation and on-hand inventory in warehouse management</title><link>https://nuxulu.com/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/</guid><description><![CDATA[<h2 id="1-inventory-reservation-hierarchy-in-warehouse-management">1. <strong>Inventory reservation hierarchy in Warehouse management</strong></h2>
<p>The reservation functionality can be used only for items that are enabled for warehouse management processes. However, if an item is itself enabled for <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/flexible-warehouse-level-dimension-reservation" target="_blank" rel="noopener noreffer ">warehouse management processes</a>, it can be used both in warehouses that are enabled for warehouse management processes and warehouses that are not. The behavior in reservation scenarios is different, depending on the warehouse setup.</p>
<p>The functionality is built on reservation hierarchies and is intended to support the following:</p>
<ul>
<li>Flexible warehouse operations.</li>
<li>Postponement of reservation details.</li>
<li>Clear separation of which inventory dimensions can be specified, and when they can be specified.</li>
</ul>
<h3 id="11-reservation-hierarchies">1.1 <strong>Reservation hierarchies</strong></h3>
<p>A typical reservation hierarchy for an item that uses the <code>Site</code>, <code>Warehouse</code>, <code>Inventory status</code>, <code>Location</code>, and <code>License plate</code> dimensions as physical inventory dimensions.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies.png" data-sub-html="<h2>Reservation-hierarchies</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Reservation-hierarchies</figcaption>
    </figure></p>
<p>The level with the lowest value in the Reservation hierarchy level column is the least-specific level, in the example above this is the site level.
The higher the value, the more details are required to make a reservation on that level.</p>
<h3 id="12-reservation-hierarchies-implementation">1.2 <strong>Reservation hierarchies implementation</strong></h3>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies-implementation.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies-implementation.png" data-sub-html="<h2>Reservation-hierarchies-implementation</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Reservation-hierarchies-implementation</figcaption>
    </figure></p>
<p>The definitions of reservation hierarchies are stored in the <strong>WHSReservationHierarchy</strong> and <strong>WHSReservationHierarchyElement</strong> tables. These are shared tables. A reservation hierarchy can be associated with one item within a company which presents by <strong>WHSReservationHierarchyItem</strong>.
The <strong>WHSReservationHierarchyProvider</strong> class provides a large number of APIs that are useful when you work with and query the reservation hierarchy for an item.</p>
<h3 id="13-making-reservations-on-different-levels">1.3 Making reservations on different levels</h3>
<p>Based on the reservation hierarchy, you can make reservations on different levels without providing details about where to reserve and what dimensions to reserve on. This lets you postpone specific details, such as the location or license plate to make the reservation. The location to reserve items on can be determined later by the <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/warehouse-configuration" target="_blank" rel="noopener noreffer "><strong>location directive</strong></a>.</p>
<p>As another example, you make reservations for a sales order created on <strong>site</strong> <code>Site1</code> and <strong>warehouse</strong> <code>WHS42</code>, which is a warehouse that is enabled for WHS processes, and for the Available inventory status. For this example, the reservation is made only
on the inventory status level.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservations-on-different-levels.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservations-on-different-levels.png" data-sub-html="<h2>reservations-on-different-levels</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">reservations-on-different-levels</figcaption>
    </figure></p>
<p>Location <code>Main006</code> will be specified when processing the work</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/location.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/location.png" data-sub-html="<h2>location</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">location</figcaption>
    </figure></p>
<h2 id="2-impact-of-the-reservation-hierarchy-setup">2. Impact of the reservation hierarchy setup</h2>
<p>For warehouses that are enabled for warehouse management processes, the setup of reservation hierarchies greatly affects the processes for <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/release-to-warehouse-process" target="_blank" rel="noopener noreffer ">outbound orders</a>, such as sales orders and transfer orders.</p>
<p>When you set up a reservation hierarchy, the key is to determine which dimensions should be positioned above the location level in the hierarchy, and which should be below. The following table describes the effects of arranging dimensions either above or below the location level.</p>
<table>
<thead>
<tr>
<th>Dimension placement</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dimension above location</td>
<td>The inventory dimension above the location level must be determined before the</td>
</tr>
<tr>
<td></td>
<td>Warehouse management functionality can be used. Therefore, this typically happens</td>
</tr>
<tr>
<td></td>
<td>during order processing or by letting the reservation system determine the dimensions.</td>
</tr>
<tr>
<td>Batch above location</td>
<td>Process industry functionality for batches requires that the Batch number dimension be</td>
</tr>
<tr>
<td></td>
<td>above the Location dimension in the reservation hierarchy. When this is the case, all</td>
</tr>
<tr>
<td></td>
<td>functionality for First Expiry First Out (FEFO), same batch, batch disposition codes, and</td>
</tr>
<tr>
<td></td>
<td>batch attributes is supported.</td>
</tr>
<tr>
<td>Dimensions below location</td>
<td>WHS and warehouse workers can determine the Location dimension and the</td>
</tr>
<tr>
<td></td>
<td>dimensions below it.</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>The Location dimension and any dimensions below it should not be entered into the sales</td>
</tr>
<tr>
<td></td>
<td>and transfer lines if you expect work to be created. For example, if the Batch number</td>
</tr>
<tr>
<td></td>
<td>dimension is below the Location dimension, it should not be specified on the sales line.</td>
</tr>
<tr>
<td></td>
<td>Otherwise, WHS cannot create work to carry out the pick and pack operations.</td>
</tr>
</tbody>
</table>
<h2 id="3-on-hand-representation-and-calculations">3. On-hand representation and calculations</h2>
<h3 id="31-on-hand-for-items-that-are-using-warehouse-management-processes">3.1 On-hand for items that are using warehouse management processes</h3>
<p>The following table shows how the data might look for an item with 10 pieces available physical and 2 pieces reserved physical on the status level.</p>
<table>
<thead>
<tr>
<th>Level</th>
<th>Site</th>
<th>Warehouse</th>
<th>Inventory status</th>
<th>Location</th>
<th>License plate</th>
<th>Available physical</th>
<th>Available ordered</th>
<th>Reserved physical</th>
<th>Reserved ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>Item</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Site</td>
<td>S1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Warehouse</td>
<td>S1</td>
<td>WH1</td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Status</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Location</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td>L001</td>
<td></td>
<td>12</td>
<td>12</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>License plate</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td>L001</td>
<td>LP1</td>
<td>12</td>
<td>12</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>The reservations are tracked only on the levels that are affected by the reservation. Because of the way that information about availability and reservations is stored, the corresponding values from the <strong>InventSum</strong> table cannot be used directly for items that are using warehouse management processes.</p>
<p>The following steps provide a high-level overview of the algorithm that determines the available on-hand quantity for
an item and a set of inventory dimensions:</p>
<ul>
<li>Determine the available on-hand quantity, based on the exact dimensions. This is the lowest level in the hierarchy.</li>
<li>Determine the smallest available quantity from all levels above the level found in step 1.</li>
<li>Return the smaller of the quantities found in step 1 and step 2. This is the available quantity.</li>
</ul>
<h4 id="example-a">Example A</h4>
<p>The following physical inventory exists for the item (some dimensions like site, inventory status, license plate are irrelevant and are omitted throughout the scenario):</p>
<ul>
<li><em>Warehouse: W1, Location: L1, Physical inventory: 6</em></li>
</ul>
<p>A sales order with one line is created and reserved:</p>
<ul>
<li><em>Warehouse: W1, Quantity: 5</em></li>
</ul>
<p>The sales order is released to warehouse. As a result warehouse work is created:</p>
<ul>
<li><em>Work type: Pick, Warehouse: W1, Location: L1, Quantity: 5</em></li>
<li><em>Work type: Put, Warehouse: W1, Location: Baydoor, Quantity: 5</em></li>
</ul>
<p>Now we have the following inventory transactions:</p>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Warehouse</th>
<th>Location</th>
<th>Status issue</th>
<th>Quantity</th>
</tr>
</thead>
<tbody>
<tr>
<td>Sales line</td>
<td>W1</td>
<td></td>
<td>Reserved physical</td>
<td>-5</td>
</tr>
<tr>
<td>Pick work</td>
<td>W1</td>
<td>L1</td>
<td>Reserved physical</td>
<td>-5</td>
</tr>
<tr>
<td>Put work</td>
<td>W1</td>
<td>Baydoor</td>
<td>Ordered</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>So once we roll up the transactions into the <strong>InventSum</strong> table the contents of the table will look like this</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Location</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td></td>
<td>0</td>
<td>5</td>
<td>-5</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L1</td>
<td>6</td>
<td>5</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>Baydoor</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>On hand quantities for warehouse W1 like we used to do it in versions prior to AX 2012 R3 (sum up InventSum quantities for warehouse W1)</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td>6</td>
<td>10</td>
<td>-4</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>We should have shipped 5 items and we have 6 items on stock, 1 item is available. This is exactly the reason why summing up available and reserved quantities from the <strong>InventSum</strong> table may produce incorrect results for items that use warehouse management processes.</p>
<p>The sales reservation was taken on the warehouse level of the reservation hierarchy to ensure that we keep enough on hand in the warehouse to ship the reserved quantity. The pick work reservation was taken on the location level and it ensures that the reserved quantity will still be physically available when the warehouse worker comes to the warehouse location to pick it. Work reservation does not affect physical availability on the warehouse level. This means that the new reservation engine will be able to figure out that we still have one item available on the warehouse level.</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td>6</td>
<td>5</td>
<td>1</td>
<td>5</td>
</tr>
</tbody>
</table>
<h4 id="example-b">Example B</h4>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Warehouse</th>
<th>Location</th>
<th>Status issue</th>
<th>Status receipt</th>
<th>Quantity</th>
</tr>
</thead>
<tbody>
<tr>
<td>Purchase line</td>
<td>W1</td>
<td>L1</td>
<td></td>
<td>Purchased</td>
<td>10</td>
</tr>
<tr>
<td>Purchase line</td>
<td>W1</td>
<td>L2</td>
<td></td>
<td>Purchased</td>
<td>20</td>
</tr>
<tr>
<td>Sales line</td>
<td>W1</td>
<td></td>
<td>Reserved physical</td>
<td></td>
<td>-25</td>
</tr>
<tr>
<td>Pick work</td>
<td>W1</td>
<td>L1</td>
<td>Reserved physical</td>
<td></td>
<td>-10</td>
</tr>
<tr>
<td>Put work</td>
<td>W1</td>
<td>Baydoor</td>
<td>Ordered</td>
<td></td>
<td>10</td>
</tr>
</tbody>
</table>
<p>After the transactions are aggregated the <strong>InventSum</strong> table contains the following information</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Location</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td></td>
<td>0</td>
<td>25</td>
<td>-25</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L1</td>
<td>10</td>
<td>10</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L2</td>
<td>20</td>
<td>0</td>
<td>20</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>Baydoor</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>10</td>
</tr>
</tbody>
</table>
<p>For each of the levels of the reservation hierarchy it stores available and reserved quantities in the <code>WHSInventReserve</code> table which allows the engine to calculate availability correctly.</p>
<p>To work with available quantities regardless of whether the item is using warehouse management processes or not the <code>InventIAvailability</code> interface was introduced. The following list contains the InventSum fields and methods that should not be used directly and the corresponding InventIAvailability methods that should be used instead:</p>
<table>
<thead>
<tr>
<th>Obsolete field/method</th>
<th>Corresponding InventIAvailability method</th>
</tr>
</thead>
<tbody>
<tr>
<td>InventSum.AvailOrdered</td>
<td>InventIAvailability.availTotal()</td>
</tr>
<tr>
<td>InventSum.availOrderedCalculated()</td>
<td>InventIAvailability.availTotal()</td>
</tr>
<tr>
<td>InventSum.AvailPhysical</td>
<td>InventIAvailability.availPhysical()</td>
</tr>
<tr>
<td>InventSum.availPhysicalCalculated()</td>
<td>InventIAvailability.availPhysical()</td>
</tr>
<tr>
<td>InventSum.availReservation()</td>
<td>InventIAvailability.availReservation()</td>
</tr>
<tr>
<td>InventSum.Ordered</td>
<td>InventIAvailability.ordered()</td>
</tr>
<tr>
<td>InventSum.orderedSum()</td>
<td>InventIAvailability.orderedSum()</td>
</tr>
<tr>
<td>InventSum.ReservOrdered</td>
<td>InventIAvailability.reservOrdered()</td>
</tr>
<tr>
<td>InventSum.ReservPhysical</td>
<td>InventIAvailability.reservPhysical()</td>
</tr>
</tbody>
</table>
<h3 id="32-implementation-of-on-hand-calculations">3.2 Implementation of on-hand calculations</h3>
<p>Three major APIs were introduced for retrieving item availability:</p>
<p>â€“ <code>InventAvailabilityProvider</code>
â€“ <code>InventAvailabilityFormCache</code>
â€“ <code>InventOnhand</code></p>
<ul>
<li><strong>InventAvailabilityProvider</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventIAvailability</span>  <span class="n">inventIAvailability</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">findByItemDim</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                                            <span class="n">InventTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">itemdId</span><span class="p">),</span> <span class="n">dim</span><span class="p">).</span><span class="n">parmInventAvailability</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventIAvailability, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">ordered</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">()));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">InventAvailabilityByUnit</span> <span class="n">inventAvailabilityByUnitSum</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">findByItemSumDim</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                                                        <span class="n">InventTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">itemdId</span><span class="p">),</span> <span class="n">inventSum</span><span class="p">,</span> <span class="n">dim</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventAvailabilityByUnitSum, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="k">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">ordered</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="k">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="k">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="k">false</span><span class="p">)));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>InventAvailabilityFormCache</strong></li>
</ul>
<p>In scenarios where you want to display available quantities on a form you can use the InventAvailabilityFormCache class.
It is responsible for retrieving and caching available on hand quantities per item per inventory dimension combination. To use it on a form you need to:</p>
<p>â€“ Declare an <code>InventAvailabilityFormCache</code> field in <code>classDeclaration</code> of the form.
â€“ Initialize the cache field in the <code>init</code> method of the form:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="k">init</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventAvailabilityFormCache</span> <span class="p">=</span> <span class="n">InventAvailabilityFormCache</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>â€“ Flush the cache in the <code>executeQuery</code> method of the primary data source that the <code>InventSum</code> data source is joined to:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">executeQuery</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">refreshCache</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>â€“ Create display methods for available on hand fields that need to be displayed on the form. If <code>InventDim</code> is joined to <code>InventSum</code> then the display methods should be declared on the <code>InventSum</code> data source:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="n">display</span> <span class="n">InventQtyReservPhysical</span> <span class="n">reservPhysical</span><span class="p">(</span><span class="n">InventSum</span> <span class="n">_inventSum</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">availabilityFromSumJoinedWithDim</span><span class="p">(</span><span class="n">_inventSum</span><span class="p">,</span> <span class="n">inventDim_ds</span><span class="p">).</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that the <code>availabilityFromSumJoinedWithDim</code> method should be used. Otherwise, if <code>InventSum</code> is joined to InventDim then the display method should be declared on the <code>InventDim</code> data source:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="n">display</span> <span class="n">InventQtyReservPhysical</span> <span class="n">reservPhysical</span><span class="p">(</span><span class="n">InventDim</span> <span class="n">_inventDim</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">availabilityFromDimJoinedWithSum</span><span class="p">(</span><span class="n">_inventDim</span><span class="p">,</span> <span class="n">inventSum_ds</span><span class="p">).</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that the <code>availabilityFromDimJoinedWithSum</code> method should be used.</p>
<ul>
<li><strong>InventOnhand</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventOnhand</span> <span class="n">inventOnHand</span> <span class="p">=</span> <span class="n">InventOnhand</span><span class="p">::</span><span class="n">newParameters</span><span class="p">(</span><span class="n">itemdId</span><span class="p">,</span> <span class="n">dim</span> <span class="p">,</span> <span class="n">dimParm</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventOnHand, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">ordered</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">()));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The on-hand information is stored in a table called <code>WHSInventReserve</code>. The <code>WHSInventReserveDelta</code> table is used to track changes that the current transaction causes in the on-hand quantity. On the final commit, the <code>WHSInventReserve</code> table is updated based on the changes in the <code>WHSInventReserveDelta</code> table.</p>
<p>Because many scenarios involve calculating on-hand quantities based on <code>itemId</code>, <code>InventDim</code>, or <code>InventSum</code> records for
both WHS-enabled and non-WHS-enabled items, APIs are provided to support the calculations in a seamless way.</p>
<p>The following example shows how to instantiate the class that can be used to calculate availability for both WHSenabled and non-WHS-enabled items.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventAvailabilitySearch</span> <span class="n">availabilitySearch</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">InventIAvailability</span> <span class="n">availability</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span> <span class="p">=</span> <span class="n">InventAvailabilitySearch</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setItemId</span><span class="p">(</span><span class="n">_itemId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setInventDimCriteria</span><span class="p">(</span><span class="n">_inventDimCriteria</span><span class="p">,</span> <span class="n">_inventDimCriteriaParm</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setInventSum</span><span class="p">(</span><span class="n">_inventSum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availability</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">construct</span><span class="p">().</span><span class="n">find</span><span class="p">(</span><span class="n">availabilitySearch</span><span class="p">).</span><span class="n">parmInventAvailability</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">AvailOrderedCalculated</span>         <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">availTotal</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">AvailPhysicalCalculated</span>        <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">ReservPhysical</span>                 <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">OrderedSum</span>                     <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">orderedSum</span><span class="p">();</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>InventAvailabilityProvider</code> class provides numerous other APIs that are used to determine the availability based on various types of input. The existing <code>InventOnHandQty</code> class has been updated so that it also provides correct results for items that are enabled for warehouse management processes.</p>
<p>The following illustration shows the various classes and interfaces that are used to provide and encapsulate the calculations. Note that, for the sake of simplicity, some details have been omitted.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/InventAvailabilityProvider.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/InventAvailabilityProvider.png" data-sub-html="<h2>InventAvailabilityProvider</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">InventAvailabilityProvider</figcaption>
    </figure></p>
<h2 id="4-reservation-strategies">4. Reservation strategies</h2>
<p>To control the levels of the reservation hierarchy at which reservations are made, the system uses the concept of a reservation strategy. A reservation strategy determines the outcome of a reservation, and the dimensions that are used to make the reservation. Reservation strategies are implemented in the code and are not currently user-configurable.</p>
<p>Each reservation strategy determines the level that the reservation should be made on. If the dimensions that are passed to the reservation system do not cover all the dimensions to the level defined by the strategy, the reservation system queries the on-hand availability until the required level; then, based on the results of this query, it does the reservation so that it covers all the required dimensions.</p>
<p>The reservation strategies that are chosen for a reservation depend on multiple factors, such as the following:
â€¢ Warehouse setup
â€¢ Order type</p>
<p>The following table describes the reservation strategies that the reservation system uses.</p>
<table>
<thead>
<tr>
<th>Reservation strategy</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>None</td>
<td>The reservation is made on the dimensions that are passed, if possible. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used by inventory blocking, and lets you make reservations on, for example, the site</td>
</tr>
<tr>
<td></td>
<td>level or the warehouse level.</td>
</tr>
<tr>
<td>All</td>
<td>The reservation is made on all of the dimensions in the reservation hierarchy. This</td>
</tr>
<tr>
<td></td>
<td>strategy is used, for example, for transfer journals, or for warehouses that have not</td>
</tr>
<tr>
<td></td>
<td>been enabled for warehouse management processes.</td>
</tr>
<tr>
<td>Above location</td>
<td>The reservation is made only on the locations above the location level. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used, for example, for sales and transfer orders when reservations are made in a</td>
</tr>
<tr>
<td></td>
<td>warehouse that is enabled for warehouse management processes.</td>
</tr>
<tr>
<td>All not allowed blank</td>
<td>The reservation is made on the first lowest level that does not allow for blank issue for</td>
</tr>
<tr>
<td></td>
<td>the inventory dimensions. This strategy enables automatic reservations on non-licenseplate-controlled locations.</td>
</tr>
<tr>
<td>Batch level</td>
<td>This strategy is applied for items for which the Batch number dimension is selected and</td>
</tr>
<tr>
<td></td>
<td>positioned above the Location dimension in the reservation hierarchy. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used when only reservations that are reserved ordered can be made. In that case, a</td>
</tr>
<tr>
<td></td>
<td>reservation until the batch level is attempted.</td>
</tr>
</tbody>
</table>
<p>The reservation system supports multiple reservation strategies in sequential order when reservations are made. For example, the system uses the All and All not allowed blank strategies to make reservations for transfer journals.</p>
<h2 id="5-details-about-the-implementation-of-reservation-strategies">5. Details about the implementation of reservation strategies</h2>
<p>The following illustration shows the classes that are used to implement the reservation strategies, and the main consumers of the classes. Note that, for the sake of simplicity, some details have been omitted.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservation-strategies.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservation-strategies.png" data-sub-html="<h2>reservation-strategies</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">reservation-strategies</figcaption>
    </figure></p>
<p>The implementation is easy to extend, because the instantiation uses the <code>SysExtension</code> framework.</p>
<h2 id="6-synchronization-of-dimensions-between-receipts-and-issues">6. Synchronization of dimensions between receipts and issues</h2>
<p>When an inventory transaction is marked or reserved ordered, the inventory dimensions are typically synchronized between <em>receipts</em> and <em>issues</em>. For example, when a purchase order that was created based on a sales order is modified or received, the dimensions are transferred to the inventory transactions for the sales line.</p>
<p>For items that are enabled for warehouse management processes, the synchronization differs from the standard behavior. When work must be created, the source line transactions can be reserved only until the level above the location level. If all dimensions are synchronized, work cannot be created. Therefore, dimensions above the location level are not synchronized for all scenarios.</p>
<p>If the item and warehouse are enabled for warehouse management processes, and if the issue type is a type that can generate work, such as a sales line, only dimensions above the location level are synchronized. This means that if an item uses batch numbers, and the batch number is placed below the location in the reservation hierarchy, the batch number is not synchronized from receipt to issue transactions.</p>
<h2 id="7-details-about-the-implementation-of-synchronization-between-receipts-and-issues">7. Details about the implementation of synchronization between receipts and issues</h2>
<p>The logic that determines how the dimensions are synchronized is implemented in the following methods on the <strong>inventMovement</strong> class:</p>
<ul>
<li><code>getInventDimForReservedTransPhysChange</code></li>
<li><code>getInventDimForIssueTransFromReceipt</code></li>
</ul>
]]></description></item><item><title>How to get FinOps Azure storage blob connection string</title><link>https://nuxulu.com/2022-10-27-how-to-get-d365-azure-blob-storage-str/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/2022-10-27-how-to-get-d365-azure-blob-storage-str/</guid><description><![CDATA[<p>In Dynamics 365 for Finance and Operations Azure storage is used to</p>
<ul>
<li>Store files for <a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/organization-administration/configure-document-management" target="_blank" rel="noopener noreffer ">Attachments</a></li>
<li><a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/data-import-export-job" target="_blank" rel="noopener noreffer ">Data import and export jobs</a></li>
<li>When FinOps prints a report via <a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/document-reporting-services?context=%2Fdynamics365%2Fcontext%2Fcommerce" target="_blank" rel="noopener noreffer ">Document Reporting Services</a>, SSRS Reporting Services generates an <a href="https://ax.docentric.com/printing-reports-with-custom-fonts-in-dynamics-365-for-finance-and-operations/" target="_blank" rel="noopener noreffer ">EMF image</a> for each page of the generated document. FinOps then temporarily saves the generated EMF files to Azure Blob storage.</li>
<li><a href="https://learn.microsoft.com/en-us/dynamicsax-2012/appuser-itpro/print-a-report-from-the-archive" target="_blank" rel="noopener noreffer ">Printing archive</a></li>
</ul>
<p>And more!</p>
<p>If you are using tier 1 Cloud-Hosted environment, you can find the azure storage from the Azure resource group in Azure portal.</p>
<p>For tier 1, UAT tier 2, and PROD Tier 3, you can create a runnable class and execute to get the Azure storage connection string.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">Microsoft.Dynamics.Clx.ServicesWrapper</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">GetAzureBlob</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="err">&#39;</span><span class="n">AzureStorageConnectionString</span> <span class="p">=</span> <span class="err">&#39;</span> <span class="p">+</span> <span class="n">CloudInfrastructure</span><span class="p">::</span><span class="n">GetCsuStorageConnectionString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="err">&#39;</span><span class="n">ClientCertificateThumbprint</span> <span class="p">=</span> <span class="err">&#39;</span> <span class="p">+</span> <span class="n">CloudInfrastructure</span><span class="p">::</span><span class="n">GetCsuClientCertificateThumbprint</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once you have the connection string, you can connect it to <a href="https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows" target="_blank" rel="noopener noreffer ">MS Azure Storage Explorer</a>, Power Automate, or consuming in any framwork/language for integration/backup purposes.</p>
]]></description></item><item><title>How to remove SSRS reports in FinOps Cloud-Hosted</title><link>https://nuxulu.com/2022-10-20-how-to-remove-ssrs-reports-in-d365/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://nuxulu.com/2022-10-20-how-to-remove-ssrs-reports-in-d365/</guid><description><![CDATA[<p>There are 2 ways that you can delete SSRS reports in FinOps cloud-Hosted</p>
<h2 id="1-using-report-server-configuiration-manager-web-portal">1. Using Report server configuiration manager web portal</h2>
<p>Open Report server configuiration manager from your VM FinOps Cloud-Hosted and active the <strong>Web Portal</strong></p>
<p><figure><a class="lightgallery" href="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-1.png" title="Image" data-thumbnail="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-1.png" data-sub-html="<h2>2022-10-20-how-to-remove-ssrs-reports-in-d365-1</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">2022-10-20-how-to-remove-ssrs-reports-in-d365-1</figcaption>
    </figure></p>
<p>You can delete any report from <code>[Servername]/Reports/browse/Dynamics</code></p>
<p><figure><a class="lightgallery" href="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-3.png" title="Image" data-thumbnail="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-3.png" data-sub-html="<h2>2022-10-20-how-to-remove-ssrs-reports-in-d365-3</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">2022-10-20-how-to-remove-ssrs-reports-in-d365-3</figcaption>
    </figure></p>
<h2 id="2-using-powershell-script">2. Using Powershell script</h2>
<p>Go to <code>RemoveAllReportsFromSsrs.ps1</code> under <code>K:\AosService\PackagesLocalDirectory\Plugins\AxReportVmRoleStartupTask</code></p>
<p>Run the script to remove all SSRS report.</p>
<p>If you want to remove a specific report, you can manipulate the $ReportName</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">################################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c"># This script is used to manually remove reports to SSRS server</span>
</span></span><span class="line"><span class="cl"><span class="c">################################################################################</span>
</span></span><span class="line"><span class="cl"><span class="k">param</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[string]</span><span class="nv">$LogFilePath</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Alias</span><span class="p">(</span><span class="s2">&#34;ReportServerFqdn&#34;</span><span class="p">,</span> <span class="s2">&#34;ReportServerName&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[string[]]</span><span class="nv">$ReportServerIp</span> <span class="p">=</span> <span class="s2">&#34;127.0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[string[]]</span><span class="nv">$ReportName</span> <span class="p">=</span> <span class="s2">&#34;[report-name].[design-name]&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[switch]</span><span class="nv">$UseHttps</span> <span class="p">=</span> <span class="nv">$false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[int]</span><span class="nv">$HttpsPort</span> <span class="p">=</span> <span class="n">443</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[switch]</span><span class="nv">$Help</span> <span class="p">=</span> <span class="nv">$false</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check <a href="/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/" rel="">this article</a> for deploy report using PS script.</p>
]]></description></item></channel></rss>