<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Dynamics 365 Finance &amp; Operations | nuxulu.com</title>
        <link>https://nuxulu.com/posts/</link>
        <description>All Posts | Dynamics 365 Finance &amp; Operations | nuxulu.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor>
            <webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Thu, 20 Oct 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>How to remove SSRS reports in FinOps Cloud-Hosted</title>
    <link>https://nuxulu.com/2022-10-20-how-to-remove-ssrs-reports-in-d365/</link>
    <pubDate>Thu, 20 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2022-10-20-how-to-remove-ssrs-reports-in-d365/</guid>
    <description><![CDATA[<p>There are 2 ways that you can delete SSRS reports in FinOps cloud-Hosted</p>
<h2 id="1-using-report-server-configuiration-manager-web-portal">1. Using Report server configuiration manager web portal</h2>
<p>Open Report server configuiration manager from your VM FinOps Cloud-Hosted and active the <strong>Web Portal</strong></p>
<p><figure><a class="lightgallery" href="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-1.png" title="Image" data-thumbnail="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-1.png" data-sub-html="<h2>2022-10-20-how-to-remove-ssrs-reports-in-d365-1</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">2022-10-20-how-to-remove-ssrs-reports-in-d365-1</figcaption>
    </figure></p>
<p>You can delete any report from <code>[Servername]/Reports/browse/Dynamics</code></p>
<p><figure><a class="lightgallery" href="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-3.png" title="Image" data-thumbnail="/2022-10-20-how-to-remove-ssrs-reports-in-d365/2022-10-20-how-to-remove-ssrs-reports-in-d365-3.png" data-sub-html="<h2>2022-10-20-how-to-remove-ssrs-reports-in-d365-3</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">2022-10-20-how-to-remove-ssrs-reports-in-d365-3</figcaption>
    </figure></p>
<h2 id="1-using-powershell-script">1. Using Powershell script</h2>
<p>Go to <code>RemoveAllReportsFromSsrs.ps1</code> under <code>K:\AosService\PackagesLocalDirectory\Plugins\AxReportVmRoleStartupTask</code></p>
<p>Run the script to remove all SSRS report.</p>
<p>If you want to remove a specific report, you can manipulate the $ReportName</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">################################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c"># This script is used to manually remove reports to SSRS server</span>
</span></span><span class="line"><span class="cl"><span class="c">################################################################################</span>
</span></span><span class="line"><span class="cl"><span class="k">param</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[string]</span><span class="nv">$LogFilePath</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Alias</span><span class="p">(</span><span class="s2">&#34;ReportServerFqdn&#34;</span><span class="p">,</span> <span class="s2">&#34;ReportServerName&#34;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[string[]]</span><span class="nv">$ReportServerIp</span> <span class="p">=</span> <span class="s2">&#34;127.0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[string[]]</span><span class="nv">$ReportName</span> <span class="p">=</span> <span class="s2">&#34;[report-name].[design-name]&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[switch]</span><span class="nv">$UseHttps</span> <span class="p">=</span> <span class="nv">$false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="no">[int]</span><span class="nv">$HttpsPort</span> <span class="p">=</span> <span class="n">443</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="k">Parameter</span><span class="p">(</span><span class="k">Mandatory</span><span class="p">=</span><span class="nv">$false</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="no">[switch]</span><span class="nv">$Help</span> <span class="p">=</span> <span class="nv">$false</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check <a href="/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/" rel="">this article</a> for deploy report using PS script.</p>
]]></description>
</item>
<item>
    <title>Remove a person from an user Dynamics 365 Finance Operations</title>
    <link>https://nuxulu.com/2022-09-28-remove-person-from-users/</link>
    <pubDate>Wed, 28 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2022-09-28-remove-person-from-users/</guid>
    <description><![CDATA[<p>Whenever you add a new person to an user in the user <strong>SysUserInfoPage</strong> form, the person field grays out.</p>
<p><figure><a class="lightgallery" href="/2022-09-28-remove-person-from-users/2022-09-28-remove-person-from-users.png" title="Image" data-thumbnail="/2022-09-28-remove-person-from-users/2022-09-28-remove-person-from-users.png" data-sub-html="<h2>userinfo</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">userinfo</figcaption>
    </figure></p>
<p>To remove the person from that user:</p>
<ul>
<li>In the user form <code>System administration &gt; Users &gt; Users</code>, go to <code>Maintain versions</code>.</li>
<li>Delete the person.</li>
</ul>
]]></description>
</item>
<item>
    <title>Add new fields to data entity or composite entity Dynamics 365</title>
    <link>https://nuxulu.com/2022-09-23-add-custom-fields-to-composite-entity/</link>
    <pubDate>Fri, 23 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2022-09-23-add-custom-fields-to-composite-entity/</guid>
    <description><![CDATA[<p>Let&rsquo;s take a composite entity <code>SalesOrderV3Entity</code> as an example.</p>
<h3 id="scenario">Scenario</h3>
<p>I will need to add new fields to Sales order header that can be used in the composite entity <code>SalesOrderV3Entity</code>.
the composite entity <code>SalesOrderV3Entity</code> uses a standard data entity <code>SalesOrderHeaderV2Entity</code> for sales order header; so, we need to extend <code>SalesOrderHeaderV2Entity</code>.</p>
<h3 id="the-steps">The Steps</h3>
<ol>
<li>
<p>Add new fields to Main table <code>SalesTable</code></p>
</li>
<li>
<p>Add new fields to the entity <code>SalesOrderHeaderV2Entity</code></p>
</li>
<li>
<p>Add new fields to the staging table <code>SalesOrderHeaderV2Staging</code></p>
</li>
<li>
<p>Build and sync.</p>
</li>
<li>
<p>Go to Workspaces -&gt; Data Management -&gt; Framework parameters -&gt; Advanced entity configuration settings -&gt; Refresh entity list.</p>
<p>You can automate the <code>Refresh entity list</code> task <a href="https://d365fostuff.wordpress.com/2021/03/31/d365fo-integrations-auto-refresh-your-data-entity-list/" target="_blank" rel="noopener noreffer ">here</a></p>
</li>
<li>
<p>Go to Workspaces -&gt; Data Management -&gt; Data Entities, find <strong>SALES ORDER HEADERS V2</strong> and <em>Generate mapping</em> for it.
The new custom fields will be generated for the entity mapping.</p>
</li>
</ol>
]]></description>
</item>
<item>
    <title>Admin provisioning tools in Dynamics 365 Finance Operations</title>
    <link>https://nuxulu.com/2022-09-18-admin-provisioning-tools/</link>
    <pubDate>Sun, 18 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2022-09-18-admin-provisioning-tools/</guid>
    <description><![CDATA[<p>After restoring database backup, you want to be able to login to Dynamics 365 Finance Operations with different ternant, you need to use the admin provisioning tool to assign a new tenant.</p>
<!--adsense-->
<h3 id="before-10023-verison">Before 10.0.23 verison</h3>
<p>The admin provisioning tool can be found at</p>
<p>VHD: <code>C:\AOSService\PackagesLocalDirectory\bin\AdminUserProvisioning.exe</code></p>
<p>Cloud- hosted: <code>K:\AOSService\PackagesLocalDirectory\bin\AdminUserProvisioning.exe</code></p>
<p>After running <code>Provisioning.exe</code> wtih admin right, you will see the update for the admin user in SQL.</p>
<p><figure><a class="lightgallery" href="/2022-09-18-admin-provisioning-tools/userinfo.png" title="Image" data-thumbnail="/2022-09-18-admin-provisioning-tools/userinfo.png" data-sub-html="<h2>userinfo</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">userinfo</figcaption>
    </figure></p>
<p>Some errors you might face:</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Can not stop the DynamicsAXBatch service on computer</div>
        </div>
    </div>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Execution Timeout Expired. The timeout period elapsed prior to completion of the operation or the server is not responding.</div>
        </div>
    </div>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The remote server returned an error: (500) Internal Server Error.</div>
        </div>
    </div>
<p>Resolution, you can simply stop and start the services manually:</p>
<ul>
<li>World Wide Web Publishing Service</li>
<li>Microsoft Dynamics 365 Unified Operations: Batch Management Service</li>
</ul>
<p>Or you can restart VM using LCS or Azure portal.</p>
<p>If the issue <strong>Can not stop the DynamicsAXBatch service on computer</strong> still persist</p>
<p>You can kill the batch service using cmd:</p>
<ol>
<li>Open CMD</li>
<li><code>sc queryex DynamicsAxBatch</code></li>
<li><code>taskkill /f /pid 8064</code></li>
</ol>
<p><figure><a class="lightgallery" href="/2022-09-18-admin-provisioning-tools/queryex.png" title="Image" data-thumbnail="/2022-09-18-admin-provisioning-tools/queryex.png" data-sub-html="<h2>queryex</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">queryex</figcaption>
    </figure></p>
<p>There is another error about Database</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Cannot open database &ldquo;AxDB&rdquo; requested by the login. The login failed.
Login failed for user &lsquo;axdbadmin&rsquo;.</div>
        </div>
    </div>
<p>Please this post for getting <a href="/2020-04-06-getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/#2-rename-vm" rel="">VHD Database password</a>.</p>
<h3 id="from-10023">From 10.0.23</h3>
<p>From 10.0.23, the Admin user provisioning tool is removed due to security reasons, the reply URL setup for AAD was changed.
It is typically used to change the tenant of the environment. You can update the sign in information in the database for the Admin user or any other user. You only need the <code>SID</code> and <code>network alias</code> (email address) from a user that can access the environment or another environment on the same tenant.</p>
<p>To get the SID:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">wmic</span> <span class="nf">useraccount</span> <span class="nf">get</span> <span class="nf">name,sid</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2022-09-18-admin-provisioning-tools/get-sid-cmd.png" title="Image" data-thumbnail="/2022-09-18-admin-provisioning-tools/get-sid-cmd.png" data-sub-html="<h2>get-sid-cmd</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">get-sid-cmd</figcaption>
    </figure></p>
<p>Once you have admin SID, you can update the tenant in SQL by using.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="n">ID</span><span class="p">,</span><span class="w"> </span><span class="n">SID</span><span class="p">,</span><span class="w"> </span><span class="n">NETWORKALIAS</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">USERINFO</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">ID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Admin&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">update</span><span class="w"> </span><span class="n">USERINFO</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">SID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;new_SID&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">NETWORKALIAS</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;new_NetworkAlias&#39;</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">ID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Admin&#39;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>You might also got error</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">AADSTS50011: The reply URL specified in the request does not match the reply URLs configured for the application: &lsquo;00000015-0000-0000-c000-000000000000&rsquo;</div>
        </div>
    </div>
<p>Go to <code>C:\AOSService\webroot\web.config</code>, get <code>Aad.Realm</code>, <code>Aad.TenantDomainGUID</code>, <code>Infrastructure.HostUrl</code></p>
<p>Run below script to add Dynamics 365  URL to ERP service principle application</p>
<p><figure><a class="lightgallery" href="/2022-09-18-admin-provisioning-tools/00000015-0000-0000-c000-000000000000.png" title="Image" data-thumbnail="/2022-09-18-admin-provisioning-tools/00000015-0000-0000-c000-000000000000.png" data-sub-html="<h2>00000015-0000-0000-c000-000000000000</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">00000015-0000-0000-c000-000000000000</figcaption>
    </figure></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">$AADTenant</span> <span class="nf">=</span> <span class="nf">&#34;xxxxxx-843a-434c-ae23-f8614106ac37&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">$EnvironmentUrl</span> <span class="nf">=</span> <span class="nf">&#34;https:</span><span class="err">/</span><span class="nv">/xxxxxxxx.axcloud.dynamics.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">$AADRealm</span> <span class="nf">=</span> <span class="nf">&#34;00000015-0000-0000-c000-000000000000&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">Connect-AzureAD</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">#</span> <span class="nf">Get</span> <span class="nf">Service</span> <span class="nf">Principal</span> <span class="nf">details</span>
</span></span><span class="line"><span class="cl"><span class="nf">$SP</span> <span class="nf">=</span> <span class="nf">Get-AzureADServicePrincipal</span> <span class="nf">-Filter</span> <span class="nf">&#34;AppId</span> <span class="nf">eq</span> <span class="nf">&#39;$AADRealm&#39;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">#Add</span> <span class="nf">Reply</span> <span class="nf">URLs</span>
</span></span><span class="line"><span class="cl"><span class="nf">$SP.ReplyUrls.Add</span><span class="s">(&#34;$EnvironmentUrl&#34;)</span>
</span></span><span class="line"><span class="cl"><span class="nf">$SP.ReplyUrls.Add</span><span class="s">(&#34;$EnvironmentUrl/oauth&#34;)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">#Set</span><span class="nv">/Update</span> <span class="nf">Reply</span> <span class="nf">URL</span>
</span></span><span class="line"><span class="cl"><span class="nf">Set-AzureADServicePrincipal</span> <span class="nf">-ObjectId</span> <span class="nf">$SP.ObjectId</span> <span class="nf">-ReplyUrls</span> <span class="nf">$SP.ReplyUrls</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If you are running VHD for the first time, please do this <a href="/2020-04-06-getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/#61-register-a-new-application-in-azure-active-directory" rel="">task</a></p>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Reference<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ol>
<li>
<p><a href="https://learn.microsoft.com/en-us/troubleshoot/azure/active-directory/error-code-aadsts50011-reply-url-mismatch" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/troubleshoot/azure/active-directory/error-code-aadsts50011-reply-url-mismatch</a></p>
</li>
<li>
<p><a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#i-have-run-the-admin-user-provisioning-tool-on-my-development-environment-and-now-i-receive-the-following-sign-in-error-error-aadsts50011-the-reply-url-specified-in-the-request-does-not-match-the-reply-urls-configured-for-the-application" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#i-have-run-the-admin-user-provisioning-tool-on-my-development-environment-and-now-i-receive-the-following-sign-in-error-error-aadsts50011-the-reply-url-specified-in-the-request-does-not-match-the-reply-urls-configured-for-the-application</a></p>
</li>
</ol>
</div>
        </div>
    </div>
]]></description>
</item>
<item>
    <title>Unable to start trace, the required event providers were not found. Contact your system administrator</title>
    <link>https://nuxulu.com/2022-06-20-unable-to-trace-error/</link>
    <pubDate>Mon, 20 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2022-06-20-unable-to-trace-error/</guid>
    <description><![CDATA[<p>The error pops when you start the trace: <em>Unable to start trace, the required event providers were not found. Contact your system administrator.</em></p>
<p><figure><a class="lightgallery" href="/2022-06-20-unable-to-trace-error/trace-error.png" title="Image" data-thumbnail="/2022-06-20-unable-to-trace-error/trace-error.png" data-sub-html="<h2>trace-error</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">trace-error</figcaption>
    </figure></p>
<p>Cause: Some how you dont have Dynamics in event viewer</p>
<p><figure><a class="lightgallery" href="/2022-06-20-unable-to-trace-error/no-dynamics.png" title="Image" data-thumbnail="/2022-06-20-unable-to-trace-error/no-dynamics.png" data-sub-html="<h2>no-dynamics</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">no-dynamics</figcaption>
    </figure></p>
<p>Resolution: execute the script below under <code>C:\Temp</code> in powershell</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">$AOSSetupETWManifestDir</span> <span class="nf">=</span> <span class="nf">&#34;K:\AosService\WebRoot\Monitoring&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">foreach</span> <span class="s">($manifestFile in Get-ChildItem -Path $AOSSetupETWManifestDir</span><span class="se">\</span><span class="s">*.man | select-object -Property BaseName,Name)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">$dllFile=&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">if</span> <span class="s">((Test-Path &#34;$AOSSetupETWManifestDir</span><span class="se">\</span><span class="s">$($manifestFile.BaseName).Instrumentation.dll&#34;))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">$dllFile</span> <span class="nf">=</span> <span class="nf">&#34;$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.BaseName)</span><span class="nf">.Instrumentation.dll&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nf">elseif</span> <span class="s">((Test-Path &#34;$AOSSetupETWManifestDir</span><span class="se">\</span><span class="s">$($manifestFile.BaseName)Resource.dll&#34;))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">$dllFile</span> <span class="nf">=</span> <span class="nf">&#34;$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.BaseName)</span><span class="nf">Resource.dll&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nf">elseif</span> <span class="s">((Test-Path &#34;$AOSSetupETWManifestDir</span><span class="se">\</span><span class="s">$($manifestFile.BaseName).dll&#34;))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">$dllFile</span> <span class="nf">=</span> <span class="nf">&#34;$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.BaseName)</span><span class="nf">.dll&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nf">else</span> 
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">Write-Host</span> <span class="nf">&#34;Warn</span> <span class="nf">:</span> <span class="nf">Skipping</span> <span class="nf">$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.Name)</span> <span class="nf">as</span> <span class="nf">DLL</span> <span class="nf">not</span> <span class="nf">found&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nf">Continue</span>    
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="nf">Write-Host</span> <span class="nf">&#34;Installing</span> <span class="nf">$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.Name)</span> <span class="nf">using</span> <span class="nf">$dllFile&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">wevtutil.exe</span> <span class="nf">im</span> <span class="nf">&#34;$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.Name)</span><span class="nf">&#34;</span> <span class="nv">/rf:&#34;$dllFile&#34;</span> <span class="nv">/mf:&#34;$dllFile&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">Write-Host</span> <span class="nf">&#34;Finished</span> <span class="nf">installing</span> <span class="nf">$AOSSetupETWManifestDir\$</span><span class="s">($manifestFile.Name)</span> <span class="nf">`n`n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Then restart the VM by LCS or Azure portal, you will get the Dynamics back in the event viewer and able to start the trace normally.</p>
<p><figure><a class="lightgallery" href="dynamics-event.png" title="Image" data-thumbnail="dynamics-event.png" data-sub-html="<h2>dynamics-event</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">dynamics-event</figcaption>
    </figure></p>
]]></description>
</item>
<item>
    <title>Troubleshooting DVT script for service model - Dynamics 365 Finance &amp; Operations Tier 1 Upgrade</title>
    <link>https://nuxulu.com/2021-12-21-troubleshooting-dvt-script-for-service-model/</link>
    <pubDate>Tue, 21 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-12-21-troubleshooting-dvt-script-for-service-model/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/lcs-72-73.png" referrerpolicy="no-referrer">
            </div><p>While doing upgrade to the latest version Dynamics 365 Finance &amp; Operations on tier 1 environment, you might got some errors related to DVT auto scripts.</p>
<h2 id="1-dvt-script-for-service-model-aosservice-on-machine">1. DVT script for service model: AOSService on machine</h2>
<p>An error at step 72</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Step&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ID&gt;</span>72<span class="nt">&lt;/ID&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;RunbookID&gt;</span>498de9aee46e403e9dcd97b40166775e<span class="nt">&lt;/RunbookID&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;PackageId&gt;</span>dd4119e4331248d5a6ba9b987eef440d<span class="nt">&lt;/PackageId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;PackageType&gt;</span>PlatAppBinaryHotfixPackage<span class="nt">&lt;/PackageType&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;CompletedManually&gt;</span>false<span class="nt">&lt;/CompletedManually&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;Description&gt;</span>DVT script for service model: AOSService on machine: <span class="nt">&lt;/Description&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;MachineName&gt;&lt;/MachineName&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ServiceModelName&gt;</span>AOSService<span class="nt">&lt;/ServiceModelName&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ScriptToExecute&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;FileName&gt;</span>AutoRunDVT.ps1<span class="nt">&lt;/FileName&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Automated&gt;</span>true<span class="nt">&lt;/Automated&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Description&gt;</span>Run the AOS DVTs<span class="nt">&lt;/Description&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;RetryCount&gt;</span>1<span class="nt">&lt;/RetryCount&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;TimeoutValue&gt;</span>1<span class="nt">&lt;/TimeoutValue&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;InvokeWithPowershellProcess&gt;</span>false<span class="nt">&lt;/InvokeWithPowershellProcess&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;DoNotAutoResume&gt;</span>false<span class="nt">&lt;/DoNotAutoResume&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;DynamicStepDefinition</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;/ScriptToExecute&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;StepType&gt;</span>DVT<span class="nt">&lt;/StepType&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;StepConcurrency&gt;</span>Multiple<span class="nt">&lt;/StepConcurrency&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ScriptExecutionOutput</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Step&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Event log error details</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">System.Net.WebException: The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel. &mdash;&gt; System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.</div>
        </div>
    </div>
<h3 id="solution">Solution</h3>
<p>You need to abort the current process in LCS because this option will only show for environments in the <strong>Deployed</strong> state, then do &ldquo;Rotate the SSL certificates&rdquo;</p>
<ul>
<li>On the Environment details page, click <code>Maintain &gt; Rotate secrets</code>.</li>
<li>Select Rotate the SSL certificates and confirm that you want to perform this action.</li>
</ul>
<p><figure><a class="lightgallery" href="/2021-12-21-troubleshooting-dvt-script-for-service-model/rorate-ssl.png" title="rorate-ssl" data-thumbnail="/2021-12-21-troubleshooting-dvt-script-for-service-model/rorate-ssl.png" data-sub-html="<h2>rorate-ssl</h2><p>rorate-ssl</p>">
        
    </a><figcaption class="image-caption">rorate-ssl</figcaption>
    </figure></p>
<h2 id="2-step-73---dvt-script-for-service-model-mronebox-on-machine">2. Step 73 - DVT script for service model: MROneBox on machine</h2>
<h3 id="21-the-error-from-runbook">2.1 The error from <code>runbook</code></h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Step&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ID&gt;</span>73<span class="nt">&lt;/ID&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;RunbookID&gt;</span>498de9aee46e403e9dcd97b40166775e<span class="nt">&lt;/RunbookID&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;PackageId&gt;</span>dd4119e4331248d5a6ba9b987eef440d<span class="nt">&lt;/PackageId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;PackageType&gt;</span>PlatAppBinaryHotfixPackage<span class="nt">&lt;/PackageType&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;CompletedManually&gt;</span>false<span class="nt">&lt;/CompletedManually&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;Description&gt;</span>DVT script for service model: MROneBox on machine: <span class="nt">&lt;/Description&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;MachineName&gt;&lt;/MachineName&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ServiceModelName&gt;</span>MROneBox<span class="nt">&lt;/ServiceModelName&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ScriptToExecute&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;FileName&gt;</span>AutoRunDVT.ps1<span class="nt">&lt;/FileName&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Automated&gt;</span>true<span class="nt">&lt;/Automated&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Description&gt;</span>Run the AOS DVTs<span class="nt">&lt;/Description&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;RetryCount&gt;</span>1<span class="nt">&lt;/RetryCount&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;TimeoutValue&gt;</span>1<span class="nt">&lt;/TimeoutValue&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;InvokeWithPowershellProcess&gt;</span>false<span class="nt">&lt;/InvokeWithPowershellProcess&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;DoNotAutoResume&gt;</span>false<span class="nt">&lt;/DoNotAutoResume&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;DynamicStepDefinition</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;/ScriptToExecute&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;StepType&gt;</span>DVT<span class="nt">&lt;/StepType&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;StepConcurrency&gt;</span>Multiple<span class="nt">&lt;/StepConcurrency&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;ScriptExecutionOutput</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Step&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="22-event-log-error-details">2.2 Event log error details</h3>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Exception : System.Management.Automation.RemoteException: An error was encountered while updating the Financial Reporting components.
TargetObject : An error was encountered while updating the Financial Reporting components.</div>
        </div>
    </div>
<h3 id="23-solution">2.3 Solution</h3>
<p>To resolve this, we will need to reset <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/reset-financial-reporting-datamart-after-restore#reset-the-financial-reporting-data-mart-through-windows-powershell" target="_blank" rel="noopener noreffer ">financial reporting data mart</a>, following the steps</p>
<ul>
<li>
<p>Stops AX services</p>
<ul>
<li>World wide web publishing service (on all Application Object Servers [AOS] computers)</li>
<li>Batch Management Service (on non-private AOS computers only)</li>
<li>Management Reporter 2012 Process Service (on Business intelligence [BI] computers only)</li>
</ul>
</li>
</ul>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Note<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">We can use command line too
<code>NET STOP &quot;MR2012ProcessService&quot;</code></div>
        </div>
    </div>
<ul>
<li>Open PowerShell and execute the following script, this will execute reset datamart</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">cd</span> <span class="nf">K:\MROneBox\MRInstallDirectory\Server\MRDeploy\</span>
</span></span><span class="line"><span class="cl"><span class="nf">Import-Module</span> <span class="nf">.\MRDeploy.psd1</span>
</span></span><span class="line"><span class="cl"><span class="nf">Reset-DatamartIntegration</span> <span class="nf">-Reason</span> <span class="nf">OTHER</span> <span class="nf">-ReasonDetail</span> <span class="nf">&#34;</span><span class="p">&lt;</span><span class="nf">reason</span> <span class="nf">for</span> <span class="nf">resetting</span><span class="p">&gt;</span><span class="nf">&#34;</span> <span class="nf">-SkipMRTableReset</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Note<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">To ensure that old data isn&rsquo;t inserted, a data mart reset can be started only after existing tasks are completed. If you try to reset the data mart before all tasks are completed, you might receive a message such as, &ldquo;The data mart reset was unable to be processed because of an active task. Please try again later.&rdquo;</div>
        </div>
    </div>
<ul>
<li>After reset datamart, we need to execute the step 73 again, find the latest deployable package applied to the environment. It will be under folder <code>&lt;ServiceVolue&gt;:\DeployablePackages\&lt;PackageGUID&gt;\MROneBox\Scripts\Update</code></li>
</ul>
<p>Execute <code>AutoRunDVT.ps1</code> in Powershell</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">.\AutoRunDVT.ps1</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If it can be executed without error, you can go ahead and resume the deployment in LCS.</p>
<h3 id="if-there-are-still-errors-we-need-an-extra-step">If there are still errors, we need an extra step</h3>
<ul>
<li>Find the DVT execution script: <code>&lt;ServiceVolue&gt;:\DeployablePackages\&lt;PackageGUID&gt;\MROneBox\scripts\Update\AutoRunDVT.ps1</code></li>
<li>Make a copy of the file</li>
<li>Clear all contents <code>AutoRunDVT.ps1</code> and save</li>
<li>Resume the deployment from LCS.</li>
</ul>]]></description>
</item>
<item>
    <title>Windows keyboard shortcuts</title>
    <link>https://nuxulu.com/2021-11-05-windows-key-shortcuts/</link>
    <pubDate>Fri, 05 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-11-05-windows-key-shortcuts/</guid>
    <description><![CDATA[<h2 id="1-new-keyboard-shortcuts-in-windows-11">1. New Keyboard Shortcuts in Windows 11</h2>
<p>Windows 11 brings a few Keyboard Shortcuts for accessing its cool new features such as widgets, snap layouts, action center, and quick settings.</p>
<p>FYI, <code>Win</code> key is the <strong>Windows Logo key</strong> on your keyboard.</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open up the Widgets pane. It supplies you with the weather forecast, local traffic, news, and even your calendar.</td>
<td>Win + W</td>
</tr>
<tr>
<td>Toggle up the Quick Settings. It controls the Volume, Wi-Fi, Bluetooth, Brightness sliders, Focus Assist, and other settings.</td>
<td>Win + A</td>
</tr>
<tr>
<td>Bring up the Notification Center. It shows all your notifications in the OS.</td>
<td>Win + N</td>
</tr>
<tr>
<td>Open the Snap Layouts flyout. It helps you organize apps and windows for multitasking.</td>
<td>Win + Z</td>
</tr>
<tr>
<td>Open Teams Chat app from Taskbar. It helps you quickly select a chat thread directly from the Taskbar.</td>
<td>Win + C</td>
</tr>
</tbody>
</table>
<h2 id="2-general-and-popular-shortcuts-for-windows-11">2. General and Popular Shortcuts for Windows 11</h2>
<p>Here are the most frequently used and essential keyboard shortcuts for Windows 11.</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Select all contents</td>
<td>Ctrl + A</td>
</tr>
<tr>
<td>Copy the selected items</td>
<td>Ctrl + C</td>
</tr>
<tr>
<td>Cut the selected items</td>
<td>Ctrl + X</td>
</tr>
<tr>
<td>Paste the copied or cut items</td>
<td>Ctrl + V</td>
</tr>
<tr>
<td>Undo an action</td>
<td>Ctrl + Z</td>
</tr>
<tr>
<td>Redo an action</td>
<td>Ctrl + Y</td>
</tr>
<tr>
<td>Switch between the running applications</td>
<td>Alt + Tab</td>
</tr>
<tr>
<td>Open Task View</td>
<td>Win + Tab</td>
</tr>
<tr>
<td>Close the active app or If you are on Desktop, open the Shutdown box to shut down, restart, log out or put your PC to sleep.</td>
<td>Alt + F4</td>
</tr>
<tr>
<td>Lock your computer.</td>
<td>Win + L</td>
</tr>
<tr>
<td>Display and hide the desktop.</td>
<td>Win + D</td>
</tr>
<tr>
<td>Delete the selected item and move it to the Recycle Bin.</td>
<td>Ctrl + Delete</td>
</tr>
<tr>
<td>Delete the selected item permanently.</td>
<td>Shift + Delete</td>
</tr>
<tr>
<td>Capture a full screenshot and saves it in the clipboard.</td>
<td>PrtScn or Print</td>
</tr>
<tr>
<td>Capture part of the screen with Snip &amp; Sketch.</td>
<td>Win + Shift + S</td>
</tr>
<tr>
<td>Open Start button context menu.</td>
<td>Windows + X</td>
</tr>
<tr>
<td>Rename selected item.</td>
<td>F2</td>
</tr>
<tr>
<td>Refresh the active window.</td>
<td>F5</td>
</tr>
<tr>
<td>Open Menu bar in the current app.</td>
<td>F10</td>
</tr>
<tr>
<td>Go back.</td>
<td>Alt + Left arrow</td>
</tr>
<tr>
<td>Go forward.</td>
<td>Alt + Left arrow</td>
</tr>
<tr>
<td>Move up one screen</td>
<td>Alt + Page Up</td>
</tr>
<tr>
<td>Move down one screen</td>
<td>Alt + Page Down</td>
</tr>
<tr>
<td>Open Task Manager.</td>
<td>Ctrl + Shift + Esc</td>
</tr>
<tr>
<td>Project a screen.</td>
<td>Win + P</td>
</tr>
<tr>
<td>Print the current page.</td>
<td>Ctrl + P</td>
</tr>
<tr>
<td>Select more than one item.</td>
<td>Shift + Arrow keys</td>
</tr>
<tr>
<td>Save the current file.</td>
<td>Ctrl + S</td>
</tr>
<tr>
<td>Save As</td>
<td>Ctrl + Shift + S</td>
</tr>
<tr>
<td>Open a file in the current app.</td>
<td>Ctrl + O</td>
</tr>
<tr>
<td>Cycle through the apps on the taskbar.</td>
<td>Alt + Esc</td>
</tr>
<tr>
<td>Display your password on the login screen</td>
<td>Alt + F8</td>
</tr>
<tr>
<td>Open the shortcut menu for the current window</td>
<td>Alt + Spacebar</td>
</tr>
<tr>
<td>Open properties for the selected item.</td>
<td>Alt + Enter</td>
</tr>
<tr>
<td>Open the context menu (right-click menu) for the selected item.</td>
<td>Alt + F10</td>
</tr>
<tr>
<td>Open Run command.</td>
<td>Win + R</td>
</tr>
<tr>
<td>Open a new program window of the current app</td>
<td>Ctrl + N</td>
</tr>
<tr>
<td>Take a screen clipping</td>
<td>Win + Shift + S</td>
</tr>
<tr>
<td>Open Windows 11 settings</td>
<td>Win + I</td>
</tr>
<tr>
<td>Go back to Settings home page</td>
<td>Backspace</td>
</tr>
<tr>
<td>Stop or close the current task</td>
<td>Esc</td>
</tr>
<tr>
<td>Enter/Exit the full-screen mode</td>
<td>F11</td>
</tr>
<tr>
<td>Launch Emoji keyboard</td>
<td>Win + period (.) or Win + semicolon (;)</td>
</tr>
</tbody>
</table>
<h2 id="3-desktop-and-virtual-desktops-shortcuts-for-windows-11">3. Desktop and Virtual Desktops Shortcuts for Windows 11</h2>
<p>These simple shortcuts will help you navigate your desktop and virtual desktops more smoothly.</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open Start menu</td>
<td>Window logo key (Win)</td>
</tr>
<tr>
<td>Switch keyboard layout</td>
<td>Ctrl + Shift</td>
</tr>
<tr>
<td>View all open apps</td>
<td>Alt + Tab</td>
</tr>
<tr>
<td>Select more than one item on the desktop</td>
<td>Ctrl + Arrow keys + Spacebar</td>
</tr>
<tr>
<td>Minimize all open windows</td>
<td>Win + M</td>
</tr>
<tr>
<td>Maximize all minimized windows on the desktop.</td>
<td>Win + Shift + M</td>
</tr>
<tr>
<td>Minimize or maximize all but the active window</td>
<td>Win + Home</td>
</tr>
<tr>
<td>Snap the current app or window to the Left</td>
<td>Win + Left Arrow Key</td>
</tr>
<tr>
<td>Snap the current app or window to the RIght.</td>
<td>Win + Right Arrow Key</td>
</tr>
<tr>
<td>Stretch the active window to the top and bottom of the screen.</td>
<td>Win + Shift + Up arrow key</td>
</tr>
<tr>
<td>Restore or minimize active desktop windows vertically, maintaining width.</td>
<td>Win + Shift + Down arrow key</td>
</tr>
<tr>
<td>Open Desktop view</td>
<td>Win + Tab</td>
</tr>
<tr>
<td>Add a new virtual desktop</td>
<td>Win + Ctrl + D</td>
</tr>
<tr>
<td>Close the active virtual desktop.</td>
<td>Win + Ctrl + F4</td>
</tr>
<tr>
<td>Toggle or switch to the virtual desktops you’ve created on the Right</td>
<td>Win key + Ctrl + Right arrow</td>
</tr>
<tr>
<td>Toggle or switch to the virtual desktops you’ve created on the Left</td>
<td>Win key + Ctrl + Left arrow</td>
</tr>
<tr>
<td>Create a shortcut</td>
<td>CTRL + SHIFT while dragging icon or file</td>
</tr>
<tr>
<td>Open WIndows Search</td>
<td>Win + S or Win + Q</td>
</tr>
<tr>
<td>Take a peek look at the desktop until you release the WINDOWS key.</td>
<td>Win + Comma (,)</td>
</tr>
</tbody>
</table>
<h2 id="4-taskbar-keyboard-shortcuts-for-windows-11">4. Taskbar Keyboard Shortcuts for Windows 11</h2>
<p>You can use below keyboard shortcuts to take control of your taskbar:</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Run an app as administrator from the taskbar</td>
<td>Ctrl + Shift + Left Click app button or icon</td>
</tr>
<tr>
<td>Open the app in the first position on your taskbar.</td>
<td>Win + 1</td>
</tr>
<tr>
<td>Open the app in the number position from the taskbar.</td>
<td>Win + Number (0 - 9)</td>
</tr>
<tr>
<td>Cycle through apps in the taskbar.</td>
<td>Win + T</td>
</tr>
<tr>
<td>View Date and Time from the taskbar</td>
<td>Win + Alt + D</td>
</tr>
<tr>
<td>Open another instance of an app from the taskbar.</td>
<td>Shift + Left Click app button</td>
</tr>
<tr>
<td>Show the window menu for the group apps from the taskbar.</td>
<td>Shift + Right-click grouped app icon</td>
</tr>
<tr>
<td>Highlight the first item in the Notification Area and use the Arrow key switch between the item</td>
<td>Win + B</td>
</tr>
<tr>
<td>Open the application’s menu on the task bar</td>
<td>Alt + Windows key + number keys</td>
</tr>
</tbody>
</table>
<h2 id="5-file-explorer-shortcuts-for-windows-11">5. File Explorer Shortcuts for Windows 11</h2>
<p>These keyboard shortcuts can help you navigate your Windows filesystem quickly than ever:</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open the File Explorer.</td>
<td>Win + E</td>
</tr>
<tr>
<td>Open the search box in the file explorer.</td>
<td>Ctrl + E</td>
</tr>
<tr>
<td>Open the current window in a new window.</td>
<td>Ctrl + N</td>
</tr>
<tr>
<td>Close active window.</td>
<td>Ctrl + W</td>
</tr>
<tr>
<td>Start the mark mode</td>
<td>Ctrl + M</td>
</tr>
<tr>
<td>Change the file and folder view.</td>
<td>Ctrl + Mouse Scroll</td>
</tr>
<tr>
<td>Switch between left and right panes</td>
<td>F6</td>
</tr>
<tr>
<td>Create a new folder.</td>
<td>Ctrl + Shift + N</td>
</tr>
<tr>
<td>Expand all subfolders in the navigation pane on the left.</td>
<td>Ctrl + Shift + E</td>
</tr>
<tr>
<td>Select address bar of the File Explorer.</td>
<td>Alt + D</td>
</tr>
<tr>
<td>Changes folder view.</td>
<td>Ctrl + Shift + Number (1-8)</td>
</tr>
<tr>
<td>Display the preview panel.</td>
<td>Alt + P</td>
</tr>
<tr>
<td>Open the Properties settings for the selected item.</td>
<td>Alt + Enter</td>
</tr>
<tr>
<td>Expand the selected drive or folder</td>
<td>Num Lock + plus (+)</td>
</tr>
<tr>
<td>Collapse the selected drive or folder.</td>
<td>Num Lock + minus (-)</td>
</tr>
<tr>
<td>Expand all the subfolders under the selected drive or folder.</td>
<td>Num Lock + asterisk (*)</td>
</tr>
<tr>
<td>Go the next folder.</td>
<td>Alt + Right arrow</td>
</tr>
<tr>
<td>Go the previous folder</td>
<td>Alt + Left arrow (or Backspace)</td>
</tr>
<tr>
<td>Go to the parent folder the folder was in.</td>
<td>Alt + Up arrow</td>
</tr>
<tr>
<td>Switch focus to address bar.</td>
<td>F4</td>
</tr>
<tr>
<td>Refresh the File Explorer</td>
<td>F5</td>
</tr>
<tr>
<td>Expand the current folder tree or select the first subfolder (if it’s expanded) in the left pane.</td>
<td>Right Arrow key</td>
</tr>
<tr>
<td>Collapse the current folder tree or select the parent folder (if it’s collapsed) in the left pane.</td>
<td>Left Arrow Key</td>
</tr>
<tr>
<td>Move to the top of the active window.</td>
<td>Home</td>
</tr>
<tr>
<td>Move to the bottom of the active window.</td>
<td>End</td>
</tr>
</tbody>
</table>
<h2 id="6-command-prompt-shortcuts-for-windows-11">6. Command Prompt Shortcuts for Windows 11</h2>
<p>If you are a Command Prompt user, then these shortcuts will come handy:</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Scroll to the top of the Command Prompt (cmd).</td>
<td>Ctrl + Home</td>
</tr>
<tr>
<td>Scroll to the bottom of the cmd.</td>
<td>Ctrl + End</td>
</tr>
<tr>
<td>Select everything on the current line</td>
<td>Ctrl + A</td>
</tr>
<tr>
<td>Move the cursor up a page</td>
<td>Page Up</td>
</tr>
<tr>
<td>Move the cursor down a page</td>
<td>Page Down</td>
</tr>
<tr>
<td>Enter Mark mode.</td>
<td>Ctrl + M</td>
</tr>
<tr>
<td>Move the cursor to the beginning of the buffer.</td>
<td>Ctrl + Home (in Mark mode)</td>
</tr>
<tr>
<td>Move the cursor to the end of the buffer.</td>
<td>Ctrl + End (in Mark mode)</td>
</tr>
<tr>
<td>Cycle through command history of active session</td>
<td>Up or Down arrow keys</td>
</tr>
<tr>
<td>Move cursor left or right in the current command line.</td>
<td>Left or Right arrow keys</td>
</tr>
<tr>
<td>Move your cursor to the start of the current line</td>
<td>Shift + Home</td>
</tr>
<tr>
<td>Move your cursor to the end of the current line</td>
<td>Shift + End</td>
</tr>
<tr>
<td>Move cursor up one screen and select text.</td>
<td>Shift + Page Up</td>
</tr>
<tr>
<td>Move cursor down one screen and select text.</td>
<td>Shift + Page Down</td>
</tr>
<tr>
<td>Move the screen up one line in the output history.</td>
<td>Ctrl + Up arrow</td>
</tr>
<tr>
<td>Move the screen down one line in the output history.</td>
<td>Ctrl + Down arrow</td>
</tr>
<tr>
<td>Move cursor up one line and select the text.</td>
<td>Shift + Up</td>
</tr>
<tr>
<td>Move cursor down one line and select the text.</td>
<td>Shift + Down</td>
</tr>
<tr>
<td>Move the cursor one word at a time.</td>
<td>Ctrl + Shift + Arrow Keys</td>
</tr>
<tr>
<td>Open search for Command Prompt.</td>
<td>Ctrl + F</td>
</tr>
</tbody>
</table>
<h2 id="7-dialog-box-shortcuts-for-windows-11">7. Dialog box Shortcuts for Windows 11</h2>
<p>Use the following Windows hotkeys to navigate the Dialog box of any application easily:</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Move forward through tabs.</td>
<td>Ctrl + Tab</td>
</tr>
<tr>
<td>Move back through tabs.</td>
<td>Ctrl + Shift + Tab</td>
</tr>
<tr>
<td>Switch to nth tab.</td>
<td>Ctrl + N (number 1–9)</td>
</tr>
<tr>
<td>Show the items in the active list.</td>
<td>F4</td>
</tr>
<tr>
<td>Move forward through options of the dialog box</td>
<td>Tab</td>
</tr>
<tr>
<td>Move back through options of the dialog box</td>
<td>Shift + Tab</td>
</tr>
<tr>
<td>Execute the command (or select the option) that is used with the underlined letter.</td>
<td>Alt + underlined letter</td>
</tr>
<tr>
<td>Check or Uncheck the check box if the active option is a check box.</td>
<td>Spacebar</td>
</tr>
<tr>
<td>Select or move to a button in a group of active buttons.</td>
<td>Arrow keys</td>
</tr>
<tr>
<td>Open the parent folder if a folder is selected in the Open or Save As dialog box.</td>
<td>Backspace</td>
</tr>
</tbody>
</table>
<h2 id="8-accessibility-keyboard-shortcuts-for-windows-11">8. Accessibility Keyboard Shortcuts for Windows 11</h2>
<p>Windows 11 provides these keyboard shortcuts to make your computer more accessible and easier to use for everyone:</p>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open Ease of Access Centre</td>
<td>Win + U</td>
</tr>
<tr>
<td>Turn on Magnifier and Zoom in</td>
<td>Win + plus (+)</td>
</tr>
<tr>
<td>Zoom out using Magnifier</td>
<td>Win + minus (-)</td>
</tr>
<tr>
<td>Exit Magnifier</td>
<td>Win + Esc</td>
</tr>
<tr>
<td>Switch to docked mode in Magnifier</td>
<td>Ctrl + Alt + D</td>
</tr>
<tr>
<td>Switch to full-screen mode in Magnifier</td>
<td>Ctrl + Alt + F</td>
</tr>
<tr>
<td>Switch to lens mode in Magnifier</td>
<td>Ctrl + Alt + L</td>
</tr>
<tr>
<td>Invert colors in Magnifier</td>
<td>Ctrl + Alt + I</td>
</tr>
<tr>
<td>Cycle through views in Magnifier</td>
<td>Ctrl + Alt + M</td>
</tr>
<tr>
<td>Resize the lens with the mouse in Magnifier.</td>
<td>Ctrl + Alt + R</td>
</tr>
<tr>
<td>Pan in the direction of the arrow keys in Magnifier.</td>
<td>Ctrl + Alt + arrow keys</td>
</tr>
<tr>
<td>Zoom in or out using mouse</td>
<td>Ctrl + Alt + mouse scroll</td>
</tr>
<tr>
<td>Open Narrator</td>
<td>Win + Enter</td>
</tr>
<tr>
<td>Open on-screen keyboard</td>
<td>Win + Ctrl + O</td>
</tr>
<tr>
<td>Turn Filter Keys on and off</td>
<td>Press Right Shift for eight seconds</td>
</tr>
<tr>
<td>Turn High Contrast on or off</td>
<td>Left Alt + left Shift + PrtSc</td>
</tr>
<tr>
<td>Turn Mouse Keys on or off</td>
<td>Left Alt + left Shift + Num Lock</td>
</tr>
<tr>
<td>Turn Sticky Keys on or off</td>
<td>Press Shift five times</td>
</tr>
<tr>
<td>Turn Toggle Keys on or off</td>
<td>Press Num Lock for five seconds</td>
</tr>
<tr>
<td>Open Action Center</td>
<td>Win + A</td>
</tr>
</tbody>
</table>
<h2 id="9-other-keyboard-shortcuts-for-windows-11">9. Other Keyboard Shortcuts for Windows 11</h2>
<table>
<thead>
<tr>
<th>ACTION</th>
<th>SHORTCUTS KEYS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open Game bar</td>
<td>Win + G</td>
</tr>
<tr>
<td>Record the last 30 seconds of the active game</td>
<td>Win + Alt + G</td>
</tr>
<tr>
<td>Start or stop recording the active game</td>
<td>Win + Alt + R</td>
</tr>
<tr>
<td>Take a screenshot of the active game</td>
<td>Win + Alt + PrtSc</td>
</tr>
<tr>
<td>Show/hide recording timer of the game</td>
<td>Win + Alt + T</td>
</tr>
<tr>
<td>Start IME reconversion</td>
<td>Win + forward slash (/)</td>
</tr>
<tr>
<td>Open Feedback Hub</td>
<td>Win + F</td>
</tr>
<tr>
<td>Launch Voice Typing</td>
<td>Win + H</td>
</tr>
<tr>
<td>Open the Connect quick setting</td>
<td>Win + K</td>
</tr>
<tr>
<td>Lock your device orientation</td>
<td>Win + O</td>
</tr>
<tr>
<td>Display the System Properties Page</td>
<td>Win + Pause</td>
</tr>
<tr>
<td>Search for PCs (if you’re on a network)</td>
<td>Win + Ctrl + F</td>
</tr>
<tr>
<td>Move an app or window from one monitor to another</td>
<td>Win + Shift + Left or Right arrow key</td>
</tr>
<tr>
<td>Switch input language and keyboard layout</td>
<td>Win + Spacebar</td>
</tr>
<tr>
<td>Open Clipboard History</td>
<td>Win + V</td>
</tr>
<tr>
<td>Switch input between Windows Mixed Reality and your desktop.</td>
<td>Win + Y</td>
</tr>
<tr>
<td>Launch Cortana app</td>
<td>Win + C</td>
</tr>
<tr>
<td>Open another instance of the app pinned to the taskbar in the number position.</td>
<td>Win + Shift + Number key (0-9)</td>
</tr>
<tr>
<td>Switch to the last active window of the app pinned to the taskbar in the number position.</td>
<td>Win + Ctrl + Number key (0-9)</td>
</tr>
<tr>
<td>Open Jump List of the app pinned to the taskbar in the number position.</td>
<td>Win + Alt + Number key (0-9)</td>
</tr>
<tr>
<td>Open another instance as an administrator of the app pinned to the taskbar in the number position.</td>
<td>Win + Ctrl + Shift + Number key (0-9)</td>
</tr>
</tbody>
</table>
]]></description>
</item>
<item>
    <title>Naming Conventions - Common Prefixes Dyanmics AX</title>
    <link>https://nuxulu.com/2021-10-20-common-prefixes-dyanmics-ax/</link>
    <pubDate>Wed, 20 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-10-20-common-prefixes-dyanmics-ax/</guid>
    <description><![CDATA[<h2 id="subject-area-object-prefix">Subject Area Object Prefix</h2>
<p>A subject area specific application object is prefixed with the name of the subject area the object belongs to, for example <code>Cust*, Invent*, Ledger*, Proj*, Vend*</code>.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Example<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><code>WMSOrderSplit</code>
<code>CustBankAccount</code>
<code>CustBalanceCurrency</code>
<code>InventAccountType</code></div>
        </div>
    </div>
<h2 id="application-area-object-prefix">Application Area Object Prefix</h2>
<p>An application area object is prefixed with the name of the application area the object belongs to.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Example<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><code>Aif*</code>
<code>Sys*</code></div>
        </div>
    </div>
<p>When creating new elements, ensure that you follow the recommended naming conventions. Any future development and maintenance will be much easier.</p>
<p><strong>Ax</strong> Microsoft Dynamics AX typed data source</p>
<p><strong>Axd</strong> Microsoft Dynamics AX business document</p>
<p><strong>Asset</strong> Asset management</p>
<p><strong>BOM</strong> Bill of material</p>
<p><strong>COS</strong> Cost accounting</p>
<p><strong>Cust</strong> Customer</p>
<p><strong>Dir</strong> Directory, global address book</p>
<p><strong>EcoRes</strong> Economic resources</p>
<p><strong>HRM/HCM</strong> Human resources</p>
<p><strong>Invent</strong> Inventory management</p>
<p><strong>JMG</strong> Shop flor control</p>
<p><strong>KM</strong> Knowledge management</p>
<p><strong>Ledger</strong> General ledger</p>
<p><strong>PBA</strong> Product builder</p>
<p><strong>Prod</strong> Production</p>
<p><strong>Proj</strong> Project</p>
<p><strong>Purch</strong> Purchase</p>
<p><strong>Req</strong> Requirements</p>
<p><strong>Sales</strong> Sales</p>
<p><strong>SMA</strong> Service management</p>
<p><strong>SMM</strong> Sales and marketing management, also called customer relationship management (CRM)</p>
<p><strong>Sys</strong> Application frameworks and development tools</p>
<p><strong>Tax</strong> Tax engine</p>
<p><strong>Vend</strong> Vendor</p>
<p><strong>Web</strong> Web framework</p>
<p><strong>WMS</strong> Warehouse management</p>]]></description>
</item>
<item>
    <title>Batch rename files to lowercase?</title>
    <link>https://nuxulu.com/2021-10-10-batch-rename-files-to-lowercase/</link>
    <pubDate>Sun, 10 Oct 2021 16:29:41 &#43;0800</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-10-10-batch-rename-files-to-lowercase/</guid>
    <description><![CDATA[<p>Go to the directory and run the following command:</p>
<p><code>for /f &quot;Tokens=*&quot; %f in ('dir /l/b/a-d') do (rename &quot;%f&quot; &quot;%f&quot;)</code></p>
<p>for /f &ldquo;Tokens=*&rdquo; %%f in (&lsquo;dir /l/b/a-d&rsquo;) do (rename &ldquo;%%f&rdquo; &ldquo;%%f&rdquo;)</p>
<p>rename folders</p>
<p><code>for /f &quot;Tokens=*&quot; %f in ('dir /l/b') do (rename &quot;%f&quot; &quot;%f&quot;)</code></p>
<p>Recursive version (added /r to dir)</p>
<p><code>for /f &quot;Tokens=*&quot; %f in ('dir /l/b/a-d/s') do (rename &quot;%f&quot; &quot;%f&quot;)</code></p>
]]></description>
</item>
<item>
    <title>Extend Microsoft 365 with office add-ins</title>
    <link>https://nuxulu.com/2021-10-07-extend-microsoft-365/</link>
    <pubDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-10-07-extend-microsoft-365/</guid>
    <description><![CDATA[<p>Introduction to Office client customization with add-ins</p>
<ul>
<li>Explain how Office add-ins extend and customize Office applications</li>
<li>Describe the development tooling, APIs, and deployment of Office add-ins</li>
<li>Understand how to incorporate data with Microsoft Graph and extend Office applications with add-ins using the Office UI Fabric</li>
</ul>
<h1 id="1-understand-office-add-ins-fundamentals">1. Understand Office add-ins fundamentals</h1>
<h2 id="11-understand-task-pane-and-content-add-ins">1.1. Understand task pane and content add-ins</h2>
<h3 id="111-task-pane-add-ins">1.1.1. Task pane add-ins</h3>
<p>Task pane add-ins allow user interaction through a panel displayed within an Office application. Through the task pane interface, you can enable the user to modify documents or emails, view data from a data source, and more. In the following image, the task pane is the panel that&rsquo;s displayed to the right of the document.</p>
<p></p>
<p>In newer versions of Word, Excel, and PowerPoint, you can configure the task pane to be displayed automatically when a user opens a file. The user will need to have your add-in installed first to activate this behavior.</p>
<blockquote>
<p><em>add-in&rsquo;s manifest file defines the settings and capabilities of the add-in.</em></p>
</blockquote>
<p>To configure an add-in as a task pane add-in for any Office application except Outlook, set the <code>xsi:type</code> attribute to <code>TaskPaneApp</code> within the <code>OfficeApp</code> element of the manifest file, as shown in the following example.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;OfficeApp</span>
</span></span><span class="line"><span class="cl">  <span class="err">...</span>
</span></span><span class="line"><span class="cl">  <span class="na">xsi:type=</span><span class="s">&#34;TaskPaneApp&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/OfficeApp&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>To configure an add-in for <strong>Outlook</strong>, set the <code>xsi:type</code> attribute to <code>MailApp</code> within the <code>OfficeApp</code> element of the manifest file, as shown in the following example.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;OfficeApp</span>
</span></span><span class="line"><span class="cl">  <span class="err">...</span>
</span></span><span class="line"><span class="cl">  <span class="na">xsi:type=</span><span class="s">&#34;MailApp&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/OfficeApp&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="112-content-add-ins">1.1.2. Content add-ins</h3>
<p>Content add-ins can be used to insert an object into an Excel spreadsheet or PowerPoint presentation. That object can be a web-based data visualization, media, or other external content. In the following image, the content add-in is displayed near the center of the document.</p>
<p></p>
<p>To configure an add-in as a <strong>content add-in</strong>, set the <code>xsi:type</code> attribute to <code>ContentApp</code> within the <code>OfficeApp</code> element of the manifest file, as shown in the following example.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;OfficeApp</span>
</span></span><span class="line"><span class="cl">  <span class="err">...</span>
</span></span><span class="line"><span class="cl">  <span class="na">xsi:type=</span><span class="s">&#34;ContentApp&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/OfficeApp&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="12-understand-office-add-ins-dialogs">1.2. Understand Office add-ins dialogs</h2>
<ul>
<li>Sign into an integrated service (for example, authenticate with Microsoft Account, Google, or Facebook).</li>
<li>Confirm the user&rsquo;s action.</li>
<li>Run a task that might be too confined in a task pane (for example, view a video).</li>
</ul>
<p></p>
<h2 id="13-understand-office-add-ins-custom-functions">1.3. Understand Office add-ins custom functions</h2>
<p>Office add-ins enable you to create custom JavaScript or TypeScript functions that can be accessed like built-in Excel functions such as <code>SUM()</code>.</p>
<p>The following image shows a custom function called <code>SPHEREVOLUME</code> being entered in Excel.</p>
<p></p>
<p>The following code sample shows the JavaScript code for the <code>SPHEREVOLUME()</code> function shown previously.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * Returns the volume of a sphere.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @customfunction
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param {number} radius
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">sphereVolume</span><span class="p">(</span><span class="nx">radius</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">radius</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">*</span> <span class="mi">4</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span> <span class="o">/</span> <span class="mi">3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="131-where-can-you-use-custom-functions">1.3.1. Where can you use custom functions?</h3>
<p>Custom functions are available in Excel on the following platforms.</p>
<ul>
<li>Windows (connected to an Office 365 subscription)</li>
<li>Mac (connected to an Office 365 subscription)</li>
<li>Web browser</li>
</ul>
<h3 id="132-define-the-custom-function-add-in-type">1.3.2. Define the custom function add-in type</h3>
<p>To configure an add-in to contain custom functions, the key settings in the manifest are as follows for Excel add-ins.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;OfficeApp</span>
</span></span><span class="line"><span class="cl">  <span class="err">...</span>
</span></span><span class="line"><span class="cl">  <span class="na">xsi:type=</span><span class="s">&#34;TaskPaneApp&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Hosts&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Host</span> <span class="na">Name=</span><span class="s">&#34;Workbook&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/Hosts&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;VersionOverrides</span> <span class="na">xmlns=</span><span class="s">&#34;http://schemas.microsoft.com/office/taskpaneappversionoverrides&#34;</span> <span class="na">xsi:type=</span><span class="s">&#34;VersionOverridesV1_0&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Hosts&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Host</span> <span class="na">xsi:type=</span><span class="s">&#34;Workbook&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;AllFormFactors&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;ExtensionPoint</span> <span class="na">xsi:type=</span><span class="s">&#34;CustomFunctions&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">            ...
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;/ExtensionPoint&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/AllFormFactors&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/Host&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/Hosts&gt;</span>
</span></span><span class="line"><span class="cl">   ...
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/VersionOverrides&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/OfficeApp&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="14-understand-add-in-commands">1.4. Understand add-in commands</h2>
<p>Add-in commands are UI elements that extend the Office UI and start actions in your add-in (button on the ribbon or an item to a context menu).</p>
<h3 id="141-add-in-commands-in-excel-word-powerpoint-and-onenote">1.4.1. Add-in commands in Excel, Word, PowerPoint, and OneNote</h3>
<p>You can configure an add-in so that a user can run it by selecting:</p>
<ul>
<li>Office application&rsquo;s ribbon or command overflow menu button
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;PrimaryCommandSurface&quot;&gt;</code></li>
</ul>
</li>
<li>Context menu item
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;ContextMenu&quot;&gt;</code></li>
</ul>
</li>
</ul>
<p>An add-in command can also open a submenu with additional commands.</p>
<blockquote>
<p>Note: Content add-ins don&rsquo;t currently support add-in commands.</p>
</blockquote>
<p>The following image shows three add-in commands (custom buttons) added to the <strong>Data tab</strong> of <strong>the Excel ribbon</strong>.</p>
<p></p>
<h3 id="142-add-in-commands-in-outlook">1.4.2. Add-in commands in Outlook</h3>
<p>You can configure an add-in so that a user can run it by selecting a button in the Office ribbon or command overflow menu when the user is:</p>
<ul>
<li>Reading a message in the reading pane or in a pop-out window.
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;MessageReadCommandSurface&quot;&gt;</code>.</li>
</ul>
</li>
<li>Composing a message.
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;MessageComposeCommandSurface&quot;&gt;</code>.</li>
</ul>
</li>
<li>Creating or viewing an appointment or meeting as the organizer.
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;AppointmentOrganizerCommandSurface&quot;&gt;</code>.</li>
</ul>
</li>
<li>Viewing a meeting as an attendee.
<ul>
<li>Key manifest setting: <code>&lt;ExtensionPoint xsi:type=&quot;AppointmentAttendeeCommandSurface&quot;&gt;</code>.</li>
</ul>
</li>
</ul>
<p>The following images show three add-in commands (custom buttons) added to the <strong>ribbon</strong> in Outlook. In the first image, the buttons are rendered in a <strong>regular state</strong>; in the second image, the buttons are rendered in a <strong>collapsed state</strong>.</p>
<p></p>
<h3 id="143-where-can-you-use-add-in-commands">1.4.3. Where can you use add-in commands?</h3>
<p>Add-in commands are available in Excel, Outlook, OneNote, PowerPoint, and Word as shown in the following table.</p>
<table>
<thead>
<tr>
<th>Platform</th>
<th>Major Office version</th>
<th>Subscription or one-time purchase?</th>
<th>Notes</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2019</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2016</td>
<td>one-time purchase</td>
<td>Only available in Outlook on Exchange 2016 (requires post-release update) or later. Not available in Office other applications.</td>
</tr>
<tr>
<td></td>
<td>2013</td>
<td>one-time purchase</td>
<td>Only available in Outlook on Exchange 2016 or later. Requires post-release updates for Outlook and Exchange 2016. Not available in other Office applications.</td>
</tr>
<tr>
<td>Mac</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2019</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2016</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td>iOS</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Only available in Outlook</td>
</tr>
<tr>
<td>Android</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Only available in Outlook</td>
</tr>
<tr>
<td>web browser</td>
<td>Not applicable</td>
<td>Not applicable</td>
<td>Available in all supported Office applications</td>
</tr>
</tbody>
</table>
<h2 id="15-understand-the-purpose-of-the-add-in-manifest">1.5. Understand the purpose of the add-in manifest</h2>
<p>An Office add-in&rsquo;s XML manifest file defines the settings and capabilities of the add-in. You can configure it to control how your add-in is rendered and behaves in the targeted Office applications.</p>
<h3 id="151-what-the-manifest-defines">1.5.1. What the manifest defines</h3>
<ul>
<li>Add-in metadata (for example, ID, version, description, display name, default locale)</li>
<li>Information about how the add-in integrates with Office (for example, target applications, custom functionality, add-in commands)</li>
<li>Location of images the add-in should use for branding and command iconography</li>
<li>Permissions that the add-in requires</li>
<li>Dimensions of the add-in (for example, default dimensions for content add-ins, requested height for Outlook add-ins)</li>
<li>Rules that specify when the add-in should activate in a message or appointment (Outlook only)</li>
</ul>
<h3 id="152-how-the-manifest-is-used">1.5.2. How the manifest is used</h3>
<ul>
<li>The Office applications where your add-in runs use information from the manifest to render add-in UI and wire up custom buttons or menu entries.</li>
<li>If you publish your add-in to AppSource:
<ul>
<li>Information from the manifest (name, description, author, logo, and so on) is used to create the app entry that&rsquo;s displayed to potential customers in AppSource.</li>
<li>The AppSource validation process reads information from the manifest and validates that your add-in runs on expected platforms.</li>
</ul>
</li>
</ul>
<h1 id="2-understand-office-javascript-apis">2. Understand Office JavaScript APIs</h1>
<p>In this unit, you&rsquo;ll explore the Office add-ins programming model, developer tools, and the capabilities of the Office JavaScript APIs for Excel, Outlook, and Word.</p>
<h2 id="21-understand-the-office-add-ins-programming-model">2.1. Understand the Office add-ins programming model</h2>
<p>The Office add-in programming model relies on two JavaScript object models:</p>
<ul>
<li>Host-specific JavaScript API - Host-specific APIs for Excel and Word provide strongly-typed objects that you can use to access specific elements in the host application. For example, the Excel API contains objects that represent worksheets, ranges, tables, charts, and more.</li>
<li>Common API - Introduced with Office 2013, the Common API enables you to access features such as:
<ul>
<li>UI</li>
<li>Dialogs</li>
<li>Client settings that are common across multiple types of Office applications</li>
</ul>
</li>
</ul>
<p>Custom functions use a slightly different programming model and will be covered in a later unit.</p>
<h3 id="211-office-javascript-api-requirement-sets">2.1.1. Office JavaScript API requirement sets</h3>
<p>Depending on the version of Office and platform it runs on, there are different APIs and features supported for your add-in. For example, Office 2016 supports more capabilities than Office 2013. To handle this situation, we provide requirement sets to help you determine whether an Office host supports the capabilities you need in your Office add-in.</p>
<p>Requirement sets can be specific to Office hosts, such as an ExcelApi 1.7 set, or common to multiple hosts, such as the Dialog API. Requirement set support varies by Office host and host version.</p>
<p>It&rsquo;s possible to programmatically check if requirement sets are supported by your add-in&rsquo;s Office host, using <code>isSetSupported</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nx">Office</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">requirements</span><span class="p">.</span><span class="nx">isSetSupported</span><span class="p">(</span><span class="nx">RequirementSetName</span><span class="p">,</span> <span class="nx">MinimumVersion</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Code that uses API members from RequirementSetName.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="212-using-office-javascript-apis">2.1.2. Using Office JavaScript APIs</h3>
<p>To use these APIs, reference them on the Office.js content delivery network (CDN), typically by adding one of the following code statements to your page&rsquo;s <code>&lt;head&gt;</code> tag.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">// Reference the production APIs on the CDN
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://appsforoffice.microsoft.com/lib/1/hosted/office.js&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Along with adding your preferred CDN link, all Office add-ins require an <code>Office.onReady()</code> call. You put your add-in code in this method, and it gets called once the <strong>Office.js</strong> library has initialized. Inside the <code>onReady()</code> method, you can determine which host your add-in is running in by checking the <code>Office.HostType</code> enum value (for example, Excel or Word). You can check which platform your add-in is running on with an <code>Office.PlatformType</code> enum value (for example, <strong>PC</strong> or <strong>Mac</strong>).</p>
<p>If you&rsquo;re using additional JavaScript frameworks that include their own initialization handler or tests, they should be placed within the response to <code>Office.onReady()</code>. For example, you would reference JQuery&rsquo;s <code>$(document).ready()</code> function as shown in the following code example.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">Office</span><span class="p">.</span><span class="nx">onReady</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Office is ready.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// The document is ready.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="213-making-asynchronous-calls-using-proxy-objects">2.1.3. Making asynchronous calls using proxy objects</h3>
<p>When you work with a document, requested read or write actions are batched up using a proxy object. Your API calls don&rsquo;t actually read or update the underlying document until you call the <code>sync()</code> method.</p>
<p>For better security, your add-in runs in a sandboxed JavaScript environment that can&rsquo;t directly access the document, or other add-ins. The Office add-ins platform provides a <code>RequestContext</code> object that in turn provides proxy objects to represent the document (such as <strong>worksheets, ranges, and tables</strong>). <code>The RequestContext</code> is typically passed to your code as a parameter named context. You can use the context object to get any proxy objects you need to work with the document.</p>
<p>Before you can read the properties of a proxy object, you must load the properties to populate the proxy object with data from the Office document. You do this by calling the <code>load()</code> method on the proxy object for any properties you need. Then call the <code>context.sync()</code> method, which will load all of the requested properties. For example, if you create a proxy range object to work with a user-selected range in an Excel worksheet, and then want to read the selected range&rsquo;s address property, you need to load the address property before you can read it. To request properties of a proxy object to be loaded, call the <code>load()</code> method on the object and specify the properties to load.</p>
<p>The following example shows a function that defines a <strong>local proxy object</strong> <code>(selectedRange)</code>, loads the address property of that object, then calls <code>context.sync()</code>. When the promise from <code>context.sync()</code> is resolved, the code can then read the address property. <code>Excel.run</code> is required for this specific host, to load properties that affect platform behavior when the function runs. Not all hosts contain a run call.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">Excel</span><span class="p">.</span><span class="nx">run</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">selectedRange</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">workbook</span><span class="p">.</span><span class="nx">getSelectedRange</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="nx">selectedRange</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="s1">&#39;address&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">context</span><span class="p">.</span><span class="nx">sync</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;The selected range is: &#39;</span> <span class="o">+</span> <span class="nx">selectedRange</span><span class="p">.</span><span class="nx">address</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}).</span><span class="k">catch</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;error: &#39;</span> <span class="o">+</span> <span class="nx">error</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span> <span class="k">instanceof</span> <span class="nx">OfficeExtension</span><span class="p">.</span><span class="nb">Error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Debug info: &#39;</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">debugInfo</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="22-understand-office-add-ins-developer-tools">2.2. Understand Office add-ins developer tools</h2>
<ul>
<li>Yeoman generator for Office add-ins</li>
<li>Visual Studio</li>
<li>Script Lab</li>
<li>Manifest validator</li>
</ul>
<h3 id="221-yeoman-generator-for-office-add-ins">2.2.1. Yeoman generator for Office add-ins</h3>
<p>You can create an Office add-in by using the Yeoman generator for Office add-ins or Visual Studio. The Yeoman generator for Office add-ins can be used to create a Node.js Office add-in project that can be managed with Visual Studio Code or any other editor.
You can choose to create the project using HTML, CSS, and JavaScript, or using Angular or React. TypeScript is also an option.</p>
<p>To create an Office add-in project with the Yeoman generator, complete the following steps.</p>
<ul>
<li>To globally install Yeoman and the Yeoman generator for Office add-ins using npm, the Node package manager, run the following command.</li>
</ul>
<p><code>npm install -g yo generator-office</code></p>
<ul>
<li>To create an add-in project using the Yeoman generator, run the following command.</li>
</ul>
<p><code>yo office</code></p>
<h3 id="222-visual-studio">2.2.2. Visual Studio</h3>
<p>Visual Studio can be used to create Office add-ins for Excel, Word, PowerPoint, or Outlook. An Office add-in project gets created as part of a Visual Studio solution, which means you can use Visual Studio features like selecting Start or choosing F5 to automatically run your add-in locally on IIS. Office add-in projects that you create with Visual Studio use HTML, CSS, and JavaScript.</p>
<h3 id="223-explore-the-apis-using-script-lab">2.2.3. Explore the APIs using Script Lab</h3>
<p>Script Lab is an add-in that enables you to run Office JavaScript snippets while you&rsquo;re working in an Office program such as Excel or Word. It&rsquo;s available for free via AppSource. In Script Lab, you can access a library of built-in samples to quickly try out APIs or even use a sample as the starting point for your own code.</p>
<p><a href="https://aka.ms/scriptlabvideo" target="_blank" rel="noopener noreffer "></a></p>
<h3 id="224-validating-an-office-add-ins-manifest-file">2.2.4. Validating an Office add-in&rsquo;s manifest file</h3>
<p>The Office add-ins manifest validator examines your add-in&rsquo;s manifest file to determine if it&rsquo;s correct and complete. If you created your add-in project using the Yeoman generator for Office add-ins (version 1.1.17 or later), you can validate the manifest by running the following command in the root directory of the project.</p>
<p><code>npm run validate</code></p>
<p>If you didn&rsquo;t use the Yeoman generator to create your add-in project, you can validate your add-in&rsquo;s manifest by completing the following steps.</p>
<ul>
<li>Install Node.js.</li>
<li>Run the following command in the root directory of your project.</li>
</ul>
<p><code>npx office-addin-manifest validate {{MANIFEST_FILE}}</code></p>
<h2 id="23-understand-the-capabilities-of-the-excel-javascript-api">2.3. Understand the capabilities of the Excel JavaScript API</h2>
<h2 id="24-understand-the-capabilities-of-the-outlook-javascript-api">2.4. Understand the capabilities of the Outlook JavaScript API</h2>
<p>The Outlook JavaScript APIs give your add-ins access to the user&rsquo;s mailbox, messages, and appointments in Outlook. An Outlook add-in can get the content and properties of a message or appointment. An add-in can also manage the content, formatting, and structure of a message or appointment that is being composed.</p>
<h3 id="241-object-model">2.4.1. Object model</h3>
<p>To understand the Outlook APIs, first see how the main components of a mailbox relate to each other.</p>
<ul>
<li>The <strong>Mailbox</strong> object enables you to handle authentication, manage a selected item, and view user profile details.</li>
<li>The <strong>Item</strong> object represents the selected message or appointment that the user is reading or composing.</li>
</ul>
<p>Using the Outlook APIs, you can manage many properties of an email or appointment. Many of the APIs are organized around the mode the user is in. The following table maps item types and modes.</p>
<table>
<thead>
<tr>
<th>Item type</th>
<th>Modes</th>
</tr>
</thead>
<tbody>
<tr>
<td>Message</td>
<td>Read Compose</td>
</tr>
<tr>
<td>Appointment/meeting</td>
<td>Attendee (read) Organizer (compose)</td>
</tr>
</tbody>
</table>
<h3 id="242-key-features">2.4.2. Key features</h3>
<h4 id="2421-authentication">2.4.2.1. Authentication</h4>
<p>Your Outlook add-in can access information from anywhere on the Internet. A few examples include the server that hosts the add-in, your internal network, or elsewhere in the cloud. If that information is protected, your add-in needs a way to authenticate your user. Outlook add-ins provide a number of different methods to authenticate, depending on your specific scenario.</p>
<table>
<thead>
<tr>
<th>Access token</th>
<th>Use if your add-in&hellip;</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exchange user identity tokens</td>
<td>Is used primarily by Exchange on-premises users. Needs access to a non-Microsoft service that you control.</td>
</tr>
<tr>
<td>OAuth2 access tokens</td>
<td>Needs access to a third-party service outside of your control.</td>
</tr>
<tr>
<td>Callback tokens</td>
<td>Needs access to the user&rsquo;s mailbox from your server.</td>
</tr>
</tbody>
</table>
<h4 id="2422-contextual-add-ins">2.4.2.2. Contextual add-ins</h4>
<p>Contextual add-ins are Outlook add-ins that activate based on text in a message or appointment. You may have seen the default contextual add-ins in Outlook, such as Bing Maps or Suggested Meetings. Using contextual add-ins, a user can initiate tasks related to a message without leaving the message itself, which results in an easier and richer user experience.</p>
<table>
<thead>
<tr>
<th>User chooses&hellip;</th>
<th>Contextual add-in action</th>
</tr>
</thead>
<tbody>
<tr>
<td>Address</td>
<td>Open a map of the location.</td>
</tr>
<tr>
<td>String</td>
<td>Open a meeting suggestion add-in.</td>
</tr>
<tr>
<td>Phone number</td>
<td>Add number to your contacts.</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Contextual add-ins are not currently available in Outlook on Android and iOS at this time.</p>
</blockquote>
<p>The following image shows a contextual add-in displayed in Outlook.</p>
<p></p>
<p><strong>A contextual add-in</strong>&rsquo;s manifest must include an <code>ExtensionPoint</code> element with an <code>xsi:type</code> attribute set to <code>DetectedEntity</code>. Within the <code>ExtensionPoint</code> element, the add-in specifies the entities or regular expression that can activate it. If an entity is specified, the entity can be any of the properties in the <code>Entities</code> object.</p>
<p>As such, the add-in manifest must contain a rule of type <code>ItemHasKnownEntity</code> or <code>ItemHasRegularExpressionMatch</code>. The following example shows how to specify that an add-in should activate on messages when it detects a phone number.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;ExtensionPoint</span> <span class="na">xsi:type=</span><span class="s">&#34;DetectedEntity&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Label</span> <span class="na">resid=</span><span class="s">&#34;contextLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;SourceLocation</span> <span class="na">resid=</span><span class="s">&#34;detectedEntityURL&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Rule</span> <span class="na">xsi:type=</span><span class="s">&#34;RuleCollection&#34;</span> <span class="na">Mode=</span><span class="s">&#34;And&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Rule</span> <span class="na">xsi:type=</span><span class="s">&#34;ItemIs&#34;</span> <span class="na">ItemType=</span><span class="s">&#34;Message&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Rule</span> <span class="na">xsi:type=</span><span class="s">&#34;ItemHasKnownEntity&#34;</span> <span class="na">EntityType=</span><span class="s">&#34;PhoneNumber&#34;</span> <span class="na">Highlight=</span><span class="s">&#34;all&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/Rule&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/ExtensionPoint&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>After a contextual add-in is associated with an account, it will automatically start when the user clicks a highlighted entity or regular expression.</p>
<p>A user launches a contextual add-in through text, either a known entity or a developer&rsquo;s regular expression. Typically, a user identifies a contextual add-in because the entity is highlighted.</p>
<h4 id="2423-module-add-ins">2.4.2.3. Module add-ins</h4>
<p>Module add-ins appear in the Outlook navigation bar, right alongside mail, tasks, and calendars. You can use all of the features of the Outlook JavaScript API in your add-in, and create command buttons in the Outlook ribbon so the user can interact with the add-in content.</p>
<blockquote>
<p>Module add-ins are only supported in Outlook 2016 or later on Windows.</p>
</blockquote>
<p>The following image shows an example of a module extension add-in.</p>
<p></p>
<p>To make a module add-in, include the module extension point in your add-in&rsquo;s manifest file. The following example shows a snippet of a manifest file adjusted to define a module extension.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- Add Outlook module extension point. --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;VersionOverrides</span> <span class="na">xmlns=</span><span class="s">&#34;http://schemas.microsoft.com/office/mailappversionoverrides&#34;</span>
</span></span><span class="line"><span class="cl">                  <span class="na">xsi:type=</span><span class="s">&#34;VersionOverridesV1_0&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;VersionOverrides</span> <span class="na">xmlns=</span><span class="s">&#34;http://schemas.microsoft.com/office/mailappversionoverrides/1.1&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="na">xsi:type=</span><span class="s">&#34;VersionOverridesV1_1&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c">&lt;!-- Begin override of existing elements. --&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Description</span> <span class="na">resid=</span><span class="s">&#34;residVersionOverrideDesc&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Requirements&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;bt:Sets</span> <span class="na">DefaultMinVersion=</span><span class="s">&#34;1.3&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;bt:Set</span> <span class="na">Name=</span><span class="s">&#34;Mailbox&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/bt:Sets&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/Requirements&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="c">&lt;!-- End override of existing elements. --&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Hosts&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;Host</span> <span class="na">xsi:type=</span><span class="s">&#34;MailHost&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;DesktopFormFactor&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="c">&lt;!-- Set the URL of the file that contains the
</span></span></span><span class="line"><span class="cl"><span class="c">                JavaScript function that controls the extension. --&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;FunctionFile</span> <span class="na">resid=</span><span class="s">&#34;residFunctionFileUrl&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">          <span class="c">&lt;!-- Module extension point for a ModuleApp --&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;ExtensionPoint</span> <span class="na">xsi:type=</span><span class="s">&#34;Module&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;SourceLocation</span> <span class="na">resid=</span><span class="s">&#34;residExtensionPointUrl&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;Label</span> <span class="na">resid=</span><span class="s">&#34;residExtensionPointLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;CommandSurface&gt;</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&lt;CustomTab</span> <span class="na">id=</span><span class="s">&#34;idTab&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;Group</span> <span class="na">id=</span><span class="s">&#34;idGroup&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                  <span class="nt">&lt;Label</span> <span class="na">resid=</span><span class="s">&#34;residGroupLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                  <span class="nt">&lt;Control</span> <span class="na">xsi:type=</span><span class="s">&#34;Button&#34;</span> <span class="na">id=</span><span class="s">&#34;group.changeToAssociate&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;Label</span> <span class="na">resid=</span><span class="s">&#34;residChangeToAssociateLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;Supertip&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;Title</span> <span class="na">resid=</span><span class="s">&#34;residChangeToAssociateLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;Description</span> <span class="na">resid=</span><span class="s">&#34;residChangeToAssociateDesc&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;/Supertip&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;Icon&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;bt:Image</span> <span class="na">size=</span><span class="s">&#34;16&#34;</span> <span class="na">resid=</span><span class="s">&#34;residAssociateIcon16&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;bt:Image</span> <span class="na">size=</span><span class="s">&#34;32&#34;</span> <span class="na">resid=</span><span class="s">&#34;residAssociateIcon32&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;bt:Image</span> <span class="na">size=</span><span class="s">&#34;80&#34;</span> <span class="na">resid=</span><span class="s">&#34;residAssociateIcon80&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;/Icon&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;Action</span> <span class="na">xsi:type=</span><span class="s">&#34;ExecuteFunction&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                      <span class="nt">&lt;FunctionName&gt;</span>changeToAssociateRate<span class="nt">&lt;/FunctionName&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;/Action&gt;</span>
</span></span><span class="line"><span class="cl">                  <span class="nt">&lt;/Control&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;/Group&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;Label</span> <span class="na">resid=</span><span class="s">&#34;residCustomTabLabel&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">              <span class="nt">&lt;/CustomTab&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;/CommandSurface&gt;</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&lt;/ExtensionPoint&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/DesktopFormFactor&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/Host&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/Hosts&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;Resources&gt;</span>
</span></span><span class="line"><span class="cl">      ...
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/Resources&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/VersionOverrides&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VersionOverrides&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="2424-getting-started-developing-outlook-add-ins">2.4.2.4. Getting started developing Outlook add-ins</h4>
<p>To develop an Outlook add-in, use:</p>
<ul>
<li>The Yeoman generator for Office add-ins</li>
<li>Visual Studio</li>
</ul>
<p>You can use a template as your base then add your functionality.</p>
<h2 id="25-understand-the-capabilities-of-the-word-javascript-api">2.5. Understand the capabilities of the Word JavaScript API</h2>
<p>The Word JavaScript APIs give your add-ins access to Word documents. A Word add-in can manage the content, formatting, and structure of a document.</p>
<h3 id="251-object-model">2.5.1. Object model</h3>
<p>To understand the Word APIs, you must see how the main components of a document relate to each other.</p>
<ul>
<li>A Document contains a Body and at least one Section.</li>
<li>A Body can contain:
<ul>
<li>Paragraph (one or more)</li>
<li>Table (one or more)</li>
<li>List (one or more)</li>
<li>Text</li>
<li>Objects like images and lists</li>
</ul>
</li>
<li>A Section gives access to its body, headers, and footers.</li>
</ul>
<h3 id="252-key-scenarios">2.5.2. Key scenarios</h3>
<blockquote>
<p>You can apply simple formatting to an entire existing document using the Office.js APIs. However, if you wish to apply complex formatting or use rich content objects, you can use Office Open XML (OOXML) to create these effects. Examples of capabilities in OOXML include applying drop shadows to text or pictures, coercing text boxes into shapes, and inserting Excel charts as live charts in Word documents. Because this is a more advanced skill, we will not cover this subject in its entirety but mention it for developers who are familiar with OOXML.</p>
</blockquote>
<h4 id="2521-working-with-document-text">2.5.2.1. Working with document text</h4>
<p>Word add-ins use the <code>Office.onReady()</code> event handler to start. If the add-in targets Word 2016 or later, it calls the <code>Word.run()</code> method to run Word <strong>JavaScript APIs</strong>. The add-in must pass a function to <code>Word.run()</code> that expects a context object to be passed as the parameter. The context object allows the add-in to interact with the Word document. You can use the context object to create any needed proxy objects for the Word document and load the proxies with any properties you wish to use. You can also program actions to run using those properties. As always, a <code>context.sync()</code> command then synchronizes the state between the proxy objects and objects in the Word document.</p>
<p>The following example shows code that inserts text after the body text of a Word document. For simplicity, this sample omits the <code>Office.onReady()</code> code and focuses on the code within a <code>Word.run()</code> code block.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-JS" data-lang="JS"><span class="line"><span class="cl"><span class="c1">// Run a batch operation against the Word JavaScript API.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Word</span><span class="p">.</span><span class="nx">run</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Create a proxy object for the document body.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kd">var</span> <span class="nx">body</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Queue a command to load the text property of the proxy body object.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">body</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="s2">&#34;text&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Queue a command to insert text into the end of the Word document body.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">body</span><span class="p">.</span><span class="nx">insertText</span><span class="p">(</span><span class="s1">&#39;This is text inserted after loading the body.text property&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                  <span class="nx">Word</span><span class="p">.</span><span class="nx">InsertLocation</span><span class="p">.</span><span class="nx">end</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Synchronize the document state by executing the queued commands,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// and return a promise to indicate task completion.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">return</span> <span class="nx">context</span><span class="p">.</span><span class="nx">sync</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Body contents: &#34;</span> <span class="o">+</span> <span class="nx">body</span><span class="p">.</span><span class="nx">text</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="2522-search">2.5.2.2. Search</h4>
<p>You can use the APIs to search the document for text that meets your criteria. You can also scope your search to certain types of content, for example, paragraphs or tables.</p>
<p>The following code sample searches for the text &ldquo;video you&rdquo; and ignores punctuation. If the text is found, the matches are bolded, highlighted in yellow, and the font color set to purple.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Run a batch operation against the Word object model.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Word</span><span class="p">.</span><span class="nx">run</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Queue a command to search the document and ignore punctuation.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kd">var</span> <span class="nx">searchResults</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;video you&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">ignorePunct</span><span class="o">:</span> <span class="kc">true</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Queue a command to load the search results and get the font property values.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">context</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">searchResults</span><span class="p">,</span> <span class="s1">&#39;font&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Synchronize the document state by executing the queued commands,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// and return a promise to indicate task completion.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">return</span> <span class="nx">context</span><span class="p">.</span><span class="nx">sync</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Found count: &#39;</span> <span class="o">+</span> <span class="nx">searchResults</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="c1">// Queue a set of commands to change the font for each found item.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">searchResults</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">searchResults</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">font</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="s1">&#39;purple&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">searchResults</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">font</span><span class="p">.</span><span class="nx">highlightColor</span> <span class="o">=</span> <span class="s1">&#39;#FFFF00&#39;</span><span class="p">;</span> <span class="c1">//Yellow
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">searchResults</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">font</span><span class="p">.</span><span class="nx">bold</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="c1">// Synchronize the document state by executing the queued commands,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// and return a promise to indicate task completion.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">return</span> <span class="nx">context</span><span class="p">.</span><span class="nx">sync</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Error: &#39;</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">error</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span> <span class="k">instanceof</span> <span class="nx">OfficeExtension</span><span class="p">.</span><span class="nb">Error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Debug info: &#39;</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">debugInfo</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="253-getting-started-developing-word-add-ins">2.5.3. Getting started developing Word add-ins</h3>
<p>To develop a Word add-in, use:</p>
<ul>
<li>The Yeoman generator for Office add-ins</li>
<li>Visual Studio</li>
<li></li>
</ul>
<p>If you want to explore the APIs more, the Script Lab add-in is recommended. There, you&rsquo;ll see many TypeScript and JavaScript snippets and be able to experiment with Word documents without creating an entire add-in.</p>
<h2 id="26-understand-the-capabilities-of-custom-functions">2.6. Understand the capabilities of custom functions</h2>
<p>Custom functions have several unique capabilities and restrictions because they run in a separate runtime from other add-in interactions, like task panes.</p>
<h3 id="261-custom-function-capabilities">2.6.1. Custom function capabilities</h3>
<p>You can create custom JavaScript or TypeScript functions that can be accessed like built-in Excel functions such as SUM(). You can also create streaming custom functions, which return a value based on a timer. For example, you can update the current time value in a cell every second. You can make network calls from custom functions as well.</p>
<p>The following code sample defines the custom function add that accepts two numbers then returns their sum.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * Adds two numbers.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @customfunction
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param first First number.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param second Second number.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @returns The sum of the two numbers.
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">add</span><span class="p">(</span><span class="nx">first</span><span class="p">,</span> <span class="nx">second</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">first</span> <span class="o">+</span> <span class="nx">second</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>JSDoc code comment descriptions</strong></p>
<p>The JSDoc tags in the code comments are used to generate a JSON metadata file that describes the custom function to Excel. The JSON metadata file enables Excel to accurately present information to a user and pass expected parameters to your custom function.</p>
<ul>
<li>@customfunction: Is declared first and indicates it&rsquo;s a custom function. Required.</li>
<li>@param: Describes the parameter. Include for each parameter defined by the function.</li>
<li>@returns: Describes what the function outputs.</li>
</ul>
<blockquote>
<p>The comment description &ldquo;Adds two numbers.&rdquo; is also added to the JSON Metadata file for Excel to display when the user is viewing your custom function.</p>
</blockquote>
<h3 id="262-custom-function-runtime-restrictions">2.6.2. Custom function runtime restrictions</h3>
<p>The custom function runtime only runs JavaScript. There&rsquo;s no document object model (DOM) or local storage, as you would find in a browser-based JavaScript runtime environment. This means you can&rsquo;t load any libraries that use the DOM, such as jQuery. Also, you can&rsquo;t access the Office.js API to interact with the document like you can from a task pane. Instead, the custom functions runtime is optimized for tasks such as performing rapid calculations and generally doesn&rsquo;t need to use some of the Office.js APIs such as formatting tools in Excel.</p>
<p>Custom functions have a webpage that loads the custom functions runtime. Since the custom functions runtime doesn&rsquo;t have a UI, there&rsquo;s nothing for the webpage to display. You&rsquo;ll find the following script tag in the webpage that loads the library for the custom functions runtime.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://appsforoffice.microsoft.com/lib/1/hosted/custom-functions-runtime.js&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Typically custom functions are combined with a task pane in the same add-in. If you create your add-in project using the Yeoman generator for Office add-ins, the project will have a webpage for the custom functions, and a web page with UI for the task pane.</p>
<h3 id="263-using-storage-api-to-communicate-with-the-task-pane">2.6.3. Using storage API to communicate with the task pane</h3>
<p>Custom function code and task pane code (which uses Office.js) can&rsquo;t call or communicate directly with each other. But you can use a storage API that allows them to share data. A common scenario for using the storage API is when the add-in needs to share a security token for accessing a secure network resource. The user might first call a custom function that requires them to be signed in. After authentication, it receives the security token. Then it shares the security token using the storage API so that later, when the user opens the task pane, the task pane doesn&rsquo;t need to sign them in again.</p>
<p>Alternatively, the user might open the task pane first. In this case, the task pane will sign in the user and share the security token through the storage API. When a custom function is used later, the custom function can get the security token through the storage API.</p>
<h4 id="2631-storage-api-example">2.6.3.1. Storage API example</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @customfunction
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @description Stores a value in OfficeRuntime.storage.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param {any} key Key in the key-value pair you will store.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param {any} value Value in the key-value pair you will store.
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">storeValue</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">OfficeRuntime</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="s2">&#34;Success: Item with key &#39;&#34;</span> <span class="o">+</span> <span class="nx">key</span> <span class="o">+</span> <span class="s2">&#34;&#39; saved to storage.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="s2">&#34;Error: Unable to save item with key &#39;&#34;</span> <span class="o">+</span> <span class="nx">key</span> <span class="o">+</span> <span class="s2">&#34;&#39; to storage. &#34;</span> <span class="o">+</span> <span class="nx">error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @customfunction
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @description Gets value from OfficeRuntime.storage.
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param {any} key Key of item you intend to get.
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">getValue</span><span class="p">(</span><span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">OfficeRuntime</span><span class="p">.</span><span class="nx">storage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="264-dialog-api">2.6.4. Dialog API</h3>
<p>Custom functions have their own dialog API since they can&rsquo;t access the Office.js API. However, the functionality is similar. The most common scenario is to launch a dialog to sign in a user and receive a security token.</p>
<p>The following code sample shows how to display a web dialog from a custom function.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">OfficeRuntime</span><span class="p">.</span><span class="nx">displayWebDialog</span><span class="p">(</span><span class="s1">&#39;https://myDomain/myDialog.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">height</span><span class="o">:</span> <span class="mi">30</span><span class="p">,</span> <span class="nx">width</span><span class="o">:</span> <span class="mi">20</span><span class="p">});</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="265-creating-a-custom-functions-project">2.6.5. Creating a custom functions project</h3>
<p>You can create a custom functions project by using the Yeoman generator for Office add-ins. Run <code>yo office</code> to start the generator, then choose the <strong>Excel Custom Functions add-in project</strong> option. Once created, your project will contain a <strong>/src/taskpane/</strong> folder for the task pane source files, and a <strong>/src/functions</strong> folder for the custom function source files.</p>
<h1 id="3-understand-how-to-customize-office-add-ins">3. Understand how to customize Office add-ins</h1>
<p>Customize Office add-ins using persisted state, Office UI Fabric, and Microsoft Graph.</p>
<h2 id="31-understand-the-options-for-persisting-state-and-settings">3.1. Understand the options for persisting state and settings</h2>
<p>The Office add-ins platform provides several ways for your add-in to persist state and settings. Your options depend on the Office applications you plan to support and on the type of add-in you plan to develop.</p>
<p>The Office JavaScript API provides objects for your add-in to save state across user sessions. The following table lists the options, along with the supported add-in types and Office host applications.</p>
<table>
<thead>
<tr>
<th>Platform</th>
<th>Major Office version</th>
<th>Subscription or one-time purchase?</th>
<th>Notes</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2019</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2016</td>
<td>one-time purchase</td>
<td>Only available in Outlook on Exchange 2016 (requires post-release update) or later. Not available in Office other applications.</td>
</tr>
<tr>
<td></td>
<td>2013</td>
<td>one-time purchase</td>
<td>Only available in Outlook on Exchange 2016 or later. Requires post-release updates for Outlook and Exchange 2016. Not available in other Office applications.</td>
</tr>
<tr>
<td>Mac</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2019</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td></td>
<td>2016</td>
<td>one-time purchase</td>
<td>Not available in OneNote</td>
</tr>
<tr>
<td>iOS</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Only available in Outlook</td>
</tr>
<tr>
<td>Android</td>
<td>Not applicable</td>
<td>connected to Office 365 subscription</td>
<td>Only available in Outlook</td>
</tr>
<tr>
<td>web browser</td>
<td>Not applicable</td>
<td>Not applicable</td>
<td>Available in all supported Office applications</td>
</tr>
</tbody>
</table>
<h2 id="32-understand-office-ui-fabric-in-office-add-ins">3.2. Understand Office UI Fabric in Office add-ins</h2>
<p>As you build your add-in, you have many UI design factors to consider. The Office UI Fabric provides elements that adhere to Office branding so your add-in looks like a natural extension of Office.</p>
<ul>
<li><strong>Fabric Core</strong> - Provides basic elements like font, icons, and color</li>
<li><strong>Fabric React</strong> components - Includes Fabric Core elements and adds input, navigation, and notification components, among others</li>
</ul>
<h3 id="321-fabric-core">3.2.1. Fabric Core</h3>
<p>Fabric Core provides basic design elements that reflect or sync with Office branding.</p>
<p>To start using Fabric Core, reference the CSS in your HTML page, as shown in the following code.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/9.6.1/css/fabric.min.css&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can then use Fabric icons, fonts, and colors. The following example shows how you can include an extra-large table icon in the Office application&rsquo;s primary theme color.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">i</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ms-Icon ms-font-xl ms-Icon--Table ms-fontColor-themePrimary&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">i</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="322-fabric-components">3.2.2. Fabric components</h3>
<p>Fabric React provides UX components for input, navigation, notification, and other categories. It builds on and includes Fabric Core.</p>
<p>Recommended components you can use in your add-in are as follows:</p>
<ul>
<li>Breadcrumb</li>
<li>Button</li>
<li>Checkbox</li>
<li>ChoiceGroup</li>
<li>Dropdown</li>
<li>Label</li>
<li>List</li>
<li>Pivot</li>
<li>TextField</li>
<li>Toggle</li>
</ul>
<blockquote>
<p>You can use the Yeoman generator for Office add-ins to create a project that references Fabric React. An available project type is Office add-in Task Pane project using React framework.</p>
</blockquote>
<h2 id="33-understand-when-and-how-to-use-microsoft-graph-in-office-add-ins">3.3. Understand when and how to use Microsoft Graph in Office add-ins</h2>
<p>Your add-in can connect to Microsoft Graph and access the user&rsquo;s data so they can accomplish more useful and productive scenarios. Example tasks are:</p>
<ul>
<li>Read files from OneDrive</li>
<li>Fetch email attachments</li>
<li>Get the user&rsquo;s profile</li>
</ul>
<h3 id="331-why-use-microsoft-graph">3.3.1. Why use Microsoft Graph</h3>
<p>Microsoft Graph REST APIs provide a way for your add-in to access the user&rsquo;s data in services like:</p>
<ul>
<li>Azure Active Directory</li>
<li>Office 365 services</li>
<li>Enterprise Mobility and Security services</li>
<li>Windows 10 services</li>
<li>Dynamics 365</li>
</ul>
<p></p>
<h3 id="332-how-to-authorize-to-microsoft-graph">3.3.2. How to authorize to Microsoft Graph</h3>
<ul>
<li>
<p><strong>Authentication</strong>
The add-in can get an access token from Azure Active Directory (AAD) when the user has signed in. AAD doesn&rsquo;t allow its sign-in page to open in an iframe, and the add-in task pane is an iframe when the add-in is launched in Office on the Web. So, use the Office JavaScript Dialog API to display the AAD login form. If your add-in includes custom functions that need authorization to Microsoft Graph, use the custom functions Dialog API to display the login form.</p>
</li>
<li>
<p><strong>Authorization</strong>
After the user signs in, your add-in gets an access token to use in subsequent API calls to Microsoft Graph. The access token can never give the add-in more or greater permissions than the user has. Users typically only have permissions to data about themselves, their own files and email, and objects that have been shared with them. If your add-in gets Microsoft Graph data about multiple users, then it can be used successfully only by users with admin-level permissions.</p>
</li>
<li>
<p><strong>Recommended libraries</strong>
Depending on your development choices, you can use one of the following libraries for authentication and authorization as appropriate.</p>
<ul>
<li>Your server-side is on a .NET-based framework (for example, .NET Core or ASP.NET): use MSAL.NET</li>
<li>Your server-side is node.js-based: use Passport Azure AD</li>
<li>Your add-in uses Implicit flow: use msal.js</li>
</ul>
</li>
</ul>
<h1 id="4-understand-testing-debugging-and-deployment-options-for-office-add-ins">4. Understand testing, debugging, and deployment options for Office add-ins</h1>
<h2 id="41-choose-the-best-deployment-option-for-your-office-add-in">4.1. Choose the best deployment option for your Office add-in</h2>
<table>
<thead>
<tr>
<th>Consider&hellip;</th>
<th>Examples</th>
</tr>
</thead>
<tbody>
<tr>
<td>Add-in lifecycle stage</td>
<td>local developer testing, ready for public use</td>
</tr>
<tr>
<td>Add-in interaction or feature support</td>
<td>task pane add-in, content add-in, add-in commands</td>
</tr>
<tr>
<td>Target Office applications</td>
<td>Excel, Outlook</td>
</tr>
<tr>
<td>Target platforms</td>
<td>Windows, Mac</td>
</tr>
<tr>
<td>Scope of user base</td>
<td>your organization, general public</td>
</tr>
</tbody>
</table>
<h3 id="411-deployment-options">4.1.1. Deployment options</h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Description</th>
<th>Best when&hellip;</th>
</tr>
</thead>
<tbody>
<tr>
<td>Sideload</td>
<td>Install your add-in locally.</td>
<td>Developer building and testing add-in</td>
</tr>
<tr>
<td>Centralized deployment</td>
<td>Distribute your add-in to users via the Microsoft 365 admin center.</td>
<td>Add-in ready for use in your organization on Office 365 or in a hybrid environment</td>
</tr>
<tr>
<td>SharePoint catalog</td>
<td>Distribute add-in to users via SharePoint.</td>
<td>Task pane or content add-in ready for use in your organization that&rsquo;s using an on-premises environment; Excel, Word, or PowerPoint is targeted but Mac isn&rsquo;t a target platform</td>
</tr>
<tr>
<td>AppSource</td>
<td>Make add-in available to the public.</td>
<td>Add-in ready for public use</td>
</tr>
<tr>
<td>Exchange server</td>
<td>Distribute add-in to users via Exchange.</td>
<td>Outlook add-in ready for use in an organization whose environment doesn&rsquo;t use Azure Active Directory identity service</td>
</tr>
<tr>
<td>Network share</td>
<td>Make add-in available to network users via a shared folder.</td>
<td>Add-in development and users are on Windows</td>
</tr>
</tbody>
</table>
<h2 id="42-understand-testing-and-debugging-concepts-for-office-add-ins">4.2. Understand testing and debugging concepts for Office add-ins</h2>
<h3 id="421-sideload-your-add-in">4.2.1. Sideload your add-in</h3>
<p>You can locally install (sideload) your add-in for testing and debugging on Windows, Mac, and in a web browser. You can also sideload your Excel or Word add-in on an iPad. Use Node.js, Internet Information Services (IIS), or another preferred means to web host your add-in on your development machine.</p>
<p>If you create your project using the Yeoman generator for Office add-ins, you can run <code>npm run start</code> in a command-line prompt to start and sideload your add-in to Excel on Windows or <code>npm run start:web</code> to run it in a web browser, though you&rsquo;ll have to manually sideload to Excel in the browser.</p>
<p>If you create your project using Visual Studio (VS), you can run the project in VS debug mode and it will automatically sideload to Excel on Windows.</p>
<h3 id="422-debug-your-add-in">4.2.2. Debug your add-in</h3>
<ul>
<li>A web browser with the browser&rsquo;s built-in developer tools</li>
<li>Visual Studio, provided you prepared your add-in using this IDE</li>
<li>Visual Studio Code for custom functions projects only</li>
<li>Runtime logging on Windows and Mac</li>
</ul>
<h3 id="423-windows">4.2.3. Windows</h3>
<p>On Windows 10, the tool you use depends on if the add-in is running in Microsoft Edge or Internet Explorer. Your add-in is running in Internet Explorer 11 unless it meets the following criteria to be running in Microsoft Edge.</p>
<ul>
<li>Windows 10 (version 1903 or later)</li>
<li>Office 365 subscription (build 16.0.11629 or later)</li>
</ul>
<p>For Microsoft Edge, install and use Microsoft Edge DevTools. For Internet Explorer, run F12 developer tools according to your Office version:</p>
<ul>
<li>32-bit Office version: C:\Windows\System32\F12\IEChooser.exe</li>
<li>64-bit Office version: C:\Windows\SysWOW64\F12\IEChooser.exe</li>
</ul>
<p>An available option to debug task pane add-ins in Office 2016 or later is to attach a debugger. Where the <strong>Attach Debugger</strong> is available through the Personality menu, as shown in the following image, the supported tool is Visual Studio 2015 Update 3 or later. This tool only enables JavaScript debugging.</p>
<p></p>
<p>If the Personality menu isn&rsquo;t present or you&rsquo;re already using Visual Studio (VS), you can use Attach to Process in VS to debug the add-in in Microsoft Edge or Internet Explorer as applicable.</p>
<h3 id="424-mac">4.2.4. Mac</h3>
<p>For your sideloaded task pane and content add-ins, you can use the Safari Web Inspector on macOS High Sierra and Office version 16.9.1 (build 18012504) or later.</p>]]></description>
</item>
<item>
    <title>Git &amp; Github cheatsheet</title>
    <link>https://nuxulu.com/2021-10-08-git-cheatsheet/</link>
    <pubDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-10-08-git-cheatsheet/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/git-basic-design.png" referrerpolicy="no-referrer">
            </div><h2 id="1-install">1. Install</h2>
<blockquote>
<p>Configure user information for all local repositories</p>
</blockquote>
<p><code>$ git config --global user.name &quot;[name]&quot;</code></p>
<p>Sets the name you want attached to your commit transactions</p>
<p><code>$ git config --global user.email &quot;[email address]&quot;</code></p>
<p>Sets the email you want attached to your commit transactions</p>
<p><code>$ git config --global color.ui auto</code></p>
<p>Enables helpful colorization of command line output</p>
<h2 id="2-branches">2. Branches</h2>
<p><figure><a class="lightgallery" href="/imagesposts/braching.png" title="braching" data-thumbnail="/imagesposts/braching.png" data-sub-html="<h2>Branching</h2><p>braching</p>">
        
    </a><figcaption class="image-caption">Branching</figcaption>
    </figure></p>
<blockquote>
<p>Branches are an important part of working with Git. Any commits you make will be made on the branch you’re currently “checked out” to. Use <code>git status</code> to see which branch that is.</p>
</blockquote>
<p><code>$ git branch [branch-name]</code></p>
<p>Creates a new branch</p>
<p><code>$ git switch -c [branch-name]</code></p>
<p>Switches to the specified branch and updates the working directory</p>
<p><code>$ git merge [branch]</code></p>
<p>Combines the specified branch’s history into the current branch. This is usually done in pull requests, but is an important Git operation.</p>
<p><code>$ git branch -d [branch-name]</code></p>
<p>Deletes the specified branch</p>
<h2 id="3-create-repositories">3. Create repositories</h2>
<blockquote>
<p>A new repository can either be created locally, or an existing repository can be cloned. When a repository was initialized locally, you have to push it to GitHub afterwards.</p>
</blockquote>
<p><code>$ git init</code></p>
<p>The git init command turns an existing directory into a new Git repository inside the folder you are running this command. After using the <code>git init</code> command, link the local repository to an empty GitHub repository using the following command:</p>
<p><code>$ git remote add origin [url]</code></p>
<p>Specifies the remote repository for your local repository. The url points to a repository on GitHub.</p>
<p><code>$ git clone [url]</code></p>
<p>Clone (download) a repository that already exists on GitHub, including all of the files, branches, and commits</p>
<p><code>git clone https://&lt;username&gt;:&lt;password&gt;@github.com/&lt;username&gt;/&lt;repository&gt;.git</code></p>
<p>Clone with authentication.</p>
<h2 id="4-the-gitignore-file">4. The .gitignore file</h2>
<p>Sometimes it may be a good idea to exclude files from being tracked with Git. This is typically done in a special file named <code>.gitignore</code>. You can find helpful templates for <code>.gitignore</code> files at <a href="https://github.com/github/gitignore" target="_blank" rel="noopener noreffer ">github.com/github/gitignore</a>.</p>
<p><code>logs/ *.notes pattern*/</code></p>
<p>Save a file with desired patterns as .gitignore with either direct string
matches or wildcard globs.</p>
<p><code>git config --global core.excludesfile [file]</code></p>
<p>system wide ignore pattern for all local repositories</p>
<h2 id="5-synchronize-changes">5. Synchronize changes</h2>
<blockquote>
<p>Synchronize your local repository with the remote repository on GitHub.com</p>
</blockquote>
<p><code>$ git fetch</code></p>
<p>Downloads all history from the remote tracking branches</p>
<p><code>$ git merge</code></p>
<p>Combines remote tracking branches into current local branch</p>
<p><code>$ git push</code></p>
<p>Uploads all local branch commits to GitHub</p>
<p><code>$ git pull</code></p>
<p>Updates your current local working branch with all new commits from the corresponding remote branch on GitHub. <code>git pull</code> is a combination of <code>git fetch</code> and <code>git merge</code></p>
<h2 id="6-make-changes">6. Make changes</h2>
<p><code>git status</code></p>
<p>Show modified files in working directory, staged for your next commit</p>
<p><code>$ git log</code></p>
<p>Browse and inspect the evolution of project files</p>
<p><code>$ git log --follow [file]</code></p>
<p>Lists version history for a file, beyond renames (works only for a single file)</p>
<p><code>$ git diff [first-branch]...[second-branch]</code></p>
<p>Shows content differences between two branches</p>
<p><code>git diff --staged</code></p>
<p>Diff of what is staged but not yet committed</p>
<p><code>$ git show [commit]</code></p>
<p>Outputs metadata and content changes of the specified commit</p>
<p><code>$ git add [file]</code></p>
<p>Snapshots the file in preparation for versioning</p>
<p><code>$ git commit -m &quot;[descriptive message]&quot;</code></p>
<p>Records file snapshots permanently in version history</p>
<p><code>git commit -am &quot;Your commit message&quot;</code></p>
<p>Combine <code>add</code> and <code>commit</code> for tracked files</p>
<p><code>git config --global alias.ac '!git add -A &amp;&amp; git commit -m'</code></p>
<p>Create a new command, eg combine <code>add</code> and <code>commit</code> in to <code>ac</code> command</p>
<h2 id="7-temporary-commits">7. Temporary commits</h2>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tip<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Temporarily store modified, tracked files in order to change branches</div>
        </div>
    </div>
<p><code>git stash</code></p>
<p>Save modified and staged changes</p>
<p><code>git stash list</code></p>
<p>List stack-order of stashed file changes</p>
<p><code>git stash pop</code></p>
<p>Write working from top of stash stack</p>
<p><code>git stash drop</code></p>
<p>Discard the changes from top of stash stack</p>
<h2 id="8-redo-commits">8. Redo commits</h2>
<p>Erase mistakes and craft replacement history</p>
<p><code>$ git reset [commit]</code></p>
<p>Undoes all commits after <code>[commit]</code>, preserving changes locally</p>
<p><code>$ git reset --hard [commit]</code></p>
<p>Discards all history and changes back to the specified commit</p>
<blockquote>
<p>CAUTION! Changing history can have nasty side effects. If you need to change commits that exist on GitHub (the remote), proceed with caution. If you need help, reach out at <a href="https://github.community/" target="_blank" rel="noopener noreffer ">github.community</a> or contact support.</p>
</blockquote>
<h2 id="9-search">9. Search</h2>
<p><code>$ git grep &quot;hello&quot;</code></p>
<p>A text search on all files in the directory</p>
<p><code>$ git grep &quot;hello&quot; v2.5</code></p>
<p>In any version of a text search:</p>
<p><code>$ git log -s 'keyword'</code></p>
<p>Show commits that introduced a specific keyword</p>
<p><code>$ git log -S 'keyword' --pickaxe-regex</code></p>
<p>Show commits that introduced a specific keyword (using a regular expression)</p>
<h2 id="9-github-flow">9. Github flow</h2>
<p><figure><a class="lightgallery" href="/2021-10-08-git-cheatsheet/Github-flow.png" title="Git flow" data-thumbnail="/2021-10-08-git-cheatsheet/Github-flow.png" data-sub-html="<h2>Git flow</h2><p>Git flow</p>">
        
    </a><figcaption class="image-caption">Git flow</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2021-10-08-git-cheatsheet/The-zoo-of-working-areas.png" title="The zoo of working areas" data-thumbnail="/2021-10-08-git-cheatsheet/The-zoo-of-working-areas.png" data-sub-html="<h2>The zoo of working areas</h2><p>The zoo of working areas</p>">
        
    </a><figcaption class="image-caption">The zoo of working areas</figcaption>
    </figure></p>
<h2 id="10-git-submodule">10. Git Submodule</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Add a Git Submodule</span>
</span></span><span class="line"><span class="cl">git submodule add &lt;remote_url&gt; &lt;destination_folder&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Pull a Git Submodule</span>
</span></span><span class="line"><span class="cl">git submodule update --init --recursive
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Remove the submodule entry from .git/config</span>
</span></span><span class="line"><span class="cl">git submodule deinit -f path/to/submodule
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Remove the submodule directory from the superproject&#39;s .git/modules directory</span>
</span></span><span class="line"><span class="cl">rm -rf .git/modules/path/to/submodule
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Remove the entry in .gitmodules and remove the submodule directory located at path/to/submodule</span>
</span></span><span class="line"><span class="cl">git rm -f path/to/submodule
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="11-glossary">11. Glossary</h2>
<ul>
<li><strong>git</strong>: an open source, distributed version-control system</li>
<li><strong>GitHub</strong>: a platform for hosting and collaborating on Git repositories</li>
<li><strong>commit</strong>: a Git object, a snapshot of your entire repository compressed into a SHA</li>
<li><strong>branch</strong>: a lightweight movable pointer to a commit</li>
<li><strong>clone</strong>: a local version of a repository, including all commits and branches</li>
<li><strong>remote</strong>: a common repository on GitHub that all team members use to exchange their changes</li>
<li><strong>fork</strong>: a copy of a repository on GitHub owned by a different user</li>
<li><strong>pull request</strong>: a place to compare and discuss the differences introduced on a branch with reviews, comments, integrated tests, and more</li>
<li><strong>HEAD</strong>: representing your current working directory, the HEAD pointer can be moved to different branches, tags, or commits when using <code>git switch</code></li>
</ul>
]]></description>
</item>
<item>
    <title>All about Odata actions in Dynamics 365 Finance And Operations</title>
    <link>https://nuxulu.com/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/</link>
    <pubDate>Tue, 25 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/</guid>
    <description><![CDATA[<p>ODATA actions in Data Entities provide a way to inject behaviors into the data model, or expose custom business logic from Dynamics 365 Finance &amp; Operations.
You can add actions by adding a method to the data entity and then decorating the method with specific attributes <em>[SysODataActionAttribute]</em></p>
<p>I use this Odata actions mostly in automation job like after refreshing data from PROD to UAT, we need to enable users, assign company to users, enable batches &hellip;
Or simply consume it in Power Automate.</p>
<h1 id="1-create-an-action-to-odata-entity">1. Create an action to OData entity</h1>
<p>You can create a new entity following <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/build-consuming-data-entities#add-a-new-data-entity-to-your-project" target="_blank" rel="noopener noreffer ">this standard docs</a>
or you can duplicate any standard entity. I created <strong>AutomationDataEntity</strong>. Right-click the enitity, select View code and add the code</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">AutomationDataEntity</span> <span class="n">extends</span> <span class="n">common</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//1st example</span>
</span></span><span class="line"><span class="cl"><span class="na">    [SysODataActionAttribute(&#34;assignUserToCompany&#34;, false)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">assignUserToCompany</span><span class="p">(</span><span class="n">NetworkAlias</span> <span class="n">_networkAlias</span><span class="p">,</span> <span class="n">DataAreaName</span> <span class="n">_company</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">UserInfo</span> <span class="n">userInfo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttsbegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">select</span> <span class="n">firstonly</span> <span class="n">forupdate</span> <span class="n">userInfo</span>
</span></span><span class="line"><span class="cl">            <span class="k">where</span> <span class="n">userInfo</span><span class="p">.</span><span class="n">networkAlias</span> <span class="p">==</span> <span class="n">_networkAlias</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">userInfo</span><span class="p">.</span><span class="n">company</span> <span class="p">=</span> <span class="n">_company</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">userInfo</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttscommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//2nd example</span>
</span></span><span class="line"><span class="cl"><span class="na">    [SysODataActionAttribute(&#34;ReturnRental&#34;, true)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">str</span> <span class="n">ReturnRental</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s">&#34;Rental was successfully returned. Thanks for your business&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//following 3rd example of an OData action takes in a parameter and returns a list</span>
</span></span><span class="line"><span class="cl"><span class="na">    [SysODataActionAttribute(&#34;GetColors&#34;, true),
</span></span></span><span class="line"><span class="cl"><span class="na">    SysODataCollectionAttribute(&#34;return&#34;, Types::Record, &#34;CarColor&#34;)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">List</span> <span class="n">GetColorsByAvailability</span><span class="p">(</span><span class="n">boolean</span> <span class="n">onlyAvailableVehicles</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">List</span> <span class="n">returnList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Record</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// do something</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">returnList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>In this example, the <code>SysODataActionAttribute</code> class decorates the <code>assginUserToCompany</code> method that is exposed as an action. The first argument of the attribute is the publicly exposed name of the action, and the second argument indicates whether this action need an entity instance or not. If you set the second argument to <em>false</em>, the method has to be <code>static</code>.</p>
<p>You might need reset IIS service to update Odata endpoint.</p>
<h1 id="2-test-entity-odata-actions-with-postman-and-power-automate">2. Test Entity Odata actions with Postman and Power Automate</h1>
<h2 id="21-with-postman">2.1. With Postman</h2>
<p>Please follow <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/third-party-service-test" target="_blank" rel="noopener noreffer ">this document</a> for basic configurations in Dynamics 365 Finance &amp; Operation, Azure to work with Postman.</p>
<h3 id="211-lets-use-the-first-example">2.1.1. Let&rsquo;s use the first example</h3>
<p>Specify Odata endpoint request with POST method into Postman application</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">[finopsURL]/data/AutomationDatas/Microsoft.Dynamics.DataEntities.assignUserToCompany
</span></span></code></pre></td></tr></table>
</div>
</div><p>[finopsURL] = <a href="https://yourenvironment.cloudax.dynamics.com" target="_blank" rel="noopener noreffer ">https://yourenvironment.cloudax.dynamics.com</a></p>
<p>Here is the Json file contains the parameters for <code>assignUserToCompany</code> method</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_networkAlias&#34;</span><span class="p">:</span><span class="s2">&#34;Max.Nguyen@Microsoft.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;_company&#34;</span><span class="p">:</span><span class="s2">&#34;USMF&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Click <strong>Send</strong> and you will get your logic executed.</p>
<p><figure><a class="lightgallery" href="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_1.png" title="Image" data-thumbnail="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_1.png" data-sub-html="<h2>all-about-odata-actions-in-dynamics-365-finance-and-operations</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">all-about-odata-actions-in-dynamics-365-finance-and-operations</figcaption>
    </figure></p>
<h3 id="212-lets-try-with-the-second-example">2.1.2. Let&rsquo;s try with the second example</h3>
<p>Everything should be remain the same, you just need to change the method to <code>ReturnRental</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">[finopsURL]/data/AutomationDatas/Microsoft.Dynamics.DataEntities.ReturnRental
</span></span></code></pre></td></tr></table>
</div>
</div><p>Click <strong>Send</strong> and you will get an error</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;Message&#34;</span><span class="p">:</span> <span class="s2">&#34;No HTTP resource was found that matches the request URI &#39;https://[devaos].cloudax.dynamics.com/data/AutomationDatas/Microsoft.Dynamics.DataEntities.ReturnRental&#39;. No route data was found for this request.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The reason is that you set the second argument to <code>true</code>, that means you need an instance for <code>AutomationDatas</code> entity before you can use <code>ReturnRental</code> method.
My entity created based on <code>CustGroup</code> table, so to get an instance I need <code>DataAreaId</code> and <code>CustGroupID</code>. The correct endpoint should be</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">[finopsURL]/data/AutomationDatas(dataAreaId=&#39;USMF&#39;,CustomerGroupId=&#39;BRIDGE&#39;)/Microsoft.Dynamics.DataEntities.ReturnRental
</span></span></code></pre></td></tr></table>
</div>
</div><p>The result</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;@odata.context&#34;</span><span class="p">:</span> <span class="s2">&#34;https://[devaos].cloudax.dynamics.com/data/$metadata#Edm.String&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;value&#34;</span><span class="p">:</span> <span class="s2">&#34;Rental was successfully returned. Thanks for your business&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="22-with-power-automate">2.2. With Power Automate</h2>
<h3 id="221-with-the-first-example">2.2.1. With the first example</h3>
<p>Create a simple Power Automate with Dynamics 365 Finance &amp; Operations connector, to consume Odata actions we use &ldquo;Execute action&rdquo; action following</p>
<p><figure><a class="lightgallery" href="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_2.png" title="Image" data-thumbnail="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_2.png" data-sub-html="<h2>all-about-odata-actions-in-dynamics-365-finance-and-operations</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">all-about-odata-actions-in-dynamics-365-finance-and-operations</figcaption>
    </figure></p>
<h3 id="222-with-the-second-example">2.2.2. With the second example</h3>
<p>when specify <code>action</code> in <code>Execute action</code>, Dynamics 365 Finance &amp; Operations connector understand that this needs an instance</p>
<p><figure><a class="lightgallery" href="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_3.png" title="Image" data-thumbnail="/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations/2021-05-25-all-about-odata-actions-in-dynamics-365-finance-and-operations_3.png" data-sub-html="<h2>all-about-odata-actions-in-dynamics-365-finance-and-operations</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">all-about-odata-actions-in-dynamics-365-finance-and-operations</figcaption>
    </figure></p>
<h1 id="3-more">3. More</h1>
<p>In Odata actions, you can return a list</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="na">[SysODataActionAttribute(&#34;GetColors&#34;, true),
</span></span></span><span class="line"><span class="cl"><span class="na">SysODataCollectionAttribute(&#34;return&#34;, Types::Record, &#34;CarColor&#34;)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">List</span> <span class="n">GetColorsByAvailability</span><span class="p">(</span><span class="n">boolean</span> <span class="n">onlyAvailableVehicles</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span> <span class="n">returnList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Record</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// do something</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">returnList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The following example of an OData action takes in list a parameter.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="na">[SysODataActionAttribute(&#34;GetColorsByAvailability&#34;, false),
</span></span></span><span class="line"><span class="cl"><span class="na">SysODataCollectionAttribute(&#34;InventSiteIdList&#34;, Types::String),
</span></span></span><span class="line"><span class="cl"><span class="na">SysODataCollectionAttribute(&#34;return&#34;, Types::String)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">GetColorsByAvailability</span><span class="p">(</span><span class="n">List</span> <span class="n">InventSiteIdList</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">strCommaSeperated</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span> <span class="n">list</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">String</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListEnumerator</span>  <span class="n">ListEnumerator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListEnumerator</span> <span class="p">=</span> <span class="n">InventSiteIdList</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">ListEnumerator</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">strCommaSeperated</span> <span class="p">+=</span> <span class="n">strFmt</span><span class="p">(</span><span class="err">&#39;</span><span class="p">%</span><span class="m">1</span><span class="p">,</span> <span class="err">&#39;</span><span class="p">,</span> <span class="n">ListEnumerator</span><span class="p">.</span><span class="n">current</span><span class="p">())</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">strCommaSeperated</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>In those examples,the <code>SysODataCollectionAttribute</code> class enables OData to expose strongly typed collections from X++. This class takes in three parameters:</p>
<ul>
<li>The name of the parameter that is a list (Use return for the return value of the method.).</li>
<li>The X++ type of the members of this list.</li>
<li>The public name of the OData resource that is contained in the collection.</li>
</ul>
<p>You can find actions that are defined on data entities by searching for the <code>SysODataActionAttribute</code> attribute in <code>metadatasearch</code>.</p>
<p>If you want to check how many Odata actions available for an entity, you can go here and search for an entity.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">https://[devaos].cloudax.dynamics.com/data/$metadata
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;Action</span> <span class="na">Name=</span><span class="s">&#34;removeDeleteCT&#34;</span> <span class="na">IsBound=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;AutomationData&#34;</span> <span class="na">Type=</span><span class="s">&#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;_entityName&#34;</span> <span class="na">Type=</span><span class="s">&#34;Edm.String&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Action&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Action</span> <span class="na">Name=</span><span class="s">&#34;assginUserToCompany&#34;</span> <span class="na">IsBound=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;AutomationData&#34;</span> <span class="na">Type=</span><span class="s">&#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;_networkAlias&#34;</span> <span class="na">Type=</span><span class="s">&#34;Edm.String&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;_company&#34;</span> <span class="na">Type=</span><span class="s">&#34;Edm.String&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Action&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Action</span> <span class="na">Name=</span><span class="s">&#34;ReturnRental&#34;</span> <span class="na">IsBound=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;AutomationData&#34;</span> <span class="na">Type=</span><span class="s">&#34;Microsoft.Dynamics.DataEntities.AutomationData&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;ReturnType</span> <span class="na">Type=</span><span class="s">&#34;Edm.String&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Action&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Action</span> <span class="na">Name=</span><span class="s">&#34;addToAllUserGroups&#34;</span> <span class="na">IsBound=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;AutomationData&#34;</span> <span class="na">Type=</span><span class="s">&#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;Parameter</span> <span class="na">Name=</span><span class="s">&#34;_userId&#34;</span> <span class="na">Type=</span><span class="s">&#34;Edm.String&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/Action&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>At the time I&rsquo;m writing this post, Odata actions does not support COC extension (A 18, P 42). So if you write some thing like this, it won&rsquo;t work.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="na">[ExtensionOf(dataentityviewstr(CustCustomerGroupEntity))]</span>
</span></span><span class="line"><span class="cl"><span class="n">final</span> <span class="k">class</span> <span class="nc">CustCustomerGroupEntity_KA_Extension</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="na">    [SysODataActionAttribute(&#34;ReturnRental&#34;, false)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">ReturnRental</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s">&#34;Rental was successfully returned. Thanks for your business&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>Deploy SSRS reports in Dynamics 365 Finance, SCM using Powershell</title>
    <link>https://nuxulu.com/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/</link>
    <pubDate>Sun, 17 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/</guid>
    <description><![CDATA[<p>Open Windows PowerShell in Admin mode</p>
<p>Navigate to the PowerShell scripts</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">cd</span> <span class="nf">K:\AosService\PackagesLocalDirectory\Plugins\AxReportVmRoleStartupTask\</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Execute the below commands:</p>
<ul>
<li>For deploying all SSRS reports</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">.</span><span class="nv">/DeployAllReportsToSSRS.ps1</span> <span class="nf">-PackageInstallLocation</span> <span class="nf">“K:\AosService\PackagesLocalDirectory”</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>For deploying the specific reports</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSSRS</span><span class="p">.</span><span class="n">ps1</span> <span class="n">-Module</span> <span class="n">ApplicationSuite</span> <span class="n">-ReportName</span> <span class="p">&lt;</span><span class="n">ReportName</span><span class="p">&gt;</span> <span class="n">-PackageInstallLocation</span> <span class="err">“</span><span class="n">K:</span><span class="p">\</span><span class="n">AosService</span><span class="p">\</span><span class="n">PackagesLocalDirectory</span><span class="err">”</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Example:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSsrs</span><span class="p">.</span><span class="n">ps1</span> <span class="n">-Module</span> <span class="n">MaxCustomization</span> <span class="n">-ReportName</span> <span class="n">MaxCheque_US</span><span class="p">.</span><span class="n">Report</span> <span class="n">-PackageInstallLocation</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSsrs</span><span class="p">.</span><span class="n">ps1</span> <span class="n">-Module</span> <span class="n">ApplicatoinSuite</span> <span class="n">-ReportName</span> <span class="n">Cust</span><span class="p">*</span> <span class="n">-PackageInstallLocation</span> <span class="s2">&#34;C:\AosService\PackagesLocalDirectory&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Testing Dynamics 365 Finance Database Movement API with Postman</title>
    <link>https://nuxulu.com/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/</link>
    <pubDate>Mon, 17 Aug 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman.png" referrerpolicy="no-referrer">
            </div><p>Microsoft provides a versioned set of capabilities that you can currently use to copy databases between environments, and to list and download database backups.</p>
<p>what you can do with Database movement API so far:</p>
<ul>
<li>List database backups</li>
<li>Create database refresh</li>
<li>Create a database export</li>
<li>Get operation activity status</li>
</ul>
<p>More supported actions will be added in later releases.</p>
<p>The endpoint uses <strong>impersonation authentication</strong> base, please follow to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/database/api/dbmovement-api-authentication##register-a-new-application-by-using-the-azure-portal" target="_blank" rel="noopener noreffer ">register a new application by using the Azure portal</a></p>
<h2 id="1-postman-environment-setup">1. Postman environment setup</h2>
<blockquote>
<p>Open Postman -&gt; manage environments -&gt; Add</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">tenant_id: {tenant_id get from AAD}
</span></span><span class="line"><span class="cl">client_id: {get from the application that you have created before}
</span></span><span class="line"><span class="cl">client_secret: {get from the application that you have created before}
</span></span><span class="line"><span class="cl">username: {LCS user name with owner permission}
</span></span><span class="line"><span class="cl">password: {LCS user password}
</span></span><span class="line"><span class="cl">grant_type: password
</span></span><span class="line"><span class="cl">resource: https://lcsapi.lcs.dynamics.com
</span></span><span class="line"><span class="cl">projectId: {Your LCS Project ID}
</span></span><span class="line"><span class="cl">bearerToken: {this will be populated when authentication}
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_1.png" title="Postman environment setup" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_1.png" data-sub-html="<h2>Postman environment setup</h2><p>Postman environment setup</p>">
        
    </a><figcaption class="image-caption">Postman environment setup</figcaption>
    </figure></p>
<h2 id="2-authentication-with-postman">2. Authentication with Postman</h2>
<p>You get the authentication bearer with <strong>POST</strong> method and <a href="https://login.microsoftonline.com/%7b%7btenant_id%7d%7d/oauth2/token" target="_blank" rel="noopener noreffer ">https://login.microsoftonline.com/{{tenant_id}}/oauth2/token</a> endpoint.</p>
<p>In the request Body, please do following:</p>
<p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_2.png" title="Authentication with Postman" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_2.png" data-sub-html="<h2>Authentication with Postman</h2><p>Authentication with Postman</p>">
        
    </a><figcaption class="image-caption">Authentication with Postman</figcaption>
    </figure></p>
<p>Click <strong>Send</strong>, and you will have access token to start using the API.</p>
<p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_3.png" title="token" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_3.png" data-sub-html="<h2>token</h2><p>token</p>">
        
    </a><figcaption class="image-caption">token</figcaption>
    </figure></p>
<h2 id="3-cosnume-the-apis-with-postman">3. Cosnume the APIs with Postman</h2>
<p>To call the Database Movement API, you attach the access token as a bearer token to the authorization header in your HTTP request. So in Postman, modify the headers tab like bellow</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Authorization:Bearer {{bearerToken}}
</span></span><span class="line"><span class="cl">x-ms-version:&#39;2017-09-15&#39;
</span></span><span class="line"><span class="cl">Content-Type:application/json
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_4.png" title="Cosnume" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_4.png" data-sub-html="<h2>Cosnume</h2><p>Cosnume</p>">
        
    </a><figcaption class="image-caption">Cosnume</figcaption>
    </figure></p>
<h3 id="31-list-database-backups">3.1. List database backups</h3>
<p><code>GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/databases/project/{{projectId}}</code></p>
<p>And we’ll get a JSON with a list of the DB backups on our LCS Asset Library:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;DatabaseAssets&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;Id&#34;</span><span class="p">:</span> <span class="s2">&#34;12314234-862e-4a6a-800d-0c64e982284a&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;ProjectId&#34;</span><span class="p">:</span> <span class="mi">123123</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;OrganizationId&#34;</span><span class="p">:</span> <span class="mi">123124</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;Name&#34;</span><span class="p">:</span> <span class="s2">&#34;backup&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;FileName&#34;</span><span class="p">:</span> <span class="s2">&#34;ATbackup.bacpac&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;FileDescription&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;FileLocation&#34;</span><span class="p">:</span> <span class="s2">&#34;https://uswedpl1catalog.blob.core.windows.net/product-ax7productname/******&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;ModifiedDateTime&#34;</span><span class="p">:</span> <span class="s2">&#34;2020-08-17T09:52:50.077&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;CreatedDateTime&#34;</span><span class="p">:</span> <span class="s2">&#34;2020-08-17T09:52:45.297&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;CreatedByName&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;ModifiedByName&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;5053e0dd-66e3-4832-a9f8-1e2d621562e1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="32-create-database-refresh">3.2. Create database refresh</h3>
<p><code>POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/refresh/project/{projectId}/source/{sourceEnvironmentId}/target/{targetEnvironmentId}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="33-create-a-database-export">3.3. Create a database export</h3>
<p><code>POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/export/project/{projectId}/environment/{environmentId}/backupName/{backupName}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="34-get-operation-activity-status">3.4. Get operation activity status</h3>
<p><code>GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/fetchstatus/project/{projectId}/environment/{environmentId}/operationactivity/{operationactivityId}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;6a90b45f-1764-4077-b924-3f4671540237&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ProjectId&#34;</span><span class="p">:</span> <span class="s2">&#34;12345&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;EnvironmentId&#34;</span><span class="p">:</span> <span class="s2">&#34;5362377c-bc37-4f92-b30e-fe0c1e664cc0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;ActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;CompletionDate&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;OperationStatus&#34;</span><span class="p">:</span> <span class="s2">&#34;InProgress&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Microsoft Dynamics 365</title>
    <link>https://nuxulu.com/2020-08-15-dynamics365/</link>
    <pubDate>Sat, 15 Aug 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-08-15-dynamics365/</guid>
    <description><![CDATA[<p>Today, we published the 2020 release wave 2 plans for <a href="https://aka.ms/Dynamics365Wave2ReleasePlan" target="_blank" rel="noopener noreffer ">Microsoft Dynamics 365</a> and <a href="https://aka.ms/PowerPlatformWave2ReleasePlan" target="_blank" rel="noopener noreffer ">Microsoft Power Platform</a>, a compilation of new capabilities that will be released between October 2020 and March 2021. This second release wave of the year offers hundreds of new features and enhancements, demonstrating our continued investment to power digital transformation for our customers and partners.</p>
<h2 id="highlights-from-dynamics-365">Highlights from Dynamics 365</h2>
<ul>
<li>Dynamics 365 Sales includes updates for more simplified experiences; including collaboration tools, a new mobile experience for quick access to customer information, and new enhancements to forecasting to natively create and manage bottom-up sales forecast processes.</li>
<li>Dynamics 365 Sales Insights continues investments in digital selling across multiple areas: sales acceleration, conversation intelligence, relationship intelligence, and advanced forecasting and pipeline intelligence with predictive lead and opportunity scorings to help sales teams uncover top deals.</li>
<li>Dynamics 365 Customer Service expands agent productivity capabilities enabling agents to engage in multiple sessions simultaneously. Omnichannel for Customer Service is enhanced with additional extensibility options to enable integration with mobile applications, Microsoft bot framework, and outbound messaging channels.</li>
<li>Dynamics 365 Customer Service Insights adds new capabilities to help agents using similar case suggestions to resolve customer issues quickly and easily. A new analytical view for customer service managers helps them focus on key support areas that need attention. These highlights will also be included directly in the core Customer Service Hub app so that users can get insights in context without having to switch between applications.</li>
<li>Dynamics 365 Remote Assist expands its range of scenarios beyond calls, allowing technicians to perform activities such as capture service and repairs data, perform surveys and walk-throughs independently, and derive service insights from their service operations. Availability to non-AR enabled devices with modified functionality further empowers technicians to solve problems faster the first time in more environments.</li>
<li>Dynamics 365 Field Service continues to add intelligence capabilities including a new Field Service dashboard for monitoring key KPIs and work order completion metrics. There are many user experience enhancements to enable proactive service delivery. The Field Service mobile app is enhanced with capabilities such as push notifications and real-time location sharing. This release wave also includes scheduling enhancements such as multi-day manual scheduling and enhanced skill-based matching.</li>
<li>Dynamics 365 Marketing improves the customer journey design experience, for example layout options, zoom, and performance improvements. Integration with Microsoft Teams live events and meetings allows users to create and host live events as a webinar provider. Segmentation is enhanced with a new natural language experience to create and consume customer segments, helping eliminate the specialized skills needed to build complex segments.</li>
<li>Dynamics 365 Customer Insights continues to enhance data ingestion and unification, segmentation, and extensibility capabilities using Microsoft Power Platform to enable and extend line-of-business experiences. For example, users can gain deeper customer insights with Microsoft Power BI, build custom apps with Microsoft Power Apps, and trigger workflows based on insights and signals using Microsoft Power Automate.</li>
<li>Dynamics 365 Human Resources expands leave and absence, and benefits management capabilities to transform the employee experience. Employees and managers will be able to manage leave and absence directly from Microsoft Teams. We continue to build an HCM ecosystem enabling integrations to recruiting and payroll partners.</li>
<li>Dynamics 365 Commerce continues to expand capabilities enabling marketers and non-developers to easily create and manage e-commerce sites with built-in experimentation capabilities. We are improving in-store and curbside pickup scenarios to help customers thrive in the face of the COVID impact. In addition, we are making it easier to increase engagement and conversions online and in-store with AI-powered &ldquo;shop similar looks&rdquo; recommendations and intelligent search experiences through Bing for Commerce.</li>
<li>Dynamics 365 Connected Store adds a number of new capabilities such as integration with Dynamics 365 Commerce, front-line worker task assignment and tracing with Microsoft Teams, integrated workflows with Power Platform, intelligent command center, store analytics, and store insights solutions such as anomaly detection, inventory recommendations, and shift management recommendations.</li>
<li>Dynamics 365 Fraud Protection adds integration with Dynamics 365 Commerce and a new &ldquo;manual review&rdquo; capability that allows customers to use the Fraud Protection rules experience to flag transactions for review, and then allow expert human agents to consume and adjudicate those transactions.</li>
<li>Dynamics 365 Finance continues to focus on automating common tasks to reduce the number of processes that finance users complete manually. We are introducing Asset leasing to enhance the core capabilities of Finance and continue to expand our global coverage delivering localizations for five additional countries/regions (Bahrain, Hong Kong, Kuwait, Oman, and Qatar) extending the number of supported countries/regions to 42.</li>
<li>Dynamics 365 Supply Chain Management expands planning optimization for manufacturing to perform supply and production planning in near real-time with in-memory services. Enhancements to Product Information Management include engineering change management and production versioning capabilities. Cost Management includes new features that will enable global companies maintain multiple cost accounting ledgers by allowing dual currency and dual valuation. Enhancements to the job card device include a new user experience and a new feature to enable reporting serial numbers.</li>
<li>Dynamics 365 Project Operations unifies operational workflows to provide the visibility, collaboration, and insights needed to drive success across teams from sales to finance. Project Operations connects your sales, resourcing, project management, and finance teams within a single application to win more deals, accelerate delivery, empower employees, and maximize profitability.</li>
<li>Dynamics 365 Guides prioritizes updates in this release wave on intelligent workflows. By taking advantage of data and AI innovations, work instructions can be configured to adjust on the fly based on operator inputs. In addition, insights will make it easier to use time-tracking data and connect that data to your business.</li>
<li>Dynamics 365 Business Central investments for this release wave include service enhancements to meet the demands of a rapidly growing customer base, improved performance, handling of file storage, geographic expansion together with support for Group VAT, top customer requested features, and deeper integration with Microsoft Teams.</li>
</ul>
<h2 id="highlights-from-power-platform">Highlights from Power Platform</h2>
<ul>
<li>Power Apps includes significant improvements for Power Apps developers of all skill levels, improving the sophistication and usability of apps that are created across the web and mobile devices. Makers will be able to create Power Apps directly within Microsoft Teams in order to easily customize the Teams experience. Makers will also be able to add custom pages to model-driven apps using the app designer, bringing together the best of canvas and model capabilities, including creating custom layouts and components. Power Apps portals adds Microsoft Power Virtual Agents as a component in the Power Apps portals studio, as well as support for code components created using Power Apps component framework. AI Builder introduces new AI scenarios for receipt scanning and translation, and improvements to connect to remote training data. The AI builder home page and model details page are updated to improve discoverability and integration with Power Apps and Power Automate.</li>
<li>Power BI is investing in three key areas that drive a data culture: amazing data experiences, modern enterprise BI, and insights where decisions are made. Power BI Desktop includes many new capabilities for users to create content quickly and easily, enabling authors to empower their users, enterprise grade content creation, and AI-infused authoring experiences. Power BI Mobile adds split view support for iPad and Power BI Service integrates with Azure Synapse to automatically create and manage materialized views on larger Power BI models as well as enhanced integration with SharePoint lists to build additional custom reports. We continue to enhance our Data protection capabilities enabling customers to classify and label sensitive data.</li>
<li>Power Automate enhancements will combine the best of WinAutomation with the cloud-based AI builder and connector-based capabilities in automated flows. This new version will offer customers a way to automate everything from Office apps to legacy terminal applications that haven&rsquo;t been updated in decades. In addition, enhancements to automated flows running in the cloud will include richer automation and approval experiences.</li>
<li>Power Virtual Agents brings expanded capabilities in the authoring experience including tools to create richer content, Adaptive Cards capabilities, topic suggestions from documents, improved Power Automate integration, voice integration with smart speakers, theming to customize the look and feel of the bot, and much more.</li>
</ul>
<p>For a complete list of new capabilities, please check out the <a href="https://aka.ms/Dynamics365Wave2ReleasePlan" target="_blank" rel="noopener noreffer ">Dynamics 365</a> and <a href="https://aka.ms/PowerPlatformWave2ReleasePlan" target="_blank" rel="noopener noreffer ">Power Platform</a> 2020 release wave 2 plans.</p>
<h2 id="early-access-period">Early access period</h2>
<p>Starting August 3, 2020, customers and partners will be able to validate the latest features in a non-production environment. These features include user experience enhancements that will be automatically enabled for users in production environments during October 2020. Take advantage of the early access period, try out the latest updates in a non-production environment, and get ready to roll out updates to your users with confidence. To see the early access features, check out the <a href="https://aka.ms/Dynamics365Wave2EAFeatures" target="_blank" rel="noopener noreffer ">Dynamics 365</a> and <a href="https://aka.ms/PowerPlatformWave2EAFeatures" target="_blank" rel="noopener noreffer ">Power Platform</a> pages. For questions, please visit the <a href="https://aka.ms/EarlyAccessFAQ" target="_blank" rel="noopener noreffer ">Early Access FAQ page</a>.</p>
<p>We&rsquo;ve done this work to help you&mdash;our partners, customers, and users&mdash;drive the digital transformation of your business on your terms. Get ready and learn more about latest <a href="https://dynamics.microsoft.com/business-applications/product-updates/" target="_blank" rel="noopener noreffer ">product updates</a> and <a href="https://roadmap.dynamics.com/" target="_blank" rel="noopener noreffer ">plans</a>, and share your feedback in the community forum for <a href="https://community.dynamics.com/" target="_blank" rel="noopener noreffer ">Dynamics 365</a> or <a href="https://powerusers.microsoft.com/" target="_blank" rel="noopener noreffer ">Power Platform</a>.</p>
]]></description>
</item>
<item>
    <title>How To d365fo.tools</title>
    <link>https://nuxulu.com/2020-07-14-d365fo.tools/</link>
    <pubDate>Tue, 14 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-07-14-d365fo.tools/</guid>
    <description><![CDATA[<h2 id="basic">Basic</h2>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Reference<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://github.com/d365collaborative/d365fo.tools/wiki" target="_blank" rel="noopener noreffer ">https://github.com/d365collaborative/d365fo.tools/wiki</a></li>
</ul>
</div>
        </div>
    </div>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">#Installation</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-ExecutionPolicy</span> <span class="n">-ExecutionPolicy</span> <span class="n">RemoteSigned</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span>
</span></span><span class="line"><span class="cl"><span class="nb">Install-Module</span> <span class="n">-Name</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span> <span class="c">#-AllowClobber</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="n">-Name</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span>
</span></span><span class="line"><span class="cl"><span class="nb">Uninstall-Module</span> <span class="n">-Name</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span>
</span></span><span class="line"><span class="cl"><span class="nb">Update-Module</span> <span class="n">-Name</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#help</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Command</span> <span class="n">-Module</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">New-D365Bacpac</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">New-D365Bacpac</span> <span class="n">-Full</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">New-D365Bacpac</span> <span class="n">-Examples</span> 
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">Get-D365AzureDevOpsNuget</span>  <span class="n">-Full</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#deploy report</span>
</span></span><span class="line"><span class="cl"><span class="nb">Publish-D365SsrsReport</span> <span class="n">-Module</span> <span class="n">Kaynecustomization</span> <span class="n">-ReportName</span> <span class="n">KACheque_US</span><span class="p">.</span><span class="n">Report</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#environment</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-D365Environment</span> <span class="n">-All</span>
</span></span><span class="line"><span class="cl"><span class="nb">Stop-D365Environment</span> <span class="n">-All</span>
</span></span><span class="line"><span class="cl"><span class="nb">Stop-D365Environment</span> <span class="n">-Aos</span> <span class="n">-Batch</span>
</span></span><span class="line"><span class="cl"><span class="nb">Start-D365Environment</span> <span class="n">-All</span>
</span></span><span class="line"><span class="cl"><span class="nb">Restart-D365Environment</span> <span class="n">-All</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#users</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-D365ExternalUser</span> <span class="n">-Id</span> <span class="s2">&#34;mnguyen&#34;</span> <span class="n">-Name</span> <span class="s2">&#34;Max Nguyen&#34;</span> <span class="n">-Email</span> <span class="s2">&#34;max@automaly.com&#34;</span> <span class="n">-Company</span> <span class="s2">&#34;002&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-D365Module</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">Set-D365Admin</span> <span class="n">-Full</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Help</span> <span class="nb">Set-D365SysAdmin</span> <span class="n">-Full</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-D365Admin</span> <span class="s2">&#34;max@automaly.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-D365User</span> <span class="n">-Email</span> <span class="s2">&#34;max@automaly.com&#34;</span> <span class="p">|</span> <span class="nb">Enable-D365User</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="lcs">LCS</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Get-D365LcsApiToken</span> <span class="n">-ClientId</span> <span class="s2">&#34;***&#34;</span> <span class="n">-Username</span> <span class="s2">&#34;&#34;</span> <span class="n">-Password</span> <span class="s2">&#34;&#34;</span> <span class="n">-LcsApiUri</span> <span class="s2">&#34;https://lcsapi.lcs.dynamics.com&#34;</span> <span class="p">|</span> <span class="nb">Set-D365LcsApiConfig</span> <span class="n">-ProjectId</span> <span class="n">000000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365LcsEnvironmentStart</span> <span class="n">-ProjectId</span> <span class="n">1269585</span> <span class="n">-EnvironmentId</span> <span class="s2">&#34;d5dc45bb-&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365LcsEnvironmentStop</span> <span class="n">-ProjectId</span> <span class="n">1269585</span> <span class="n">-EnvironmentId</span> <span class="s2">&#34;d5dc45bb-&#34;</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="import-a-bacpac-file-into-a-tier1-environment">Import a bacpac file into a Tier1 environment</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Invoke-D365InstallSqlPackage</span>
</span></span><span class="line"><span class="cl"><span class="nb">Import-D365Bacpac</span> <span class="n">-BacpacFile</span> <span class="s2">&#34;J:\MSSQL_BACKUP\AxDB_UAT.bacpac&#34;</span> <span class="n">-ImportModeTier1</span> <span class="n">-NewDatabaseName</span> <span class="n">AxDB_UAT</span> <span class="n">-ShowOriginalProgress</span>
</span></span><span class="line"><span class="cl"><span class="nb">Stop-D365Environment</span> <span class="n">-All</span>
</span></span><span class="line"><span class="cl"><span class="nb">Switch-D365ActiveDatabase</span> <span class="n">-NewDatabaseName</span> <span class="s2">&#34;AxDB_UAT&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365DBSync</span> <span class="n">-ShowOriginalProgress</span>
</span></span><span class="line"><span class="cl"><span class="nb">Start-D365Environment</span> <span class="n">-All</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="db-sync--build">DB Sync &amp; Build</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Get database backup</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-D365LcsDatabaseBackups</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="c"># Build</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365DbSyncModule</span> <span class="n">-Module</span> <span class="s2">&#34;Kaynecustomization&#34;</span> <span class="n">-ShowOriginalProgress</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365ModuleCompile</span> <span class="n">-Module</span> <span class="s2">&#34;Kaynecustomization&#34;</span> <span class="n">-ShowOriginalProgress</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-D365DBSync</span> <span class="n">-ShowOriginalProgress</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="ssrs">SSRS</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Publish-D365SsrsReport</span> <span class="n">-Module</span> <span class="n">GR</span> <span class="n">-ReportName</span> <span class="n">GR_InvSalesVelocityRpt</span><span class="p">.</span><span class="n">AutoDesign1</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>MS-600 Extending Sharepoint</title>
    <link>https://nuxulu.com/2020-07-08-ms-600-extending-sharepoint/</link>
    <pubDate>Wed, 08 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-07-08-ms-600-extending-sharepoint/</guid>
    <description><![CDATA[<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Markmap</title>
<style>
* {
  margin: 0;
  padding: 0;
}
#mindmap {
  display: block;
  width: 100vw;
  height: 100vh;
}
</style>
</head>
<body>
<svg id="mindmap"></svg>
<script src="https://cdn.jsdelivr.net/npm/d3@5"></script><script src="https://cdn.jsdelivr.net/npm/markmap-lib@0.7.11/dist/browser/view.min.js"></script><script>((t,a,e,n)=>{const{Markmap:o,loadPlugins:s}=window.markmap;(a?a(s,e,n):Promise.resolve()).then(()=>{o.create("svg#mindmap",null,t)})})({"t":"root","d":0,"v":"","c":[{"t":"heading","d":1,"v":"1. Introduction","c":[{"t":"list_item","d":2,"v":"Experience using SharePoint Online at the intermediate level"},{"t":"list_item","d":2,"v":"Ability to program with JavaScript, TypeScript, and Node.js"},{"t":"list_item","d":2,"v":"Experience using Visual Studio Code at the intermediate level"},{"t":"list_item","d":2,"v":"Access to a <a href=\"https://developer.microsoft.com/office/dev-program?ocid=MSlearn\" title=\"\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft 365 tenant</a>"}]},{"t":"heading","d":1,"v":"2. SharePoint Framework overview &amp; extensibility options","c":[{"t":"heading","d":2,"v":"2.1. SharePoint Framework extensibility principles"},{"t":"heading","d":2,"v":"2.2. SharePoint Framework overview","c":[{"t":"list_item","d":3,"v":"Client-side development. Run in the browser. There's no server-side component in a SharePoint Framework component."},{"t":"list_item","d":3,"v":"Can create server-side components, host by yourself."},{"t":"list_item","d":3,"v":"JavaScript, HTML, CSS, and images."},{"t":"list_item","d":3,"v":"Framework is backwards compatible"},{"t":"list_item","d":3,"v":"JavaScript web frameworks like React."}]},{"t":"heading","d":2,"v":"2.3. Supported custom component types","c":[{"t":"heading","d":3,"v":"2.3.1. Client-side web parts","c":[{"t":"paragraph","d":4,"v":"Client-side web parts are supported in all environments supported by the SharePoint Framework, including SharePoint Server 2016, SharePoint Server 2019 and SharePoint Online."}]},{"t":"heading","d":3,"v":"2.3.2. Adding SPFx web parts to pages"},{"t":"heading","d":3,"v":"2.3.3. SharePoint Framework extensions","c":[{"t":"list_item","d":4,"v":"delegate controls and ScriptLink"},{"t":"list_item","d":4,"v":"client-side rendering (CSR) and JSLink"},{"t":"list_item","d":4,"v":"custom actions"}]},{"t":"heading","d":3,"v":"2.3.4. Application customizers"},{"t":"heading","d":3,"v":"2.3.5. Field customizer"},{"t":"heading","d":3,"v":"2.3.6. Command sets"},{"t":"heading","d":3,"v":"2.3.7. Library components","c":[{"t":"paragraph","d":4,"v":"Library components are only supported in SharePoint Online."}]}]},{"t":"heading","d":2,"v":"2.4. SharePoint Framework availability"},{"t":"heading","d":2,"v":"2.5. SharePoint Framework and SharePoint on-premises deployments"}]},{"t":"heading","d":1,"v":"3. Create and deploy SharePoint Framework solutions","c":[{"t":"heading","d":2,"v":"3.1. Tooling for SPFx development","c":[{"t":"bullet_list","d":3,"v":"","c":[{"t":"list_item","d":4,"v":"build process and tooling"},{"t":"list_item","d":4,"v":"web frameworks"},{"t":"list_item","d":4,"v":"code editors"}]},{"t":"heading","d":3,"v":"3.1.1. Build process and tooling"},{"t":"heading","d":3,"v":"3.1.2. Web frameworks"},{"t":"heading","d":3,"v":"3.1.3. Code editors"}]},{"t":"heading","d":2,"v":"3.2. Server-side tool comparison"},{"t":"heading","d":2,"v":"3.3. Exploring the SharePoint Framework core development and build tools","c":[{"t":"heading","d":3,"v":"3.3.1. Node.js"},{"t":"heading","d":3,"v":"3.3.2. NPM: Node Package Manager"},{"t":"heading","d":3,"v":"3.3.3. Yeoman"},{"t":"heading","d":3,"v":"3.3.4. Gulp"},{"t":"heading","d":3,"v":"3.3.5. TypeScript"}]},{"t":"heading","d":2,"v":"3.4. SharePoint Framework project structure","c":[{"t":"list_item","d":3,"v":"<strong>.vscode</strong>: This folder contains Visual Studio Code specific files."},{"t":"list_item","d":3,"v":"<strong>config</strong>: This folder contains configuration files used by the project's various build tasks. You'll edit these files as necessary depending on the types of components you're creating and for specific situations, such as the site to test extensions or adding references to external libraries."},{"t":"list_item","d":3,"v":"<strong>dist</strong>: This folder, created automatically when you bundle the project, contains the JavaScript bundle and manifest created by the build process that will be used in deployment."},{"t":"list_item","d":3,"v":"<strong>lib</strong>: This folder, created automatically when you build the project, contains the temporary files generated from the compilation and transpilation of TypeScript to JavaScript and SCSS to CSS files."},{"t":"list_item","d":3,"v":"<strong>node_modules</strong>: This folder is created automatically when installing package dependencies using the npm install command."},{"t":"list_item","d":3,"v":"<strong>src</strong>: This folder contains all the source code for your project."},{"t":"list_item","d":3,"v":"<strong>temp</strong>: This folder, created automatically when you test the project, contains files used by the local development web server."}]},{"t":"heading","d":2,"v":"3.5. Developing and testing solutions","c":[{"t":"heading","d":3,"v":"3.5.1. Local workbench"},{"t":"heading","d":3,"v":"3.5.2. SharePoint-hosted workbench"},{"t":"heading","d":3,"v":"3.5.3. SharePoint Framework deployment artifacts","c":[{"t":"list_item","d":4,"v":"<strong>Installation and registration</strong>: The installation and registration files are included in SharePoint packages deployed to the <strong>SharePoint App Catalogs</strong>."},{"t":"list_item","d":4,"v":"<strong>Component runtime files and dependencies</strong>: These are the files that are needed to run the SharePoint Framework component once it's been deployed and installed in a SharePoint environment. Any dependencies your component uses, such as third-party web framework libraries, can optionally be included in the component's bundle or loaded at runtime from an external CDN. The component's manifest file defines all dependencies the component requires to be present on the page before it's loaded and runs."}]},{"t":"heading","d":3,"v":"3.5.4. Deploy SharePoint assets","c":[{"t":"heading","d":4,"v":"3.5.4.1. Tenant-scoped App Catalog"},{"t":"heading","d":4,"v":"3.5.4.2. Site collection-scoped App Catalog"}]},{"t":"heading","d":3,"v":"3.5.5. Install the app from the site collection's Site Contents page"}]},{"t":"heading","d":2,"v":"3.6. Single part app pages"},{"t":"heading","d":2,"v":"3.7. Isolated web parts"}]},{"t":"heading","d":1,"v":"4. Extend custom solutions with UI components, APIs, and additional surface areas","c":[{"t":"heading","d":2,"v":"4.1. Create appealing solutions with the Office UI Fabric","c":[{"t":"fence","d":3,"v":"<pre><code class=\"language-TypeScript\">public render(): JSX.Element {\n  const previewProps: IDocumentCardPreviewProps = {\n    previewImages: [\n      {\n        previewImageSrc: String(require('./document-preview.png')),\n        iconSrc: String(require('./icon-ppt.png')),\n        width: 318,\n        height: 196,\n        accentColor: '#ce4b1f'\n      }\n    ],\n  };\n\n  return (\n    &lt;DocumentCard onClickHref='http://bing.com'>\n      &lt;DocumentCardPreview { ...previewProps } />\n      &lt;DocumentCardTitle title='Revenue stream proposal fiscal year 2016 version02.pptx' />\n      &lt;DocumentCardActivity\n        activity='Created Feb 23, 2016'\n        people={\n          [\n            { name: 'Kat Larrson', profileImageSrc: String(require('./avatar-kat.png')) }\n          ]\n        }\n      />\n    &lt;/DocumentCard>\n  );\n}\n</code></pre>"}]},{"t":"heading","d":2,"v":"4.2. Incorporate enterprise data with <strong>APIs</strong>","c":[{"t":"heading","d":3,"v":"4.2.1. SharePoint REST API","c":[{"t":"fence","d":4,"v":"<pre><code class=\"language-TypeScript\">private _getListItems(): Promise&lt;ICountryListItem[]> {\n  const endpoint: string = this.context.pageContext.web.absoluteUrl\n    + `/_api/web/lists/getbytitle('Countries')/items?$select=Id,Title`\n\n  return this.context.spHttpClient.get(\n      endpoint,\n      SPHttpClient.configurations.v1\n    )\n    .then(response => {\n      return response.json();\n    })\n    .then(jsonResponse => {\n      return jsonResponse.value;\n    }) as Promise&lt;ICountryListItem[]>;\n}\n</code></pre>"}]},{"t":"heading","d":3,"v":"4.2.2. Microsoft Graph","c":[{"t":"fence","d":4,"v":"<pre><code class=\"language-TypeScript\">this.context.msGraphClientFactory\n     .getClient()\n     .then((client: MSGraphClient): void => {\n        client.api('/me')\n          .get((error: any, user: MicrosoftGraph.User, rawResponse?: any) => {\n            console.log('name: ', user.displayName);\n            console.log('email: ', user.mail);\n            console.log('phone: ', user.businessPhones[0]);\n            });\n          });\n      });\n</code></pre>"}]},{"t":"heading","d":3,"v":"4.2.3. Azure AD secured endpoints","c":[{"t":"fence","d":4,"v":"<pre><code class=\"language-TypeScript\">import {\n  AadHttpClient,\n  HttpClientResponse\n} from '@microsoft/sp-http';\n</code></pre>"},{"t":"fence","d":4,"v":"<pre><code class=\"language-TypeScript\">this.context.aadHttpClientFactory\n  .getClient(&quot;https://your-endpoint-uri&quot;)\n  .then((aadClient: AadHttpClient) => {\n    /* submit request to endpoint */\n  });\n</code></pre>"},{"t":"fence","d":4,"v":"<pre><code class=\"language-TypeScript\">const endpoint: string = &quot;https://your-endpoint-uri/api&quot;;\naadClient.get(endpoint, AadHttpClient.configurations.v1)\n  .then((rawResponse: HttpClientResponse) => {\n    return rawResponse.json();\n  })\n  .then((jsonResponse: any) => {\n    // work with the result\n  });\n</code></pre>"}]}]},{"t":"heading","d":2,"v":"4.3. Granting tenant scripts permissions to Azure AD secured services","c":[{"t":"heading","d":3,"v":"4.3.1. Declare permission requests in SharePoint Framework projects","c":[{"t":"fence","d":4,"v":"<pre><code class=\"language-json\">// package-solution.json\n{\n  &quot;solution&quot;: {\n    &quot;name&quot;: &quot;sp-fx-aad-http-client-side-solution&quot;,\n    &quot;id&quot;: &quot;dfb230b7-4f61-431f-9b65-a34e83922663&quot;,\n    &quot;version&quot;: &quot;1.0.0.0&quot;,\n    &quot;webApiPermissionRequests&quot;: [\n      {\n        &quot;resource&quot;: &quot;Microsoft Graph&quot;,\n        &quot;scope&quot;: &quot;User.ReadBasic.All&quot;\n      }\n    ]\n  },\n  &quot;paths&quot;: {\n    &quot;zippedPackage&quot;: &quot;solution/sp-fx-aad-http.sppkg&quot;\n  }\n}\n</code></pre>"}]},{"t":"heading","d":3,"v":"4.3.2. Approve or reject permission requests from the SharePoint Admin Center"}]},{"t":"heading","d":2,"v":"4.4. Extend Microsoft Teams with the SharePoint Framework","c":[{"t":"heading","d":3,"v":"4.4.1. How to surface SharePoint Framework web parts as Microsoft Teams tabs","c":[{"t":"list_item","d":4,"v":"<strong>Specify the web part can be a tab</strong>: Locate the web part's manifest file. Within the manifest file, locate the property array supportedHosts. The supportedHosts property lists all the different places the web part can be run. By default, it contains a single entry SharePointWebPart. To configure the web part to be used as a Microsoft Teams tab, add TeamsTab to the array."},{"t":"list_item","d":4,"v":"<strong>Create Microsoft Teams tab images</strong>: When you create a new SharePoint Framework project, it creates a folder ./teams in the SharePoint project with two images. You can replace these default images with your own custom images, but make sure you don't change the size dimensions or names of the files."},{"t":"list_item","d":4,"v":"<strong>Create Microsoft Teams app manifest</strong>: All Microsoft Teams apps need an app manifest that describes the app. You can create the manifest yourself, or you can let SharePoint create it for you."}]}]}]}]})</script>
</body>
</html>
]]></description>
</item>
<item>
    <title>Framework vs. Platform</title>
    <link>https://nuxulu.com/2020-07-07-platform-vs-framework/</link>
    <pubDate>Tue, 07 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-07-07-platform-vs-framework/</guid>
    <description><![CDATA[<p></p>
<h1 id="framework">Framework</h1>
<p>In programming, frameworks allow programmers to concentrate on the actual tasks they are faced with rather than to waste their time reinventing the wheel. Usually, frameworks are shipped with a set of predefined functions and classes. When using Spring (Java) or Symfony (PHP) for example, programmers do not need to think about things such as persistence, routing and session management too much because the work is done by standardized framework components.</p>
<h1 id="platform">Platform</h1>
<p>platform, on the other hand, provides both the hardware and the software tools needed to run an application – be it a standalone program or one which has been built on top of a framework. Mostly, it comes in the flavor of Platform-as-a-Service (PaaS), meaning that the code-base of the platform software itself is not distributed or licensed.
Like .NET platform or Windows platform or various cloud-based Platform-as-a-service solutions (like Heruko)</p>
<p>Nodejs, JAVA, .NET are examples of platforms or development platforms. This becomes the core of web application.</p>
<blockquote>
<p>You work on a platform. You use a framework.</p>
</blockquote>
]]></description>
</item>
<item>
    <title>How to upgrade to Visual Studio 2017, .NET 4.7.2 for PU36/10.0.12 and higher</title>
    <link>https://nuxulu.com/2020-06-30-how-to-upgrade-to-visual-studio-2017-.net-4.7.2/</link>
    <pubDate>Tue, 30 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-06-30-how-to-upgrade-to-visual-studio-2017-.net-4.7.2/</guid>
    <description><![CDATA[<p>For the upcoming Dynamics 365 Finance Updates, Visual Studio 2017 and .NET runtime 4.7.2 required for PU36/10.0.12 or higher; New VMs deployed with PU36/10.0.12 or higher will have Visual Studio 2017 as well as .NET runtime 4.7.2 already installed.</p>
<p>For your dev/test/build Tier1 VMs, Microsoft recommends just redeploying a new VM, and you will be all set!</p>
<p>If you cannot deploy new VMs, please follow below steps to update .NET runtime, VS 2017 before installing PU36/10.0.12 or higher, this will be applied for <strong>cloud-hosted environment</strong></p>
<h3 id="1-download-vs-professional-2017-159-herehttpsdownloadvisualstudiomicrosoftcomdownloadprac05c4f5-0da1-429f-8701-ce509ac699267b51a7b8db36f977745cf3e19ef1e9c62ebf29f704aebafce443626b779cb4f8vs_professionalexe-and-install-it">1. Download VS Professional 2017 15.9 <a href="https://download.visualstudio.microsoft.com/download/pr/ac05c4f5-0da1-429f-8701-ce509ac69926/7b51a7b8db36f977745cf3e19ef1e9c62ebf29f704aebafce443626b779cb4f8/vs_Professional.exe" target="_blank" rel="noopener noreffer ">here</a> and install it</h3>
<h3 id="2-the-net-runtime-download-is-available-herehttpsdotnetmicrosoftcomdownloaddotnet-frameworknet472-by-clicking-on-the-_download-net-framework-472-runtime_-and-running-the-installation-restart-required">2. The .NET runtime download is available <a href="https://dotnet.microsoft.com/download/dotnet-framework/net472" target="_blank" rel="noopener noreffer ">here</a> by clicking on the <em>Download .NET Framework 4.7.2 Runtime</em> and running the installation, restart required.</h3>
<h3 id="3-go-to-dynamics-lifecycle-services-and-download-pu3610012-or-any-higher-package-which-is-a-part-of-the-platform-and-application-binary-the-vsix-file-is-located-in-the-_devtoolsservicescripts_-folder">3. Go to Dynamics Lifecycle Services and download PU36/10.0.12 or any higher package which is a part of the Platform and application binary, the VSIX file is located in the <em>DevToolsService\Scripts</em> folder.</h3>
<p></p>
<p>You need to <code>install Microsoft.Dynamics.Framework.Tools.Installer</code> and then <code>Microsoft.Dynamics.Framework.Tools.InternalDevTools</code>.
After the installation, open the VS2017 if you should see <strong>Dynamics 365</strong> menu extension like below</p>
<p></p>
<h3 id="4-if-you-try-to-access-the-client-before-applying-the-package-you-will-get-the-error-like-below-in-event-viewer-and-unable-to-access-the-environment-so-you-need-to-apply-an-update-first">4. If you try to access the client before applying the package you will get the error like below in event viewer and unable to access the environment, so you need to apply an update first.</h3>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">AX is shutting down due to an error. Serialization version mismatch detect, make sure the runtime dlls are in sync with the deployed metadata. Version of file &lsquo;194&rsquo;. Version of dll &lsquo;193&rsquo;.</div>
        </div>
    </div>
<h3 id="5-in-lcs-navigate-to-your-cloud-hosted-environment-and-apply-platform-and-application-binary-package-pu3610012-or-higher-after-completed-upgrading-you-will-be-able-to-access-the-environment-client">5. In LCS, navigate to your cloud-hosted environment, and apply Platform and application binary package PU36/10.0.12 or higher. After completed upgrading, you will be able to access the environment client.</h3>
<p>Overall, there is no change in the compiler, metadata; this is only an update to the Visual Studio extensions and NET runtime for the tier1 VMs.</p>
]]></description>
</item>
<item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 2)</title>
    <link>https://nuxulu.com/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</link>
    <pubDate>Sun, 28 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Kome Hoang</author>
    <guid>https://nuxulu.com/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</guid>
    <description><![CDATA[<h3 id="1-example-two-a-new-forms-response-is-submitted-then-flow-promts-for-an-approval-request-before-a-new-record-is-created-in-vendors-table">1. Example two: A new Forms response is submitted then Flow promts for an approval request before a new record is created in Vendors table</h3>
<p>In the last example, we created a simple Flow to create a new Vendor Account from submitted Forms responses. The process was made as simple as it could be: When a new Forms response if submitted, a new Vendor Account will be created on D365FO client.</p>
<p>To make the process more reliable, we will now add an approval step to the Flow. It means before a new Vendor Account is created, the user will have the right to <code>Approve</code> or <code>Reject</code> the request.</p>
<h4 id="11-step-1-add-a-new-step-to-the-flow">1.1. <strong>Step 1: Add a new step to the Flow</strong></h4>
<p>The flow that we have is like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-1-Flow-1.png" title="Flow step 1" data-thumbnail="/imagesposts/E2-1-Flow-1.png" data-sub-html="<h2>The old flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">The old flow</figcaption>
    </figure></p>
<p>We will add a step right before the new record is created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-2-Flow-2.png" title="Flow step 2" data-thumbnail="/imagesposts/E2-2-Flow-2.png" data-sub-html="<h2>Add a new step</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Add a new step</figcaption>
    </figure></p>
<p>We will go with <code>Approval &gt; Start and wait for an approval</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-3-Flow-3.png" title="Flow step 3" data-thumbnail="/imagesposts/E2-3-Flow-3.png" data-sub-html="<h2>Add approval request</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Add approval request</figcaption>
    </figure></p>
<p>This step will offer several types of approval in which the most common ones are <code>All users must approve</code> or <code>First approve/reject from any user</code>. To make it simple, we will go with <code>First approval</code> because in this example, we will have only one user.</p>
<p>As straightforward as they seem, the fields explain themselves. We will start an approval request, set a title for it and assign it to a user (only users in the same organisation as you).</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-4-Flow-4.png" title="Flow step 4" data-thumbnail="/imagesposts/E2-4-Flow-4.png" data-sub-html="<h2>Single approval</h2><p>Flow step 4</p>">
        
    </a><figcaption class="image-caption">Single approval</figcaption>
    </figure></p>
<p><em><strong>Note 2-1</strong></em></p>
<blockquote>
<p><em>Almost all fields including <code>Title</code>, <code>Details</code>, etc. are fully customisable by using <code>Dynamic content</code>.</em></p>
</blockquote>
<p>The flow now will look like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-5-Flow-5.png" title="Flow step 5" data-thumbnail="/imagesposts/E2-5-Flow-5.png" data-sub-html="<h2>Revised flow</h2><p>Flow step 5</p>">
        
    </a><figcaption class="image-caption">Revised flow</figcaption>
    </figure></p>
<h4 id="12-step-2-testing-out">1.2. <strong>Step 2: Testing out</strong></h4>
<p>Trigger a <code>test</code> run of the flow.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-6-Flow-6.png" title="Flow step 6" data-thumbnail="/imagesposts/E2-6-Flow-6.png" data-sub-html="<h2>Test run</h2><p>Flow step 6</p>">
        
    </a><figcaption class="image-caption">Test run</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-7-Flow-7.png" title="Flow step 7" data-thumbnail="/imagesposts/E2-7-Flow-7.png" data-sub-html="<h2>Test run triggered</h2><p>Flow step 7</p>">
        
    </a><figcaption class="image-caption">Test run triggered</figcaption>
    </figure></p>
<p>The <code>test</code> run is ready, waiting for the input from <code>MS Forms</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-8-Flow-8.png" title="Flow step 8" data-thumbnail="/imagesposts/E2-8-Flow-8.png" data-sub-html="<h2>Test run ready</h2><p>Flow step 8</p>">
        
    </a><figcaption class="image-caption">Test run ready</figcaption>
    </figure></p>
<p>Submit a new response.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-9-Flow-9.png" title="Flow step 9" data-thumbnail="/imagesposts/E2-9-Flow-9.png" data-sub-html="<h2>Form new response</h2><p>Flow step 9</p>">
        
    </a><figcaption class="image-caption">Form new response</figcaption>
    </figure></p>
<p>The flow will run. The process will show that an approval is being waited from the assigned user.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-10-Flow-10.png" title="Flow step 10" data-thumbnail="/imagesposts/E2-10-Flow-10.png" data-sub-html="<h2>Waiting for an approval</h2><p>Flow step 10</p>">
        
    </a><figcaption class="image-caption">Waiting for an approval</figcaption>
    </figure></p>
<p>An approval request will be sent to the mailbox of the assigned user. That user can check the request in <code>Office.com &gt; Outlook</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-11-Flow-11.png" title="Flow step 11" data-thumbnail="/imagesposts/E2-11-Flow-11.png" data-sub-html="<h2>Approval request</h2><p>Flow step 11</p>">
        
    </a><figcaption class="image-caption">Approval request</figcaption>
    </figure></p>
<p>Upon approval, the flow will finish its pending step and a new record will be created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-12-Flow-12.png" title="Flow step 12" data-thumbnail="/imagesposts/E2-12-Flow-12.png" data-sub-html="<h2>Flow finishes</h2><p>Flow step 12</p>">
        
    </a><figcaption class="image-caption">Flow finishes</figcaption>
    </figure></p>
<h3 id="2-example-three-from-the-created-record-in-vendors-table-add-related-records-in-other-tables">2. Example three: From the created record in Vendors table, add related records in other tables</h3>
<p>In the last example, we added an Approval step to the Flow which will allow users to give <code>Approve</code> or <code>Reject</code> action toward the request coming from the Form.</p>
<p>We can actually utilise the Flow one step further: To create additional records on different tables that might depend on the created record in VendTable.</p>
<p>To make it easier to understand, the process is like this:</p>
<ul>
<li>Create a new <code>Vendor Account</code> by using input from the Form.</li>
<li>Create a new <code>Bank Account</code> with the <code>Bank Account ID</code> exactly similar to the <code>Vendor Account</code>.</li>
<li>Add some contact details to the <code>Vendor Account</code>.</li>
</ul>
<p>Which entities should we target to? They are:</p>
<ul>
<li>For <code>Vendor Bank Account</code>: VendorBankAccounts</li>
<li>For <code>Vendor Contact Details</code>: PartyContacts</li>
</ul>
<p>You can play around in Visual Studio to get used to looking for an Entity that might fulfil the requirements of your intergration. Check out the next part of this article to get some quick tips into that.</p>
<p>Assuming that we now have a Flow as we configured in the last two examples, we can add some more steps like these underneath.</p>
<h4 id="21-step-1-add-a-new-step-to-add-a-new-record-to-vendorbankaccounts-and-partycontacts">2.1. <strong>Step 1: Add a new step to add a new record to VendorBankAccounts and PartyContacts</strong></h4>
<p>Given the case that we had a Vendor Account and Bank Account for that Vendor Account, the records would be like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-1-SSMSBank.png" title="SSMSBank" data-thumbnail="/imagesposts/E3-1-SSMSBank.png" data-sub-html="<h2>Relation in SSMS</h2><p>SSMSBank</p>">
        
    </a><figcaption class="image-caption">Relation in SSMS</figcaption>
    </figure></p>
<p>The relation should be: <code>VendTable.AccountNum</code> = <code>VendBankAccount.VendAccount</code></p>
<p>On the client, the information should be illustrated like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-2-VendBank1.png" title="VendBank1" data-thumbnail="/imagesposts/E3-2-VendBank1.png" data-sub-html="<h2>Vendor Bank Account</h2><p>VendBank1</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Account</figcaption>
    </figure></p>
<p>And, when checking the Bank Account details, we would find.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-3-VenkBank2.png" title="VendBank2" data-thumbnail="/imagesposts/E3-3-VenkBank2.png" data-sub-html="<h2>Vendor Bank Details</h2><p>VendBank2</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Details</figcaption>
    </figure></p>
<p>Now, to do so, we will add a new step right after the creation of VendTable record.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-4-Flow-1.png" title="VendBank3" data-thumbnail="/imagesposts/E3-4-Flow-1.png" data-sub-html="<h2>A new step</h2><p>VendBank3</p>">
        
    </a><figcaption class="image-caption">A new step</figcaption>
    </figure></p>
<ul>
<li><code>Instance</code> = <code>Environment URL</code> (same as any other steps)</li>
<li><code>Entity name</code> = <code>VendorBankAccounts</code> (check my post about good tips with Visual Studio to know how to find the Data Entity)</li>
<li><code>Supplier account</code> = <code>Supplier account</code> from last step</li>
<li><code>Bank account</code>= <code>Supplier account</code> from last step (Because I would like to have same Vendor Account and Bank Account)</li>
</ul>
<p>When saying &ldquo;from the last step&rdquo;, I meant this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-5-Flow-2.png" title="DynamicsContent" data-thumbnail="/imagesposts/E3-5-Flow-2.png" data-sub-html="<h2>Selecting Dynamic Content from former steps</h2><p>DynamicsContent</p>">
        
    </a><figcaption class="image-caption">Selecting Dynamic Content from former steps</figcaption>
    </figure></p>
<p>In MS FLow, any steps that are already executed will have outputs. We, in this step, are taking the <code>Supplier Account</code> from the last step of creating a new record in VendTable . This dynamic content was generated when the new record is created.</p>
<p><em><strong>Note 3-1</strong></em></p>
<blockquote>
<p><em>Keep in mind that if the last step is not &ldquo;Creating a new record&rdquo;, chance is that you cannot take the output from it because there&rsquo;s simply none.</em></p>
</blockquote>
<p>Click on <code>Show advanced options</code> so we can add more information to the Vendor Bank Account.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-6-Flow-3.png" title="AdvancedOptions" data-thumbnail="/imagesposts/E3-6-Flow-3.png" data-sub-html="<h2>Select Show advanced options</h2><p>AdvancedOptions</p>">
        
    </a><figcaption class="image-caption">Select Show advanced options</figcaption>
    </figure></p>
<p>Add more details to the bank account:</p>
<ul>
<li><code>Name</code> = <code>Bank account name</code> chosen from the Form using Dynamic Content (we don&rsquo;t want to copy any more values from the VendTable record - we actually will specify a bank account name when composing a response on the Form)</li>
<li><code>Bank account number</code> = <code>Bank account number</code> chosen from the Form using Dynamic Content</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E3-7-Flow-4.png" title="BankDetails" data-thumbnail="/imagesposts/E3-7-Flow-4.png" data-sub-html="<h2>Add more details to bank account</h2><p>BankDetails</p>">
        
    </a><figcaption class="image-caption">Add more details to bank account</figcaption>
    </figure></p>
<p>We finished with Vendor Bank Account.</p>
<p>We will do just the same with the record in PartyContacts.</p>
<ul>
<li><code>Party ID</code> = <code>Party ID</code> from VendTable record</li>
<li><code>Contact number/address</code> = <code>Email</code> from the Form (in this case, I would like to add an email address - it is totally up to you to opt to add phone number, Skype, Twitter and some other contact detail that D365FO is supporting)</li>
<li><code>Purpose</code> = I am &ldquo;hard-coding&rdquo; this <code>&quot;Business&quot;</code> (the supported purpose of Contact can be found on Vendor Card on D356FO client - this purpose should mainly be used when sending emails, i.e. D365FO want to send Purchase Order Confirmation to any email addresses with purpose <code>&quot;Invoice&quot;</code>)</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E3-8-Flow-5.png" title="VendorContact" data-thumbnail="/imagesposts/E3-8-Flow-5.png" data-sub-html="<h2>Vendor Contact Details</h2><p>VendorContact</p>">
        
    </a><figcaption class="image-caption">Vendor Contact Details</figcaption>
    </figure></p>
<h4 id="22-step-2-testing-out">2.2. <strong>Step 2: Testing out</strong></h4>
<p>Form input.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-9-Flow-6.png" title="FormInput1" data-thumbnail="/imagesposts/E3-9-Flow-6.png" data-sub-html="<h2>Company details</h2><p>FormInput1</p>">
        
    </a><figcaption class="image-caption">Company details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-10-Flow-7.png" title="FormInput2" data-thumbnail="/imagesposts/E3-10-Flow-7.png" data-sub-html="<h2>Bank details</h2><p>FormInput2</p>">
        
    </a><figcaption class="image-caption">Bank details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-11-Flow-8.png" title="FormInput3" data-thumbnail="/imagesposts/E3-11-Flow-8.png" data-sub-html="<h2>Contact details</h2><p>FormInput3</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p>Results on D365FO client.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-12-Flow-9.png" title="Result1" data-thumbnail="/imagesposts/E3-12-Flow-9.png" data-sub-html="<h2>Contact details</h2><p>Result1</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-13-Flow-10.png" title="Result2" data-thumbnail="/imagesposts/E3-13-Flow-10.png" data-sub-html="<h2>Bank account</h2><p>Result2</p>">
        
    </a><figcaption class="image-caption">Bank account</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-14-Flow-11.png" title="Result3" data-thumbnail="/imagesposts/E3-14-Flow-11.png" data-sub-html="<h2>Bank account details</h2><p>Result3</p>">
        
    </a><figcaption class="image-caption">Bank account details</figcaption>
    </figure></p>
<p>There you go, simple integration between MS Forms, MS Automate and D365FO client. I am seeing that Microsoft is improving such by adding more actions on MS Automate. I believe we will be able to do many more jobs with the built-in utilities of MS Automate.</p>
<h3 id="3-how-to-determine-the-data-entity-that-should-be-used-in-the-power-automate">3. How to determine the Data Entity that should be used in the Power Automate</h3>
<p>The names of the target entity on <code>D365FO client</code> and being found in <code>Power Automate</code> should be different. You can always find them out by testing several import/export but, with the help of <code>Visual Studio</code>, you will be able to save a lot of time. This, however, requires a certain extent of experience working with data integration on D365FO.</p>
<p>Given the case that we would like to import data to All Vendors, we will start our search in <code>Workspaces &gt; Data Management &gt; Data Entities</code>. Apply several filters here and there, and looking for potential ones that we usually do, we will finally end our search at the VendVendorV2Entity</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-1-Entity-1.png" title="Data Entities" data-thumbnail="/imagesposts/VS-1-Entity-1.png" data-sub-html="<h2>Data Entities</h2><p>Data Entities</p>">
        
    </a><figcaption class="image-caption">Data Entities</figcaption>
    </figure></p>
<p>Making our way to <code>Visual Studio</code>, it is not a difficult task for us to find out the Entity.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-2-Entity-2.png" title="VendVendorV2Entity" data-thumbnail="/imagesposts/VS-2-Entity-2.png" data-sub-html="<h2>VendVendorV2Entity</h2><p>VendVendorV2Entity</p>">
        
    </a><figcaption class="image-caption">VendVendorV2Entity</figcaption>
    </figure></p>
<p>Check out the <code>Properties</code>, we will need to get details in the <code>Public</code> group.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-3-Properties.png" title="Properties" data-thumbnail="/imagesposts/VS-3-Properties.png" data-sub-html="<h2>Properties</h2><p>Properties</p>">
        
    </a><figcaption class="image-caption">Properties</figcaption>
    </figure></p>
<p>In <code>Public</code>:</p>
<ul>
<li>Is Public: If it is <code>Yes</code>, the entity can be found in Power Automate; otherwise, <code>No</code>.</li>
<li>Public Collection Name: <code>Entity name</code> on Power Automate.</li>
</ul>
<p>The information should be displayed here:</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-12-Flow-10.png" title="Info on Automate" data-thumbnail="/imagesposts/E1-12-Flow-10.png" data-sub-html="<h2>Info on Automate</h2><p>Info on Automate</p>">
        
    </a><figcaption class="image-caption">Info on Automate</figcaption>
    </figure></p>
<p>Furthermore, by checking the <code>Entity</code>&rsquo;s fields, we can get the information of mapping between the <code>Entity</code> and the physical table <code>VendTable</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-4-EntityFields.png" title="Entity fields" data-thumbnail="/imagesposts/VS-4-EntityFields.png" data-sub-html="<h2>Entity fields</h2><p>Entity fields</p>">
        
    </a><figcaption class="image-caption">Entity fields</figcaption>
    </figure></p>
<p>Give yourself some time to play around between <code>MS Forms</code>, <code>MS Automate</code> and <code>Visual Studio</code>. You will finally see the relations between them.</p>
]]></description>
</item>
<item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 1)</title>
    <link>https://nuxulu.com/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</link>
    <pubDate>Sun, 24 May 2020 00:00:00 &#43;0000</pubDate>
    <author>Kome Hoang</author>
    <guid>https://nuxulu.com/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</guid>
    <description><![CDATA[<p><em>With any D365FO users, Data Management workspace and Data Entities should have become one of the most used and well-known tools in the system. We all agree how powerful such integration framework is, especially when it comes to a large number of records that we would need to import into different tables.</em></p>
<p><em>The classic method that we have been utilizing is to include all source data in a single (or multiple, much depending on the purpose and order of data integration) Excel sheet, trigger an import execution, pass any validation layers that present and ultimately have the data available on D365FO. Now, I would like to propose another method that might come useful in some circumstances: Using Microsoft Forms.</em></p>
<p><figure><a class="lightgallery" href="/imagesposts/Introduction.png" title="Introduction" data-thumbnail="/imagesposts/Introduction.png" data-sub-html="<h2>The trio</h2><p>Introduction</p>">
        
    </a><figcaption class="image-caption">The trio</figcaption>
    </figure></p>
<h2 id="when">When</h2>
<p>This method should be at its finest when you are planning to outsource the input to any external users.</p>
<p>Imagine you are a company who is using D365FO to leverage your daily work. You now want to add many local vendors to your system in form of new Vendor Accounts. It is fine to collect all information from them (i.e. Vendor Company’s name, their address, their contact details and so on), put everything in an Excel sheet and import it. Yet, chance is that it would take (a lot of) time for you to finish this task. You would then be very likely to try coming up with some methods to cut down time for it.</p>
<p>That demand should raise two questions:</p>
<ul>
<li>How can we let the vendors enter their information by themselves?</li>
<li>And, how can we then have all such information in our system?</li>
</ul>
<h2 id="what">What</h2>
<p>What should be needed?</p>
<ul>
<li><a href="https://forms.office.com/" target="_blank" rel="noopener noreffer ">Microsoft Forms</a>: To establish a process in which you will publish a prepared form. Any vendors out there will have the access to it and they can fill any fields on in.</li>
<li><a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreffer ">Microsoft Power Automate aka. Microsoft Flow</a>: To set up a protocol to push the input information (form responses) to the target (D365FO Data Entities).</li>
<li><em>(Optional)</em> Access to Visual Studio on your virtual machine: To help you determine the target Data Entities more easily and efficiently.</li>
</ul>
<h2 id="how">How</h2>
<p>The flow should go like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/Biggest-Flow.png" title="Biggest FLow" data-thumbnail="/imagesposts/Biggest-Flow.png" data-sub-html="<h2>The Biggest FLow</h2><p>Biggest FLow</p>">
        
    </a><figcaption class="image-caption">The Biggest FLow</figcaption>
    </figure></p>
<p>To make it short, when a response is submitted in Microsoft Form, the Flow in MS Power Automate is triggered automatically. An approval request will be sent to your Outlook mailbox and if it is approved, a new record will be created in the target data entity.</p>
<p>Let go through three examples in the next articles in the series (from the simplest to a more complicated) so we will see the logic behind this process.</p>
<p>As easy as it sounds, in this example, we will create a new Vendor Account from Microsoft Forms with only a small number of fields being populate.
<strong>Note</strong></p>
<blockquote>
<p><em>To help simplify the example, the number of fields is minimised. In other words, we will import just enough fields so the new Vendor Account is valid.</em>
<em>Given that, only <code>Vendor Account</code> and <code>Vendor Group</code> are chosen to be imported.</em></p>
</blockquote>
<h3 id="step-1-create-a-ms-form">Step 1: Create a MS Form</h3>
<p>To do so, we will access <a href="https://forms.office.com/" target="_blank" rel="noopener noreffer ">Microsoft Forms</a> and create a new form. To make the new form usable, we will create two questions asking for inputs of Vendor Account and Vendor Group.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-1-NewForm.png" title="Example 1 Form" data-thumbnail="/imagesposts/E1-1-NewForm.png" data-sub-html="<h2>Example 1 Form</h2><p>Example 1 Form</p>">
        
    </a><figcaption class="image-caption">Example 1 Form</figcaption>
    </figure></p>
<p>Note all information on the form is customisable.
<strong>Note 1-1</strong></p>
<blockquote>
<p>We can make the questions&hellip;any questions that suit the purpose of the form. Say, in reality, the question can be <code>&quot;What is your company's name?&quot;</code> if you want to send this form to any external vendor users. The question does not change the usability of the returned response&rsquo;s value. It can still be mapped to VendAccount not matter what the question is.
<strong>Note 1-2</strong>
The second question is being set in form of a Choice question. The given choices should match with available Vendor Group values found on your D365FO client. If this question is a Text one, chance is that its response might not match with any available Vendor Group values, thus, will return an error during Flow runtime.
Vendor Groups can be found under <code>Account Payable &gt; Vendors &gt; Vendor Groups</code>. In this example, <code>TopVendor</code> and <code>Others</code> are two available Vendor Groups in my D365FO client.</p>
</blockquote>
<p><figure><a class="lightgallery" href="/imagesposts/E1-2-VendorGroups.png" title="Vendor Groups" data-thumbnail="/imagesposts/E1-2-VendorGroups.png" data-sub-html="<h2>Vendor Groups</h2><p>Vendor Groups</p>">
        
    </a><figcaption class="image-caption">Vendor Groups</figcaption>
    </figure></p>
<h3 id="step-2-create-a-ms-flow">Step 2: Create a MS Flow</h3>
<p>To do so, we will access <a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreffer ">Microsoft Power Automate</a> and create a new flow. We will go with an <code>Automated</code> one in this case.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-3-Flow-1.png" title="Flow step 1" data-thumbnail="/imagesposts/E1-3-Flow-1.png" data-sub-html="<h2>Automated flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">Automated flow</figcaption>
    </figure></p>
<p>Search for <code>form</code> and choose the trigger <code>When a new response is submitted</code>. Hit <code>Create</code> to create a new flow.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-4-Flow-2.png" title="Flow step 2" data-thumbnail="/imagesposts/E1-4-Flow-2.png" data-sub-html="<h2>Form trigger</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Form trigger</figcaption>
    </figure></p>
<p>Choose the <code>form</code> that we just created using the dropdown list.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-5-Flow-3.png" title="Flow step 3" data-thumbnail="/imagesposts/E1-5-Flow-3.png" data-sub-html="<h2>Choose form</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Choose form</figcaption>
    </figure></p>
<p>Press <code>New step</code>, search for <code>form</code> and go with <code>Get response details</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-6-Flow-4.png" title="FLow step 4" data-thumbnail="/imagesposts/E1-6-Flow-4.png" data-sub-html="<h2>New step: Get response details</h2><p>FLow step 4</p>">
        
    </a><figcaption class="image-caption">New step: Get response details</figcaption>
    </figure></p>
<p>In the new step, choose the <code>Form ID</code>. As soon as we move the cursor to the <code>Response ID</code> field, the <code>FLow</code> will suggest the <code>Dynamics content</code> that we can use. In this case, there should be only one dynamic content, which is <code>List of response notifications Response ID</code>. We will go with it by choosing it.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-7-Flow-5.png" title="FLow step 5" data-thumbnail="/imagesposts/E1-7-Flow-5.png" data-sub-html="<h2>Get response details</h2><p>FLow step 5</p>">
        
    </a><figcaption class="image-caption">Get response details</figcaption>
    </figure></p>
<p>After doing so, the flow should look like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-8-Flow-6.png" title="FLow step 6" data-thumbnail="/imagesposts/E1-8-Flow-6.png" data-sub-html="<h2>Form done</h2><p>FLow step 6</p>">
        
    </a><figcaption class="image-caption">Form done</figcaption>
    </figure></p>
<p>Now, the reponse details will be sent from the <code>Form</code> to the <code>Flow</code> when a new response is submitted. Next, we will set up the step to create a new Vendor Account.</p>
<p>Create a new step, search for <code>dynamics</code> and go with <code>Dynamics 365 for Finance and Operations</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-9-Flow-7.png" title="FLow step 7" data-thumbnail="/imagesposts/E1-9-Flow-7.png" data-sub-html="<h2>Dynamics 365 FinOps</h2><p>FLow step 7</p>">
        
    </a><figcaption class="image-caption">Dynamics 365 FinOps</figcaption>
    </figure></p>
<p>Choose <code>Create record</code> action.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-10-Flow-8.png" title="FLow step 8" data-thumbnail="/imagesposts/E1-10-Flow-8.png" data-sub-html="<h2>Create record action</h2><p>FLow step 8</p>">
        
    </a><figcaption class="image-caption">Create record action</figcaption>
    </figure></p>
<p>Choose the Dynamics 365 FinOps <code>Instance</code> from the dropdown list. If your client does not appear here, choose <code>Enter custom value</code>. For privacy, environments&rsquo; name will be censored in our example.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-11-Flow-9.png" title="FLow step 9" data-thumbnail="/imagesposts/E1-11-Flow-9.png" data-sub-html="<h2>Set D365FO instance</h2><p>FLow step 9</p>">
        
    </a><figcaption class="image-caption">Set D365FO instance</figcaption>
    </figure></p>
<p>The <code>Instance</code> should be the <code>link</code> to your D365FO client. Set <code>Entity name</code> VendorsV2.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-12-Flow-10.png" title="FLow step 10" data-thumbnail="/imagesposts/E1-12-Flow-10.png" data-sub-html="<h2>Set Instance and Entity</h2><p>FLow step 10</p>">
        
    </a><figcaption class="image-caption">Set Instance and Entity</figcaption>
    </figure></p>
<p><code>Note 1-3</code></p>
<blockquote>
<p><em>Later in this series, we will see how to find the exact <code>Entity name</code> using <code>Visual Studio</code>. Also, we will see in which condition, the Entity can be used in <code>Power Automate</code>.</em></p>
</blockquote>
<p>Populate the fields that we want to import. In this example, we will populate only 3 fields: <code>Group (VendorGroupID)</code>, <code>Company (DataAreaId)</code> and <code>Supplier Account (VendorAccountNumber)</code>.</p>
<p><code>Dynamic content</code> will be suggested automatically when the cursor is placed in each field.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-13-Flow-11.png" title="FLow step 11" data-thumbnail="/imagesposts/E1-13-Flow-11.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 11</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We can map <code>Form fields</code> with <code>Automate fields</code> or <code>hardcode</code> in these fields:</p>
<ul>
<li><code>Group</code> = Response of <code>What is the Vendor Group?</code> question.</li>
<li><code>Company</code> = <em>(hardcode)</em> <code>usmf</code>.</li>
<li><code>Supplier Account</code> = Response of <code>What is the Vendor Account?</code> question.</li>
<li><code>Name</code> = <code>Supplier Account</code> =  Response of <code>What is the Vendor Account?</code> question (<code>Show advanced option</code> on the Flow to find the field <code>Name (VendorOrganisationName)</code>).
These fields should be required when creating a new Vendor Account on D365FO client.</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E1-14-Flow-12.png" title="FLow step 12" data-thumbnail="/imagesposts/E1-14-Flow-12.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 12</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We are done here with the set up.</p>
<h3 id="step-3-testing-out">Step 3: Testing out</h3>
<p>On <code>Forms</code>, choose the form that we just created, click on <code>Preview</code> so we can submit a form response.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-15-Flow-13.png" title="FLow step 13" data-thumbnail="/imagesposts/E1-15-Flow-13.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 13</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>Check out <code>All Vendors (VendTableListPage)</code> on the client to find a new Vendor Account is created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-16-Flow-14.png" title="FLow step 14" data-thumbnail="/imagesposts/E1-16-Flow-14.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 14</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p><code>Note 1-4</code></p>
<blockquote>
<p><em>Use <code>Test</code> option in Power Automate to follow the process of the Flow. This, in other words, is so-called <code>&quot;Run Flow with Debug&quot;</code> option.</em></p>
</blockquote>
]]></description>
</item>
<item>
    <title>Database Sync after data type on field has been changed</title>
    <link>https://nuxulu.com/2020-05-10-database-sync-after-data-type-on-field-has-been-changed/</link>
    <pubDate>Sun, 10 May 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-05-10-database-sync-after-data-type-on-field-has-been-changed/</guid>
    <description><![CDATA[<p>You will got an error like this when doing Database Synchronization after changing the data type of the field on the table:</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">InvalidOperationException: Table &hellip; : Converting Field &lsquo;..&rsquo; of Type &lsquo;..&rsquo; to &lsquo;..&rsquo; is not support. Please drop the original field, sync the table and add new field with same name if needed.</div>
        </div>
    </div>
<p>Solution:</p>
<ul>
<li>Drop the table and delete references from SQLDictionary</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">DROP</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">AXDB</span><span class="p">.</span><span class="n">dbo</span><span class="p">.</span><span class="n">NAMEOFTABLE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">DELETE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">AXDB</span><span class="p">.</span><span class="n">dbo</span><span class="p">.</span><span class="n">SQLDICTIONARY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="n">TABLEID</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">SELECT</span><span class="w"> </span><span class="n">TABLEID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">SQLDICTIONARY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;NAMEOFTABLE&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">AND</span><span class="w"> </span><span class="n">FIELDID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Restart IIS</li>
<li>In VS 2015, run DB sync again.</li>
</ul>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Getting onebox VHD Dynamics 365 finance and operations virtual machine</title>
    <link>https://nuxulu.com/2020-04-06-getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/</link>
    <pubDate>Mon, 06 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-04-06-getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/</guid>
    <description><![CDATA[<ul>
<li><a href="#1-download-dynamics-365-finance-and-operations-vhd-files" rel="">1. Download Dynamics 365 finance and operations VHD files</a></li>
<li><a href="#2-extend-the-evaluattion-license" rel="">2. Extend the Evaluattion license</a></li>
<li><a href="#3-rename-vm" rel="">3. Rename VM</a>
<ul>
<li><a href="#update-financial-reporting" rel="">Update financial reporting</a></li>
<li><a href="#update-the-azure-storage-emulator" rel="">Update the Azure Storage Emulator</a></li>
</ul>
</li>
<li><a href="#4-location-of-packages-source-code-and-other-aos-configurations" rel="">4. Location of packages, source code, and other AOS configurations</a></li>
<li><a href="#5-redeploying-or-restarting-the-runtime-on-the-vm" rel="">5. Redeploying or restarting the runtime on the VM</a></li>
<li><a href="#6-update-to-the-latest-version" rel="">6. Update to the latest version</a></li>
<li><a href="#7-for-vhd-that-was-released-for-versions-10024-and-later" rel="">7. For (VHD) that was released for versions 10.0.24 and later</a>
<ul>
<li><a href="#71-register-a-new-application-in-azure-active-directory" rel="">7.1 Register a new application in Azure Active Directory</a></li>
<li><a href="#72-run-the-setup-script" rel="">7.2 Run the setup script</a></li>
</ul>
</li>
</ul>
<h2 id="1-download-dynamics-365-finance-and-operations-vhd-files">1. Download Dynamics 365 finance and operations VHD files</h2>
<ul>
<li>
<p>Go to the LCS main page and select <strong>Shared asset library</strong> or go to Shared Asset Library.</p>
</li>
<li>
<p>Select the asset type <strong>Downloadable VHD</strong>.</p>
</li>
<li>
<p>Find the VHD you are looking for based on the desired Finance and Operation version. The VHD is divided into multiple file parts that you need to download. For example, the asset files that start with &ldquo;VHD - 10.0.5&rdquo; are the different files you need in order to install version 10.0.5.</p>
</li>
<li>
<p>Download all files (parts) associated with the desired VHD to a local folder.</p>
</li>
<li>
<p>After the download is complete, run the executable file that you downloaded, accept the software license agreement, and choose a file path to extract the VHD to.</p>
</li>
<li>
<p>This creates a local VHD file that you can use to run a local virtual machine.</p>
</li>
<li>
<p>Sign in to the VM by using the following credentials:</p>
<ul>
<li>User name: <strong>Administrator</strong></li>
<li>Password: <strong>pass@word1</strong></li>
</ul>
</li>
<li>
<p>Provision the administrator user.</p>
</li>
</ul>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Note<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>For security reasons the reply URL setup for AAD was changed, The &ldquo;Admin user provisioning&rdquo; tool is deleted from 10.0.24 <strong>cloud hosted</strong> VM. More info here <a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#frequently-asked-questions" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#frequently-asked-questions</a>.</p>
<p>You still have it in the VHD machine.</p>
</div>
        </div>
    </div>
<h2 id="2-extend-the-evaluattion-license">2. Extend the Evaluattion license</h2>
<ul>
<li>Run cmd with Admin right.</li>
<li>Run <code>slmgr -dli</code> to check the current period status.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">Name: Windows(R), ServerDatacenterEval edition
</span></span><span class="line"><span class="cl">Description: Windows(R) Operating System, TIMEBASED_EVAL channel
</span></span><span class="line"><span class="cl">Partial Product Key: H6F8M
</span></span><span class="line"><span class="cl">License Status: Licensed
</span></span><span class="line"><span class="cl">Timebased activation expiration: 259199 minute(s) (180 day(s))
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Run <code>slmgr –rearm</code> to extend the evaluation period.</li>
<li>Run <code>slmgr –dlv</code> to see how many extensions do you have left. You can only extend the license a limited number of times.</li>
</ul>
<h2 id="3-rename-vm">3. Rename VM</h2>
<ul>
<li>
<p>Rename and restart the machine before you start development or connect to Azure DevOps.</p>
</li>
<li>
<p>Update the server name in SQL Server</p>
<ul>
<li>The default credential for SQL server is <strong>axdbadmin</strong> and password <strong>AOSWebSite@12</strong></li>
</ul>
</li>
</ul>
<p>You can also see the password (<code>DataAccess.AxAdminSqlPwd</code>) in the <code>C:\AOSService\webroot\web.config</code></p>
<p>To decrypt run this command:
<code>C:\AOSService\webroot\bin\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -decrypt C:\AOSService\webroot\web.config</code></p>
<p>To encrypt run this command:
<code>C:\AOSService\webroot\bin\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -encrypt C:\AOSService\webroot\web.config</code></p>
<p>If you see the error</p>
<p><div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">No certificate found for id &lsquo;7366E25DC94FA8A400FA0037FFF3BB300D9482D4&rsquo;</div>
        </div>
    </div>
Please follow <a href="#7-for-vhd-that-was-released-for-versions-10024-and-later" rel="">this step</a> first.</p>
<ul>
<li>
<p>Run following query</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--MININT-57EHFHJ
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">sp_dropserver</span><span class="w"> </span><span class="p">[</span><span class="n">old_name</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">sp_addserver</span><span class="w"> </span><span class="p">[</span><span class="n">new_name</span><span class="p">],</span><span class="w"> </span><span class="k">local</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tip<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In these commands, be sure to replace old_name with the old name of the server and new_name with the new name. By default, the old name is MININT-F36S5EH, but you can run select @@servername to get the old name. Additionally, be sure to restart the SQL Server service after the commands have finished running.</div>
        </div>
    </div>
<ul>
<li>
<p>Restart SQL service</p>
</li>
<li>
<p>Open Reporting Services Configuration Manager for SQL Server 2016, then <strong>Select Database</strong>, select <strong>Change Database</strong>, and use the new server name.</p>
</li>
</ul>
<h3 id="update-financial-reporting">Update financial reporting</h3>
<p>Go to LCS portal and download a one version package, we will need the scripts from it. Open a Microsoft Windows PowerShell command window as an admin, and run the following command. This command contains the default passwords that might have to be updated. Be sure to replace <strong>new_name</strong> with the new name.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">cd </span><span class="p">&lt;</span><span class="n">update</span> <span class="n">folder</span><span class="p">&gt;\</span><span class="n">MROneBox</span><span class="p">\</span><span class="n">Scripts</span><span class="p">\</span><span class="n">Update</span>
</span></span><span class="line"><span class="cl"><span class="p">.\</span><span class="n">ConfigureMRDatabase</span><span class="p">.</span><span class="n">ps1</span> <span class="n">-NewAosDatabaseName</span> <span class="n">AxDB</span> <span class="n">-NewAosDatabaseServerName</span> <span class="n">new_name</span> <span class="n">-NewMRDatabaseName</span> <span class="n">ManagementReporter</span> <span class="n">-NewAxAdminUserPassword</span> <span class="n">AOSWebSite</span><span class="nv">@123</span> <span class="n">-NewMRAdminUserName</span> <span class="n">MRUser</span> <span class="n">-NewMRAdminUserPassword</span> <span class="n">MRWebSite</span><span class="nv">@123</span> <span class="n">-NewMRRuntimeUserName</span> <span class="n">MRUSer</span> <span class="n">-NewMRRuntimeUserPassword</span> <span class="n">MRWebSite</span><span class="nv">@123</span> <span class="n">-NewAxMRRuntimeUserName</span> <span class="n">MRUser</span> <span class="n">-NewAxMRRuntimeUserPassword</span> <span class="n">MRWebSite</span><span class="nv">@123</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="update-the-azure-storage-emulator">Update the Azure Storage Emulator</h3>
<ul>
<li>
<p>From the Start menu, open Microsoft Azure Storage Emulator - v4.0, and run the following commands.</p>
<p><code>AzureStorageEmulator.exe start</code></p>
<blockquote>
<p>If you got an error <strong><em>Port conflict with existing application</em></strong>, please check this <a href="../2020-04-05-azure-storage-emulator-port-conflict-with-existing-application/" rel="">post</a>.</p>
</blockquote>
</li>
<li>
<p>This command verifies that the emulator is running.</p>
<p><code>AzureStorageEmulator.exe status</code></p>
</li>
<li>
<p>Update the server name</p>
<p><code>AzureStorageEmulator.exe init -server new_name</code></p>
<p>For more information about Azure storage emulator please follow <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-use-emulator" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/azure/storage/common/storage-use-emulator</a></p>
</li>
</ul>
<h2 id="4-location-of-packages-source-code-and-other-aos-configurations">4. Location of packages, source code, and other AOS configurations</h2>
<p>On a VM, you can find most of the application configuration by opening the web.config file of AOSWebApplication.</p>
<ol>
<li>
<p>Start IIS.</p>
</li>
<li>
<p>Go to <em>Sites &gt; AOSWebApplication</em>.</p>
</li>
<li>
<p>Right-click, and then click <strong>Explore</strong> to open File Explorer.</p>
</li>
<li>
<p>Open the <strong>web.config</strong> file in Notepad or another text editor. The following keys are of interest to many developers and administrators:</p>
<ul>
<li>
<p><strong>Aos.MetadataDirectory</strong> – This key points to the location of the packages folder that contains platform and application binaries, and also source code. (Source code is available only in development environments.) Typical values are: <em>c:\packages, c:\AosServicePackagesLocalDirectory</em>, and <em>J:AosServicePackagesLocalDirectory</em>.</p>
</li>
<li>
<p><strong>DataAccess.Database</strong> – This key holds the name of the database.</p>
</li>
<li>
<p><strong>Aos.AppRoot</strong> – This key points to the root folder of the Application Object Server (AOS) web application.</p>
</li>
</ul>
</li>
</ol>
<h2 id="5-redeploying-or-restarting-the-runtime-on-the-vm">5. Redeploying or restarting the runtime on the VM</h2>
<p>To restart the local runtime and redeploy all the packages, follow these steps.</p>
<ol>
<li>
<p>Open File Explorer, and go to <em>C:\CustomerServiceUnit</em>.</p>
</li>
<li>
<p>Right-click <strong>AOSDeploy.cmd</strong>, and then click <strong>Run as administrator</strong>.</p>
</li>
</ol>
<p>This process might take a while. The process is completed when the cmd.exe window closes. If you just want to restart AOS (without redeploying the runtime), run iisreset from an administrator Command Prompt window, or restart AOSWebApplication from IIS.</p>
<h2 id="6-update-to-the-latest-version">6. Update to the latest version</h2>
<p>Please check this document
<a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/deployment/install-deployable-package" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/deployment/install-deployable-package</a></p>
<p>update for virtual hard drive (VHD) that was released for versions 10.0.24</p>
<h2 id="7-for-vhd-that-was-released-for-versions-10024-and-later">7. For (VHD) that was released for versions 10.0.24 and later</h2>
<h3 id="71-register-a-new-application-in-azure-active-directory">7.1 Register a new application in Azure Active Directory</h3>
<p>To register a new application in Microsoft Azure Active Directory (Azure AD), follow the steps outlined in <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app" target="_blank" rel="noopener noreffer ">Register app or web API</a>. The new app registration should be for a web application, and the following redirect URIs should be added:</p>
<ul>
<li><code>https://usnconeboxax1aos.cloud.onebox.dynamics.com/</code></li>
<li><code>https://usnconeboxax1aos.cloud.onebox.dynamics.com/oauth/</code></li>
</ul>
<p>Once created, make note of the <strong>Application (client) ID</strong>.</p>
<h3 id="72-run-the-setup-script">7.2 Run the setup script</h3>
<p>After you sign in with the <strong>Administrator</strong> account, right-click the desktop shortcut <strong>Generate Self-Signed Certificates</strong>, and select <strong>Run as administrator</strong>. When the script prompts for the application ID, provide the <strong>Application (client) ID</strong> created in Azure Active Directory.</p>
<p>When the script finishes, the environment is ready for use. At this time, you can run the Admin Provisioning tool to set the administrator account, permissions, and tenant. Make sure that the email provided is for the Azure Active Directory tenant in which the application registration was created.</p>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Reference<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/migration-upgrade/vso-machine-renaming" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/migration-upgrade/vso-machine-renaming</a></div>
        </div>
    </div>
]]></description>
</item>
<item>
    <title>Azure Storage Emulator &#39;Port conflict with existing application&#39;, Dynamics 365 finance and operations</title>
    <link>https://nuxulu.com/2020-04-05-azure-storage-emulator-port-conflict-with-existing-application/</link>
    <pubDate>Sun, 05 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-04-05-azure-storage-emulator-port-conflict-with-existing-application/</guid>
    <description><![CDATA[<p>The Microsoft Azure storage emulator is a tool that emulates the Azure Blob, Queue, and Table services for local development purposes. You can test your application against the storage services locally without creating an Azure subscription or incurring any costs. When you&rsquo;re satisfied with how your application is working in the emulator, switch to using an Azure storage account in the cloud.</p>
<p>In Dynamics 365 finance and operations onebox environment, we also use Microsoft Azure Storage Emulator for same purposes. There is a common problem when you try to start its service or using Data entity Import/Export</p>
<p></p>
<p>Port conflict with existing application
{:.error}</p>
<h2 id="reason">Reason</h2>
<p>By default, Azure storage emulator is using port number 10000, 10001, 10002 for Blob, Queue and Table services respectively. And there is a progress/system takes those ports already, so you are not able to start its service.
We can simply use this command in CMD to see which one has conflict</p>
<p><code>netstat -p tcp -ano | findstr :10001</code></p>
<p></p>
<p>The process ID 4 is currently taking port 10001.</p>
<h2 id="resolution">Resolution</h2>
<p>You can either terminate the conflict program or change the default port for Azure Storage Emulator.</p>
<h3 id="to-determine-the-conflict-program-we-can-use-this-command-in-cmd">To determine the conflict program we can use this command in CMD</h3>
<p>Run following command to check which application/process has the same port, then simply go to task manager and terminate it.</p>
<p><code>tasklist /fi &quot;pid eq 4&quot;</code></p>
<p></p>
<h3 id="to-change-the-default-port-for-azure-storage-emulator">To change the default port for Azure storage Emulator</h3>
<p>Go to your storage emulator default installation folder, which is located at <em><strong>C:\Program Files (x86)\Microsoft SDKs\Azure\Storage Emulator</strong></em>, open the <strong>AzureStorageEmulator.exe.config</strong> by notepad and edit the port number to different number</p>
<p></p>
<p>When done, try to start its service again using</p>
<p><code>AzureStorageEmulator.exe start</code></p>
<p></p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Create Purchase Orders - Confirm - Product receipt - Post using X&#43;&#43; in Dynamics 365 Finance &amp; Operations</title>
    <link>https://nuxulu.com/2020-01-25-create-po-confirm-receipt-post/</link>
    <pubDate>Sat, 25 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-01-25-create-po-confirm-receipt-post/</guid>
    <description><![CDATA[<blockquote>
<p>The script will work for Dynamics 365 Finance &amp; Operations version</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">MaxGeneratePO</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// number of purchase orders</span>
</span></span><span class="line"><span class="cl">        <span class="n">NumberSeq</span> <span class="n">numberSeq</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchTable</span> <span class="n">purchTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchLine</span> <span class="n">purchLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">InventDim</span> <span class="n">inventDim</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;=</span> <span class="m">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsBegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">MaxGeneratePO</span> <span class="n">createPO</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MaxGeneratePO</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">numberSeq</span> <span class="p">=</span> <span class="n">NumberSeq</span><span class="p">::</span><span class="n">newGetNum</span><span class="p">(</span><span class="n">PurchParameters</span><span class="p">::</span><span class="n">numRefPurchId</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            <span class="n">numberSeq</span><span class="p">.</span><span class="n">used</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span> <span class="p">=</span> <span class="n">numberSeq</span><span class="p">.</span><span class="n">num</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchTable</span><span class="p">.</span><span class="n">initValue</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchTable</span><span class="p">.</span><span class="n">initFromVendTable</span><span class="p">(</span><span class="n">VendTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="err">&#39;</span><span class="n">US</span><span class="p">-</span><span class="m">101</span><span class="err">&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(!</span><span class="n">purchTable</span><span class="p">.</span><span class="n">validateWrite</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">throw</span> <span class="n">Exception</span><span class="p">::</span><span class="n">Error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">purchTable</span><span class="p">.</span><span class="n">insert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">inventDim</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">initValue</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchId</span> <span class="p">=</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">ItemId</span> <span class="p">=</span> <span class="err">&#39;</span><span class="n">D0002</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">inventDim</span><span class="p">.</span><span class="n">InventSiteId</span> <span class="p">=</span> <span class="s">&#34;1&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">inventDim</span><span class="p">.</span><span class="n">InventLocationId</span> <span class="p">=</span> <span class="s">&#34;11&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">InventDimId</span><span class="p">=</span><span class="n">InventDim</span><span class="p">::</span><span class="n">findOrCreate</span><span class="p">(</span><span class="n">inventDim</span><span class="p">).</span><span class="n">inventDimId</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">createLine</span><span class="p">(</span><span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchQty</span> <span class="p">=</span> <span class="m">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchUnit</span> <span class="p">=</span> <span class="s">&#34;ea&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchPrice</span> <span class="p">=</span> <span class="n">createPO</span><span class="p">.</span><span class="n">randomAmount</span><span class="p">();</span> <span class="c1">// get random amount nubmer</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">LineAmount</span> <span class="p">=</span> <span class="n">purchLine</span><span class="p">.</span><span class="n">calcLineAmount</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">//PO confirm</span>
</span></span><span class="line"><span class="cl">            <span class="n">PurchFormLetter</span> <span class="n">purchFormLetter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">PurchFormLetter</span> <span class="n">purchFormLetterPack</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFormLetter</span> <span class="p">=</span> <span class="n">PurchFormLetter</span><span class="p">::</span><span class="n">construct</span><span class="p">(</span><span class="n">DocumentStatus</span><span class="p">::</span><span class="n">PurchaseOrder</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">purchTable</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;ConNum_%1&#34;</span><span class="p">,</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                                <span class="n">systemDateGet</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                                <span class="n">PurchUpdate</span><span class="p">::</span><span class="n">All</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">AccountOrder</span><span class="p">::</span><span class="n">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">NoYes</span><span class="p">::</span><span class="n">No</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">NoYes</span><span class="p">::</span><span class="n">no</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//Product receipt</span>
</span></span><span class="line"><span class="cl">            <span class="n">createPO</span><span class="p">.</span><span class="n">proceed</span><span class="p">(</span><span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">,</span> <span class="n">purchLine</span><span class="p">.</span><span class="n">ItemId</span><span class="p">,</span><span class="n">purchLine</span><span class="p">.</span><span class="n">InventDimId</span><span class="p">,</span><span class="n">purchLine</span><span class="p">.</span><span class="n">PurchQty</span><span class="p">,</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;RptNum_%1&#34;</span><span class="p">,</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//Post PO</span>
</span></span><span class="line"><span class="cl">            <span class="n">createPO</span><span class="p">.</span><span class="n">postPOInvoice</span><span class="p">(</span><span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">,</span> <span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;RptNum_%1&#34;</span><span class="p">,</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;Purchase order &#39;%1&#39; has been created&#34;</span><span class="p">,</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsCommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">i</span><span class="p">++;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">boolean</span> <span class="n">proceed</span><span class="p">(</span><span class="n">PurchId</span> <span class="n">_purchId</span><span class="p">,</span> <span class="n">ItemId</span> <span class="n">_itemId</span><span class="p">,</span><span class="n">inventDimId</span> <span class="n">_inventDimId</span><span class="p">,</span> <span class="n">PurchQty</span> <span class="n">_qty</span><span class="p">,</span> <span class="n">PackingSlipId</span> <span class="n">_productReceiptNumber</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">            <span class="k">this</span><span class="p">.</span><span class="n">generateProductReceipt</span><span class="p">(</span><span class="n">_purchId</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">addToPurchLineList</span><span class="p">(</span><span class="n">_purchId</span><span class="p">,</span> <span class="n">_itemId</span><span class="p">,</span> <span class="n">_inventDimId</span><span class="p">,</span> <span class="n">_qty</span><span class="p">),</span> <span class="n">_productReceiptNumber</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">boolean</span> <span class="n">generateProductReceipt</span><span class="p">(</span><span class="n">PurchId</span> <span class="n">_purchId</span><span class="p">,</span> <span class="n">List</span> <span class="n">_purchLineList</span><span class="p">,</span> <span class="n">PackingSlipId</span> <span class="n">_productReceiptNumber</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">boolean</span> <span class="n">ret</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchFormLetter</span> <span class="n">purchFromLetter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchTable</span> <span class="n">purchTable</span> <span class="p">=</span> <span class="n">PurchTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">_purchId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">try</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsbegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFromLetter</span> <span class="p">=</span> <span class="n">PurchFormLetter</span><span class="p">::</span><span class="n">construct</span><span class="p">(</span><span class="n">DocumentStatus</span><span class="p">::</span><span class="n">PackingSlip</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFromLetter</span><span class="p">.</span><span class="n">createFromLines</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFromLetter</span><span class="p">.</span><span class="n">parmLineList</span><span class="p">(</span><span class="n">_purchLineList</span><span class="p">.</span><span class="n">pack</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchFromLetter</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">purchTable</span><span class="p">,</span> <span class="n">_productReceiptNumber</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                <span class="n">DateTimeUtil</span><span class="p">::</span><span class="n">getToday</span><span class="p">(</span><span class="n">DateTimeUtil</span><span class="p">::</span><span class="n">getUserPreferredTimeZone</span><span class="p">()),</span>
</span></span><span class="line"><span class="cl">                                <span class="n">PurchUpdate</span><span class="p">::</span><span class="n">All</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttscommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">catch</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ret</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">List</span> <span class="n">addToPurchLineList</span><span class="p">(</span><span class="n">PurchId</span> <span class="n">_purchId</span><span class="p">,</span> <span class="n">ItemId</span> <span class="n">_itemId</span><span class="p">,</span><span class="n">inventDimId</span> <span class="n">_inventDimId</span><span class="p">,</span> <span class="n">PurchQty</span> <span class="n">_qty</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">List</span> <span class="n">purchLineList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Record</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchLine</span> <span class="n">purchLine</span> <span class="p">=</span> <span class="n">PurchLine</span><span class="p">::</span><span class="n">findItemIdInventDimId</span><span class="p">(</span><span class="n">_purchId</span><span class="p">,</span> <span class="n">_itemId</span><span class="p">,</span> <span class="n">_inventDimId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="n">purchLine</span> <span class="p">&amp;&amp;</span> <span class="n">_qty</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchReceivedNow</span> <span class="p">=</span> <span class="n">_qty</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchline</span><span class="p">.</span><span class="n">modifiedField</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchLine</span><span class="p">,</span> <span class="n">PurchReceivedNow</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="n">purchLineList</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">purchLine</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">purchLineList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">postPOInvoice</span><span class="p">(</span><span class="n">PurchId</span> <span class="n">purchId</span><span class="p">,</span> <span class="n">PackingSlipId</span> <span class="n">packingSlipId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">TmpFrmVirtual</span>               <span class="n">tmpFrmVirtualVend</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">PurchFormLetter_Invoice</span>     <span class="n">purchFormLetter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">VendPackingSlipJour</span>         <span class="n">vendPackingSlipJour</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">SysQueryRun</span>                 <span class="n">chooseLinesQuery</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">SysQueryRun</span>                 <span class="n">chooseLinesPendingInvoiceQuery</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">container</span>                   <span class="n">conTmpFrmVirtual</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">List</span>                        <span class="n">selectedList</span>    <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Record</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">select</span> <span class="n">firstonly</span> <span class="n">vendPackingSlipJour</span>
</span></span><span class="line"><span class="cl">                    <span class="k">where</span> <span class="n">vendPackingSlipJour</span><span class="p">.</span><span class="n">PurchId</span> <span class="p">==</span> <span class="n">purchId</span>
</span></span><span class="line"><span class="cl">            <span class="p">&amp;&amp;</span> <span class="n">vendPackingSlipJour</span><span class="p">.</span><span class="n">PackingSlipId</span> <span class="p">==</span> <span class="n">packingSlipId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">vendPackingSlipJour</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">TableNum</span>  <span class="p">=</span> <span class="n">vendPackingSlipJour</span><span class="p">.</span><span class="n">TableId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">RecordNo</span>  <span class="p">=</span> <span class="n">vendPackingSlipJour</span><span class="p">.</span><span class="n">RecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">NoYes</span>     <span class="p">=</span> <span class="n">NoYes</span><span class="p">::</span><span class="n">Yes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">Id</span>        <span class="p">=</span> <span class="n">vendPackingSlipJour</span><span class="p">.</span><span class="n">PurchId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">tmpFrmVirtualVend</span><span class="p">.</span><span class="n">insert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">chooseLinesQuery</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SysQueryRun</span><span class="p">(</span><span class="n">queryStr</span><span class="p">(</span><span class="n">PurchUpdate</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">chooseLinesQuery</span><span class="p">.</span><span class="n">query</span><span class="p">().</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">VendInvoiceInfoTable</span><span class="p">)).</span><span class="n">enabled</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// chooseLinesPendingInvoiceQuery needs to be initialized, although it will not be used</span>
</span></span><span class="line"><span class="cl">        <span class="n">chooseLinesPendingInvoiceQuery</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SysQueryRun</span><span class="p">(</span><span class="n">queryStr</span><span class="p">(</span><span class="n">PurchUpdatePendingInvoice</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">chooseLinesPendingInvoiceQuery</span><span class="p">.</span><span class="n">query</span><span class="p">().</span><span class="n">dataSourceTable</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">PurchTable</span><span class="p">)).</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchTable</span><span class="p">,</span><span class="n">PurchId</span><span class="p">)).</span><span class="k">value</span><span class="p">(</span><span class="n">queryValue</span><span class="p">(</span><span class="err">&#39;&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">           
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span> <span class="p">=</span> <span class="n">PurchFormLetter</span><span class="p">::</span><span class="n">construct</span><span class="p">(</span><span class="n">DocumentStatus</span><span class="p">::</span><span class="n">Invoice</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">chooseLinesQuery</span> <span class="p">(</span><span class="n">chooseLinesQuery</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">parmQueryChooseLinesPendingInvoice</span><span class="p">(</span><span class="n">chooseLinesPendingInvoiceQuery</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">purchTable</span> <span class="p">(</span><span class="n">PurchTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">PurchId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">transDate</span> <span class="p">(</span><span class="n">systemDateGet</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">parmParmTableNum</span> <span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;%1&#34;</span><span class="p">,</span><span class="n">packingSlipId</span><span class="p">));</span> <span class="c1">//This is invoice number</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">printFormLetter</span> <span class="p">(</span><span class="n">NoYes</span><span class="p">::</span><span class="n">No</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">sumBy</span> <span class="p">(</span><span class="n">AccountOrder</span><span class="p">::</span><span class="n">Auto</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">specQty</span> <span class="p">(</span><span class="n">PurchUpdate</span><span class="p">::</span><span class="n">PackingSlip</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="k">select</span> <span class="n">tmpFrmVirtualVend</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">selectedList</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">tmpFrmVirtualVend</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">conTmpFrmVirtual</span> <span class="p">=</span> <span class="n">selectedList</span><span class="p">.</span><span class="n">pack</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">selectFromJournal</span><span class="p">(</span><span class="n">conTmpFrmVirtual</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">reArrangeNow</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">purchFormLetter</span><span class="p">.</span><span class="n">run</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">int</span> <span class="n">randomAmount</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">RandomGenerate</span> <span class="n">randomGenerate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">randomGenerate</span> <span class="p">=</span> <span class="n">RandomGenerate</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">randomGenerate</span><span class="p">.</span><span class="n">parmSeed</span><span class="p">(</span><span class="k">new</span> <span class="n">Random</span><span class="p">().</span><span class="n">nextInt</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">RandomGenerate</span><span class="p">.</span><span class="n">randomInt</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="m">800</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>Microsoft Dynamics AX 2012 Update Process</title>
    <link>https://nuxulu.com/2020-01-01-microsoft-dynamics-ax-2012-update-process/</link>
    <pubDate>Wed, 01 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2020-01-01-microsoft-dynamics-ax-2012-update-process/</guid>
    <description><![CDATA[<h2 id="what-is-an-update">What is an Update?</h2>
<p>Updates include hotfixes, cumulative updates, and feature packs.</p>
<ul>
<li><strong>Hotfix</strong>: A fix or set of fixes that address a specific issue, problem, or customer scenario.</li>
<li><strong>Cumulative update</strong>: An update that contains all previous hotfixes to date.</li>
<li><strong>Feature pack</strong>: A group of updates that relate to a feature area or group of functionality. Contains design changes.</li>
</ul>
<h3 id="1-types-of-hotfixes">1. Types of Hotfixes</h3>
<p>To determine which type of update is in a package, download the package, and then extract contents and review
them to determine which type of update it is.</p>
<p><figure><a class="lightgallery" href="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Types-of-Hotfixes.png" title="Image" data-thumbnail="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Types-of-Hotfixes.png" data-sub-html="<h2>Types of Hotfixes</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Types of Hotfixes</figcaption>
    </figure></p>
<h3 id="2-how-can-i-tell-if-a-binary-update-requires-a-schema-update-and-model-store-reinitialization">2. How can I tell if a binary update requires a schema update, and model store reinitialization?</h3>
<p>The KB article will indicate  that a hotfix requires a schema update, and that you should reinitialize the model store.
You should assume that all cumulative updates require a schema update, and reinitialize the model store.</p>
<h3 id="3-how-can-i-tell-if-an-application-update-contains-a-report-or-web-part">3. How can I tell if an application update contains a report or web part?</h3>
<p>There is currently no simple way to tell if a hotfix contains a report or web part. We recommend that you assume that all cumulative updates, service packs, and feature packs contain reports and web parts, and re-deploy reports and Enterprise Portal.</p>
<p>If you encounter an error after installing a hotfix, try deploying reports and web parts.</p>
<h2 id="installation-order">Installation Order</h2>
<p>This diagram describes the order in which updates are applied in a test environment, and then applied in a production environment.</p>
<ol>
<li>Apply updates to the database.</li>
<li>Apply updates to a single local AOS instance.</li>
<li>Apply updates to a single local client. (Compile, Synchronize, and get the environment running)</li>
<li>Deploy reports to the report server.</li>
<li>Deploy web parts to the Enterprise Portal server.</li>
<li>Deploy updates to any retail components.</li>
</ol>
<p>The differences in a production environment are:</p>
<ol>
<li>Import the model store from the test environment to apply updates to the database.</li>
<li>Mass deploy client updates (optional).</li>
</ol>
<p><figure><a class="lightgallery" href="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Installation-Order.png" title="Image" data-thumbnail="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Installation-Order.png" data-sub-html="<h2>Installation-Order</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Installation-Order</figcaption>
    </figure></p>
<h2 id="detailed-update-process">Detailed Update Process</h2>
<p>This diagram describes the update process in detail, in both the test and production environments.</p>
<p><figure><a class="lightgallery" href="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Detailed-Update-Process.png" title="Image" data-thumbnail="/2020-01-01-microsoft-dynamics-ax-2012-update-process/Detailed-Update-Process.png" data-sub-html="<h2>Detailed Update Process</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Detailed Update Process</figcaption>
    </figure></p>
<h2 id="update-tips-and-tricks">Update Tips and Tricks</h2>
<ul>
<li>
<p><strong>Always update in a test environment first and run the Impact Wizard for application updates</strong>
You can reduce the downtime of your production environment by fixing all code conflicts in a test environment, and identifying them early.</p>
</li>
<li>
<p><strong>Make sure that you have the correct product version</strong>
Most updates apply only to released versions of a product.
<em>Note: Many demonstration virtual machines run pre-release versions of Microsoft Dynamics AX, and cannot run updates.</em></p>
</li>
<li>
<p><strong>Install binary updates first, and if needed, reinitialize the model store before installing application updates</strong>
If you do not reinitialize the model store, you will encounter many more errors in the Data Upgrade Cockpit.</p>
</li>
<li>
<p><strong>Do not skip the Software Update Checklist</strong>
After you install an update, on the Model store has been modified form, select Start the software update checklist.</p>
</li>
<li>
<p><strong>If you must generate CIL, restart all AOS instances</strong></p>
</li>
<li>
<p><strong>Install updates on all appropriate components (reports andweb parts)</strong>
It is difficult to tell whether an update contains modified or new reports, or web parts—we recommend that redeploy reports and web parts with all CUs.</p>
</li>
<li>
<p><strong>Check to see whether all of your current hotfixes are contained in the most recent cumulative update or feature pack—if not, reinstall it</strong>
If you have a recent hotfix that is not included in the cumulative update or feature pack that you are installing, it will be removed. Reinstall the hotfix after you have applied update.</p>
</li>
<li>
<p><strong>Consider slipstreaming updates if you are doing a fresh install</strong></p>
</li>
<li>
<p><strong>If you are installing industry solutions, install them before installing updates</strong></p>
</li>
<li>
<p><strong>To minimize downtime, consider importing the model store into a non-default schema in the production environment, and then switching it to be the default schema</strong>
For information about using non-default schemas, read How to: Create, Drop, or Reinitialize a Model Store.</p>
</li>
</ul>
]]></description>
</item>
<item>
    <title>Dynamics 365 finance and operations ODATA consuming - Length cannot be less than zero</title>
    <link>https://nuxulu.com/2019-12-17-dynamics-365-finance-and-operations-odata-consuming-length-cannot-be-less-than-zero/</link>
    <pubDate>Tue, 17 Dec 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-12-17-dynamics-365-finance-and-operations-odata-consuming-length-cannot-be-less-than-zero/</guid>
    <description><![CDATA[<p>When you consume a custom data entity, you get an error</p>
<div class="details admonition failure open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-times-circle fa-fw" aria-hidden="true"></i>Failure<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">errorSystem.ArgumentOutOfRangeException : Length cannot be less than zero” and it works fine for standard data entities.</div>
        </div>
    </div>
<p></p>
<p>The reason is the temporary XML file where the metadata stored which mismatches with the metadata from <code>https://&lt;yourenvironment&gt;.cloudax.dynamics.com/data/$metadata</code></p>
<p>You can follow this <a href="https://nuxulu.com/2019/12/16/Consuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET.html" target="_blank" rel="noopener noreffer ">post</a> to understand how to create the XML file.</p>
<p>If you try to regenerate the metadata by saving the <strong>ODataClient.tt</strong> file, the XML will be accumulated, and the error keeps happening.
The resolution here is simply delete it and regenerate metadata again by saving the <strong>ODataClient.tt</strong> file</p>
<p></p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Enable Power BI Embedded in cloud hosted Dynamics 365 finance and operations 8.0 &#43;</title>
    <link>https://nuxulu.com/2019-12-18-enable-power-bi-embedded-in-cloud-hosted-dynamics-365-finance-and-operations-8.0-/</link>
    <pubDate>Tue, 17 Dec 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-12-18-enable-power-bi-embedded-in-cloud-hosted-dynamics-365-finance-and-operations-8.0-/</guid>
    <description><![CDATA[<p>In this article, we will go through how to enable Power BI embedded in Dynamics 365 finance and operations version 10 in a cloud-hosted environment (customer managed). From the previous version of FinOps, Power BI embedded uses workspace collections at Azure to display the report, since the workspace collections have been deprecated, Microsoft also disables power BI embedded in cloud-hosted environments. You can only enable Power BI embedded in multiple boxes environments like UAT and production.</p>
<h2 id="1-create-workspace-collections">1. Create workspace collections</h2>
<p>Although the workspace collections have been deprecated, it does not show in the Azure portal and you could not create it by using the Azure portal, but you can create and manage by using Azure CLI.</p>
<p>Open PowerShell and run following</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">//</span> <span class="n">Allow</span> <span class="n">policy</span>
</span></span><span class="line"><span class="cl"><span class="nb">set-executionpolicy</span> <span class="n">remotesigned</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">//</span><span class="n">Install</span> <span class="n">AzureRM</span>
</span></span><span class="line"><span class="cl"><span class="nb">Install-Module</span> <span class="n">-Name</span> <span class="n">AzureRM</span> <span class="n">-AllowClobber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">//</span> <span class="n">Login</span> <span class="n">to</span> <span class="n">Azure</span> <span class="n">using</span> <span class="n">credentials</span>
</span></span><span class="line"><span class="cl"><span class="nb">Login-AzureRmAccount</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">//</span> <span class="nb">select </span><span class="n">the</span> <span class="n">subscription</span> <span class="n">ID</span>
</span></span><span class="line"><span class="cl"><span class="nb">Select-AzureRmSubscription</span> <span class="n">-SubscriptionId</span> <span class="nv">$subscriptionId</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$ResourceGroupName</span> <span class="p">=</span> <span class="err">“</span><span class="n">MaxWorkspaceCollections</span><span class="err">”</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Location</span> <span class="p">=</span> <span class="s2">&#34;Southeast Asia&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">//</span> <span class="n">Create</span> <span class="n">workspace</span> <span class="n">collections</span>
</span></span><span class="line"><span class="cl"><span class="nb">New-AzPowerBIWorkspaceCollection</span> <span class="n">-ResourceGroupName</span> <span class="nv">$ResourceGroupName</span> <span class="n">-WorkspaceCollectionName</span> <span class="nv">$WorkSpaceCollectionName</span> <span class="n">-Location</span> <span class="nv">$Location</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">//</span> <span class="n">Obtain</span> <span class="n">the</span> <span class="n">access</span> <span class="n">keys</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-AzPowerBIWorkspaceCollection</span> <span class="n">-ResourceGroupName</span> <span class="nv">$ResourceGroupName</span> <span class="n">-name</span> <span class="s2">&#34;&lt;yourWorkspacename&gt;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="2-create-axwd-azure-sql-database">2. Create AxWD Azure SQL Database</h2>
<p>We must use the Azure SQL Database for the AxDW in Dynamics 365 finance and operations cloud-hosted environment.
Please follow <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-single-database-get-started?tabs=azure-portal" target="_blank" rel="noopener noreffer ">this document to create Azure SQL DB</a>.</p>
<p>We need at least <strong>5 GB storage for Database</strong>, for Pricing tier, I will recommend using from S1, and name the database AxDB</p>
<p>This is my DB property</p>
<p></p>
<p>I’m using Premium tier because I want to use <strong>the Columnstore Clustered indexes</strong> in Database; it helps performance a little bit faster.
Once you have the Azure SQL Database, we can use SSMS to connect to the database and create a user for that DB. You need to get <strong>the user and password information in LCS</strong>, where the cloud-hosted provisioned.</p>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="n">Use</span><span class="w"> </span><span class="n">Master</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">LOGIN</span><span class="w"> </span><span class="n">axdwadmin</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="n">PASSWORD</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="p">;</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="n">LOGIN</span><span class="w"> </span><span class="n">axdwruntimeuser</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="n">PASSWORD</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Use</span><span class="w"> </span><span class="n">AxDw</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">USER</span><span class="w"> </span><span class="n">axdwadmin</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">LOGIN</span><span class="w"> </span><span class="n">axdwadmin</span><span class="p">;</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">USER</span><span class="w"> </span><span class="n">axdwruntimeuser</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">LOGIN</span><span class="w"> </span><span class="n">axdwruntimeuser</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">ROLE</span><span class="w"> </span><span class="n">db_owner</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="n">MEMBER</span><span class="w"> </span><span class="n">axdwadmin</span><span class="p">;</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">ROLE</span><span class="w"> </span><span class="n">db_datareader</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="n">MEMBER</span><span class="w"> </span><span class="n">axdwruntimeuser</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="3-configuring-to-enable-analytical-workspaces-and-reports">3. Configuring to enable Analytical Workspaces and Reports</h2>
<p>What you are having now</p>
<p>Power BI Embedded Service details from step 1</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Workspace Collection Name: The name of the Workspace Collection created when deploying the Power BI Embedded Service
</span></span><span class="line"><span class="cl">Access Key1:  The secret key #1 used to access the Power BI Embedded service
</span></span><span class="line"><span class="cl">Access Key2:  The secret key #2 used to access the Power BI Embedded service
</span></span></code></pre></td></tr></table>
</div>
</div><p>Entity Store Database Service details from step 2</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Database name:  AxDW
</span></span><span class="line"><span class="cl">Server name:  Azure SQL Server name (*.database.windows.net)
</span></span><span class="line"><span class="cl">Server admin login:  Username supplied in the SQL Server settings
</span></span><span class="line"><span class="cl">Password:  Account password supplied when configuring SQL Server
</span></span></code></pre></td></tr></table>
</div>
</div><p>Run Notepad in <strong>administrator</strong> mode, open web.config from <em>K:\AOSService\webroot</em> in Dynamics 365 for finance and operations environment.</p>
<p>Update the configuration settings:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;BiReporting.DW&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Database name]&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;BiReporting.DWServer&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Server name]&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;BiReporting.DWRuntimeUser&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Server Admin login]&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;BiReporting.DWRuntimePwd&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Password]&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Update the Power BI Embedded Service configuration settings:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;PowerBIEmbedded.AccessKey&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Access Key1]&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;PowerBIEmbedded.AccessKey2&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Access Key2]&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;PowerBIEmbedded.ApiUrl&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;https://api.powerbi.com&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;PowerBIEmbedded.IsPowerBIEmbeddedEnabled&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;true&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">&#34;PowerBIEmbedded.WorkspaceCollectionName&#34;</span> <span class="k">value</span><span class="p">=</span><span class="s">&#34;[Workspace Collection Name]&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>After that, you need to restart IIS and Dynamics 365 for finance and operations batch service</p>
<h2 id="4-refresh-data-entity-store-to-axdw">4. Refresh data entity store to AxDW</h2>
<p>In Dynamics 365 for finance and operations, navigate to <em>System administration &gt; Setup &gt; Entity Store</em>, select all the <strong>entity store</strong>, and click refresh.</p>
<p>Allow this process to complete in the background (~5 - 10mins).  You can monitor the status of the background process using the Batch jobs.</p>
<p>Once the Progress is made, you can check the event message in the same form to make sure the refreshing working properly</p>
<p></p>
<h2 id="5-powerbi-configuration-this-is-optional">5. PowerBI configuration (this is optional)</h2>
<p>Configuring power BI for the workspace; please follow the document <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/configure-power-bi-integration" target="_blank" rel="noopener noreffer ">here</a></p>
<p>This is what you should have after the setup</p>
<p></p>
<h2 id="check-the-result">Check the result</h2>
<p>If you want to check the result, go to <em>Workspaces &gt; Customer credit and collections &gt; Analytics all companies</em></p>
<p></p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Consuming Dynamics 365 Finance and Operations OData services from .NET</title>
    <link>https://nuxulu.com/2019-12-16-consuming-dynamics-365-finance-and-operations-odata-services-from-net/</link>
    <pubDate>Mon, 16 Dec 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-12-16-consuming-dynamics-365-finance-and-operations-odata-services-from-net/</guid>
    <description><![CDATA[<h1 id="1-authentication">1. Authentication</h1>
<p>We need an authentication to connect Dynamics 365 finance and operations from .Net application by using service principal.</p>
<p>How to create an app registration in Azure <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/app-registrations-training-guide-for-app-registrations-legacy-users" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/azure/active-directory/develop/app-registrations-training-guide-for-app-registrations-legacy-users</a></p>
<p>You also need to add required permissions for Dynamics 365 finance and operations, please follow<br>
<a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/services-home-page#register-a-web-application-with-aad" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/services-home-page#register-a-web-application-with-aad</a></p>
<p>This is what you should have</p>
<p></p>
<h1 id="2-register-your-external-application">2. Register your external application</h1>
<h3 id="a-in-the-finops-application-go-to-system-administration--setup--azure-active-directory-applications">a. In the FinOps application, go to <strong>System administration &gt; Setup &gt; Azure Active Directory applications</strong>.</h3>
<h3 id="bselect-new">b.	Select <strong>New</strong>.</h3>
<h3 id="cfill-in-the-fields-for-the-new-record">c.	Fill in the fields for the new record:</h3>
<ul>
<li>In the <strong>Client Id</strong> field, enter the application ID that you registered in Azure AD.</li>
<li>In the <strong>Name field</strong>, enter a name for the application.</li>
<li>In the <strong>User ID field</strong>, select an appropriate service account user ID. For this example, we have selected the Admin user. However, as a better practice, you should provision a dedicated service account that has the correct permissions for the operations that must be performed. When you&rsquo;ve finished, select <strong>Save</strong>.</li>
</ul>
<p>You&rsquo;ve now finished setting up the prerequisites. After the external application retrieves an Azure AD authentication token, it should now be able to use the token in an authorization HTTP header to make subsequent service calls via OData or SOAP, for example.</p>
<h1 id="3-odata-client-configuration">3. OData client configuration</h1>
<ul>
<li>Download the project here <a href="https://github.com/microsoft/Dynamics-AX-Integration" target="_blank" rel="noopener noreffer ">https://github.com/microsoft/Dynamics-AX-Integration</a></li>
<li>Open <strong>ServiceSamples</strong> solution.</li>
<li>We cannot use existing proxies and classes, so I need to regenerate them again. Under ODataUtility project, delete <strong>ODataClient.tt</strong> and <strong>ODataClient.ttinclude</strong>.</li>
<li>To regenerate Odata client, right click on <em>ODataUtility project &gt; Add &gt; New item</em>, search for OData in Online and rename it to <strong>ODataClient.tt</strong>.</li>
<li>Open <strong>ODataClient.tt</strong>, in MetadataDocumentUri add <em>&ldquo;https://<yourEnvironment>.cloudax.dynamics.com/data/$metadata&rdquo;</em></li>
</ul>
<p>If you save the ODataClient.tt file, it will generate Odata proxies and classes. From PU12 onward, there are so many entities so you will get an error after compiling</p>
<p><code>Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.</code></p>
<p>There are 2 ways to fix it</p>
<h3 id="a-using-temporary-file">a. Using temporary file</h3>
<p>The simplest way to fix is add TempFilePath, ensure that you have write permission for this path, this is what you got</p>
<p></p>
<p>Save the <strong>ODataClient.tt</strong> and there will be <strong>Test1.xml</strong> file created to store metadata, there should be a bug while generating the xml file, one more step you need to do is replace the double quote to single quote (a global replace of &quot;&quot; with &quot; ), and this is what you have</p>
<p>
You can build the project without problem.</p>
<h3 id="b-remove-unused-entities">b. Remove unused entities</h3>
<p>Another work-around that works too, edit the ODataClient.ttinclude so that it parses only some of the entities that you want to use, this reducing the error. For instance, change the following foreach statement</p>
<ul>
<li>Original code:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="n">IEdmEntitySet</span> <span class="n">entitySet</span> <span class="k">in</span> <span class="n">container</span><span class="p">.</span><span class="n">EntitySets</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">IEdmEntityType</span> <span class="n">entitySetElementType</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">EntityType</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="n">entitySetElementTypeName</span> <span class="p">=</span> <span class="n">GetElementTypeName</span><span class="p">(</span><span class="n">entitySetElementType</span><span class="p">,</span> <span class="n">container</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">EnableNamingAlias</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">Customization</span><span class="p">.</span><span class="n">CustomizeNaming</span><span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Modified code:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="n">IEdmEntitySet</span> <span class="n">entitySet</span> <span class="k">in</span> <span class="n">container</span><span class="p">.</span><span class="n">EntitySets</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">IEdmEntityType</span> <span class="n">entitySetElementType</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">EntityType</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="n">entitySetElementTypeName</span> <span class="p">=</span> <span class="n">GetElementTypeName</span><span class="p">(</span><span class="n">entitySetElementType</span><span class="p">,</span> <span class="n">container</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//start of manual fix </span>
</span></span><span class="line"><span class="cl">    <span class="c1">//only process entity names that containin a specific string, to reduce the string size</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(((</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;CUST&#34;</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;VEND&#34;</span><span class="p">)))</span> <span class="p">||</span> <span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;SALES&#34;</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// emd of manual fix</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">EnableNamingAlias</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">Customization</span><span class="p">.</span><span class="n">CustomizeNaming</span><span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="4-authentication-configuration">4. Authentication configuration</h1>
<p>Under AuthenticationUtility project, you need to modify ClientConfiguration.cs follow, you can get all related information for the first step.</p>
<p></p>
<p>From now, you can freely test the integrations under <strong>ODataConsoleApplication</strong> project.
If you are testing with a custom data entity and you get this error</p>
<p><code>System.ArgumentOutOfRangeException : Length cannot be less than zero.</code></p>
<p>Please check this <a href="https://nuxulu.com/2019/12/17/Dynamics-365-finance-and-operations-ODATA-consuming-Length-cannot-be-less-than-zero.html" target="_blank" rel="noopener noreffer ">post</a>.</p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Business events and HTTPs endpoint</title>
    <link>https://nuxulu.com/2019-11-05-business-events-and-https-endpoint/</link>
    <pubDate>Tue, 05 Nov 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-11-05-business-events-and-https-endpoint/</guid>
    <description><![CDATA[<p>In Dynamics 365 finance and operations, Business events provide a mechanism that lets external systems receive notifications from FinOps applications. In this way, the systems can perform business actions in response to business events.</p>
<p>There are 3 types of business events: <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/business-events/app-business-events" target="_blank" rel="noopener noreffer ">Application business events</a>, <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/business-events/business-events-workflow" target="_blank" rel="noopener noreffer ">Workflow business events</a>, and <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/business-events/alerts-business-events" target="_blank" rel="noopener noreffer ">Alerts as business events</a>. You can also implement <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/business-events/business-events-dev-doc" target="_blank" rel="noopener noreffer ">a new business event</a>.</p>
<p>Business events can be consumed using Microsoft Flow and Azure messaging services, and we use endpoint to manage the destinations for sending business events to, Microsoft supports many endpoints: Azure Service Bus Queue, Azure Service Bus Topic, Azure Event Grid, Azure Event Hub, HTTPS, Microsoft Flow.
In this article I will show how to send business event to HTTPs endpoint that leveraging on Azure functions.</p>
<p>The scenario: Once a free text invoice is posted, Business event will be triggered and send messages to the HTTPs endpoint.</p>
<h2 id="1-https-and-azure-function">1. HTTPs and Azure function</h2>
<p>Ideally, I will create a new Azure function which has HTTPs endpoint to subscribe the business events in FinOps.
To create Azure function please follow this <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-azure-function" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-azure-function</a></p>
<p>Here is the simple line of code</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">Microsoft.AspNetCore.Mvc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">Microsoft.Extensions.Primitives</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">Newtonsoft.Json</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="n">Run</span><span class="p">(</span><span class="n">HttpRequest</span> <span class="n">req</span><span class="p">,</span> <span class="n">ILogger</span> <span class="n">log</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">log</span><span class="p">.</span><span class="n">LogInformation</span><span class="p">(</span><span class="s">&#34;Dynamics 365 finance and operations notifications&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="kt">string</span> <span class="n">requestBody</span> <span class="p">=</span> <span class="k">await</span> <span class="k">new</span> <span class="n">StreamReader</span><span class="p">(</span><span class="n">req</span><span class="p">.</span><span class="n">Body</span><span class="p">).</span><span class="n">ReadToEndAsync</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="n">log</span><span class="p">.</span><span class="n">LogInformation</span><span class="p">(</span><span class="n">requestBody</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">(</span><span class="n">ActionResult</span><span class="p">)</span><span class="k">new</span> <span class="n">OkObjectResult</span><span class="p">(</span><span class="s">$&#34;Hello world&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This basically listens the JSON messages from Business events and display the Json message at Console.</p>
<p>From the Azure function you can get the HTTPs endpoint, save it for later reference.</p>
<p></p>
<h2 id="2-application-registration-int-aad">2. Application registration int AAD</h2>
<p>We need an application to authenticate with FinOps and Azure function HTTPs.
Go to <em>Azure portal &gt; AAD &gt; App registrations &gt; New registration</em></p>
<p></p>
<ul>
<li>Name of the application.</li>
<li>Depend on you have multitenant or not</li>
<li>Dynamics 365 finance and operations URL</li>
</ul>
<h3 id="api-permissions">API Permissions</h3>
<p>Go to the newly created application &gt; API permissions and adding permission as below</p>
<p></p>
<h3 id="secrets">Secrets</h3>
<p>Go to Certificates &amp; secrets menu item and create a new client secret</p>
<p></p>
<p>After this you will have <strong>Application Id and Application Secret</strong>, save it for later.</p>
<h2 id="3-key-vaults">3. Key Vaults</h2>
<p>In Azure portal create a new keyVault to store the HTTPs endpoint URL information</p>
<p></p>
<h3 id="access-policy">Access policy</h3>
<p>Click next to create access policy (you also can set up this later after creating Key Vault)</p>
<p></p>
<p>Select all the permissions in Key, Secret and Certificate, In select principal choose the application you have created before.</p>
<p></p>
<h3 id="key-vault-secret">Key Vault secret</h3>
<p>Go to the newly <em>created Key vault &gt; secrets &gt; generate a new one</em></p>
<p></p>
<p>Value is the endpoint URL for D365 to call the one we got from the first step.
After this step you will have the Key vault DNS name <em><a href="https://maxfokeyvault.vault.azure.net/" target="_blank" rel="noopener noreffer ">https://maxfokeyvault.vault.azure.net/</a></em> and Key Vault secret name <em>D365VaultSecretName</em>
That information will be needed for Business events configuration in Dynamics 365 finance and operations</p>
<h2 id="4-creating-https-endpoint">4. Creating HTTPs endpoint</h2>
<p>Go to <em>System administrator &gt; Business events &gt; Business events catalog</em>, Click on <strong>Endpoints</strong> in <strong>Endpoint type</strong> choose <em>HTTPS</em> and <strong>click Next</strong>. Fill all the required information that you got from above steps.</p>
<p>Click on <strong>Business events catalog</strong>, look for business event Id <em>CustFreeTextInvoicePostedBusinessEvent</em>, check the record and click <strong>Active</strong>; from there choose legal entity and the Endpoint that we have just created.</p>
<p></p>
<p>After that, if you check on <strong>Active events tab</strong>, there will be a new record created.
That&rsquo;s it, now I will create a free text invoice and post it, this is what I got from the console log in Azure.</p>
<p></p>
<p>With the JSON messages, you can deserialize it and save to Cosmos DB or do whatever in Azure function.</p>
<h2 id="5-about-platform-changes">5. About platform changes</h2>
<p>Before PU26, Business event run in batch, following menu <em>System admin &gt; Business events &gt; Start business events batch job</em></p>
<p>

</p>
<p>In <strong>BusinessEventsParameters</strong>, the value will be <code>Enabled = 0 , BatchEnabled = 1</code>.</p>
<p>After PU26, the sending business events will be triggered directly from FinOps, you won&rsquo;t find the menu System admin &gt; Business events &gt; Start business events batch job</p>
<p>In <strong>BusinessEventsParameters</strong>, the value will be <code>Enabled = 1 , BatchEnabled = 0</code>.
If you have just upgraded from PU26 to higher version, the Business events are not getting triggered because the value might not be changed in <strong>BusinessEventsParameters</strong> and there is no batch. You should check this table according to the situation.</p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Insert multiple records in single request using Odata from Postman</title>
    <link>https://nuxulu.com/2019-10-15-insert-multiple-records-in-single-request-using-odata-from-postman/</link>
    <pubDate>Tue, 15 Oct 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-10-15-insert-multiple-records-in-single-request-using-odata-from-postman/</guid>
    <description><![CDATA[<p>Got inspired by <a href="https://community.dynamics.com/365/financeandoperations/f/dynamics-365-for-finance-and-operations-forum/286810/inserting-multiple-records-via-odata-from-postman" target="_blank" rel="noopener noreffer ">this topic</a>, I&rsquo;d like to write this article to show you how to post multiple records in single request by using Postman.</p>
<p>Generally, batch requests are supported in the <a href="https://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398359" target="_blank" rel="noopener noreffer ">OData service</a>, The easiest way is you can use the C# code approach from <a href="https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/ODataConsoleApplication" target="_blank" rel="noopener noreffer ">github</a> and the excel add-ins in Dynamics 365 for finance and operations use Odata batch to communicate in a single request but how can we leverage it in Postman.</p>
<p>Using Excel add-in then add 2 customer groups records and submit to Dynamics 365 for finance and operations, while you are doing that using <a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener noreffer ">fiddler</a> on the same box to see how the odata batch framework works.
This can be done from POSTMAN too and you need to use header and body as you see in Fiddler.</p>
<p>For basic setting up Dynamics 365 for finance and operations and Postman please follow <a href="https://docs.microsoft.com/en-us/dynamics365/unified-operations/dev-itpro/data-entities/third-party-service-test" target="_blank" rel="noopener noreffer ">this offical document</a></p>
<h3 id="1-get-dynamics-365-for-finance-and-operations-authorization">1. Get Dynamics 365 for finance and operations authorization</h3>
<p>This is a result</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_1.png"></a>
</figure>
<h3 id="2-create-a-new-post-request-in-postman-with-header">2. Create a new POST request in Postman with header</h3>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_2.png"></a>
</figure>
<p><em><strong>URL: {{resource}}/data/$batch</strong></em>
<em><strong>Content-Type: multipart/mixed;boundary=batch_d63a-e9be-2927</strong></em></p>
<h3 id="3-modify-the-body-in-postman">3. Modify the Body in Postman</h3>
<p>I will place 2 records for customer groups</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_3.png"></a>
</figure>
<p>Full text here</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">--batch_d63a-e9be-2927
</span></span><span class="line"><span class="cl">Content-Type: multipart/mixed; boundary=changeset_2499-90ab-7b93
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--changeset_2499-90ab-7b93
</span></span><span class="line"><span class="cl">Content-Type: application/http
</span></span><span class="line"><span class="cl">Content-Transfer-Encoding: binary
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">POST CustomerGroups?cross-company=true HTTP/1.1
</span></span><span class="line"><span class="cl">Content-ID: 1
</span></span><span class="line"><span class="cl">Accept: application/json;q=0.9, */*;q=0.1
</span></span><span class="line"><span class="cl">OData-Version: 4.0
</span></span><span class="line"><span class="cl">Content-Type: application/json
</span></span><span class="line"><span class="cl">OData-MaxVersion: 4.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">{<span class="s2">&#34;CustomerGroupId&#34;</span>:<span class="s2">&#34;1060&#34;</span>,<span class="s2">&#34;Description&#34;</span>:<span class="s2">&#34;Wholesales customers&#34;</span>,<span class="s2">&#34;PaymentTermId&#34;</span>:<span class="s2">&#34;Net30&#34;</span>,<span class="s2">&#34;IsSalesTaxIncludedInPrice&#34;</span>:<span class="s2">&#34;No&#34;</span>,<span class="s2">&#34;dataAreaId&#34;</span>:<span class="s2">&#34;usmf&#34;</span>}
</span></span><span class="line"><span class="cl">--changeset_2499-90ab-7b93--
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--batch_d63a-e9be-2927
</span></span><span class="line"><span class="cl">Content-Type: multipart/mixed; boundary=changeset_b573-33b2-85ff
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--changeset_b573-33b2-85ff
</span></span><span class="line"><span class="cl">Content-Type: application/http
</span></span><span class="line"><span class="cl">Content-Transfer-Encoding: binary
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">POST CustomerGroups?cross-company=true HTTP/1.1
</span></span><span class="line"><span class="cl">Content-ID: 2
</span></span><span class="line"><span class="cl">Accept: application/json;q=0.9, */*;q=0.1
</span></span><span class="line"><span class="cl">OData-Version: 4.0
</span></span><span class="line"><span class="cl">Content-Type: application/json
</span></span><span class="line"><span class="cl">OData-MaxVersion: 4.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">{<span class="s2">&#34;CustomerGroupId&#34;</span>:<span class="s2">&#34;1070&#34;</span>,<span class="s2">&#34;Description&#34;</span>:<span class="s2">&#34;Wholesales customers1&#34;</span>,<span class="s2">&#34;PaymentTermId&#34;</span>:<span class="s2">&#34;Net30&#34;</span>,<span class="s2">&#34;IsSalesTaxIncludedInPrice&#34;</span>:<span class="s2">&#34;No&#34;</span>,<span class="s2">&#34;dataAreaId&#34;</span>:<span class="s2">&#34;usmf&#34;</span>}
</span></span><span class="line"><span class="cl">--changeset_b573-33b2-85ff--
</span></span></code></pre></td></tr></table>
</div>
</div><p>Click send and this is what you got from response</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_4.png"></a>
</figure>
<p>Full Response</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">--batchresponse_</span><span class="mf">45e87829</span><span class="mi">-5</span><span class="err">a</span><span class="mi">26</span><span class="mf">-480e-8</span><span class="err">aaa</span><span class="mi">-8</span><span class="err">a</span><span class="mi">08</span><span class="err">c</span><span class="mi">7</span><span class="err">a</span><span class="mi">82</span><span class="err">c</span><span class="mi">60</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Type:</span> <span class="err">multipart/mixed;</span> <span class="err">boundary=changesetresponse_</span><span class="mi">27</span><span class="err">ed</span><span class="mi">7621</span><span class="err">-d</span><span class="mi">939-40</span><span class="err">b</span><span class="mi">7-9</span><span class="err">f</span><span class="mi">8</span><span class="err">b-be</span><span class="mi">0421</span><span class="err">ff</span><span class="mi">0</span><span class="err">cea</span>
</span></span><span class="line"><span class="cl"><span class="err">--changesetresponse_</span><span class="mi">27</span><span class="err">ed</span><span class="mi">7621</span><span class="err">-d</span><span class="mi">939-40</span><span class="err">b</span><span class="mi">7-9</span><span class="err">f</span><span class="mi">8</span><span class="err">b-be</span><span class="mi">0421</span><span class="err">ff</span><span class="mi">0</span><span class="err">cea</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Type:</span> <span class="err">application/http</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Transfer-Encoding:</span> <span class="err">binary</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-ID:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="err">HTTP/</span><span class="mf">1.1</span> <span class="mi">201</span> <span class="err">Created</span>
</span></span><span class="line"><span class="cl"><span class="err">ETag:</span> <span class="err">W/</span><span class="s2">&#34;JzEsNjg3MTk0Nzk4MzUn&#34;</span>
</span></span><span class="line"><span class="cl"><span class="err">Location:</span> <span class="err">https:</span> <span class="c1">//fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=&#39;usmf&#39;,CustomerGroupId=&#39;1060&#39;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">Content-Type:</span> <span class="err">application/json;</span> <span class="err">odata.metadata=minimal</span>
</span></span><span class="line"><span class="cl"><span class="err">OData-Version:</span> <span class="mf">4.0</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;@odata.context&#34;</span><span class="p">:</span> <span class="s2">&#34;https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;@odata.etag&#34;</span><span class="p">:</span> <span class="s2">&#34;W/\&#34;JzEsNjg3MTk0Nzk4MzUn\&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;dataAreaId&#34;</span><span class="p">:</span> <span class="s2">&#34;usmf&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;CustomerGroupId&#34;</span><span class="p">:</span> <span class="s2">&#34;1060&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;ClearingPeriodPaymentTermName&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;DefaultDimensionDisplayValue&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;CustomerAccountNumberSequence&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;IsSalesTaxIncludedInPrice&#34;</span><span class="p">:</span> <span class="s2">&#34;No&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;Description&#34;</span><span class="p">:</span> <span class="s2">&#34;Wholesales customers&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;WriteOffReason&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;PaymentTermId&#34;</span><span class="p">:</span> <span class="s2">&#34;Net30&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;TaxGroupId&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">--changesetresponse_</span><span class="mi">27</span><span class="err">ed</span><span class="mi">7621</span><span class="err">-d</span><span class="mi">939-40</span><span class="err">b</span><span class="mi">7-9</span><span class="err">f</span><span class="mi">8</span><span class="err">b-be</span><span class="mi">0421</span><span class="err">ff</span><span class="mi">0</span><span class="err">cea--</span>
</span></span><span class="line"><span class="cl"><span class="err">--batchresponse_</span><span class="mf">45e87829</span><span class="mi">-5</span><span class="err">a</span><span class="mi">26</span><span class="mf">-480e-8</span><span class="err">aaa</span><span class="mi">-8</span><span class="err">a</span><span class="mi">08</span><span class="err">c</span><span class="mi">7</span><span class="err">a</span><span class="mi">82</span><span class="err">c</span><span class="mi">60</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Type:</span> <span class="err">multipart/mixed;</span> <span class="err">boundary=changesetresponse_</span><span class="mi">541</span><span class="err">a</span><span class="mi">7</span><span class="err">d</span><span class="mi">21</span><span class="err">-af</span><span class="mi">21-4</span><span class="err">d</span><span class="mi">66</span><span class="err">-b</span><span class="mi">410</span><span class="err">-fb</span><span class="mi">4165599</span><span class="err">b</span><span class="mi">54</span>
</span></span><span class="line"><span class="cl"><span class="err">--changesetresponse_</span><span class="mi">541</span><span class="err">a</span><span class="mi">7</span><span class="err">d</span><span class="mi">21</span><span class="err">-af</span><span class="mi">21-4</span><span class="err">d</span><span class="mi">66</span><span class="err">-b</span><span class="mi">410</span><span class="err">-fb</span><span class="mi">4165599</span><span class="err">b</span><span class="mi">54</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Type:</span> <span class="err">application/http</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-Transfer-Encoding:</span> <span class="err">binary</span>
</span></span><span class="line"><span class="cl"><span class="err">Content-ID:</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="err">HTTP/</span><span class="mf">1.1</span> <span class="mi">201</span> <span class="err">Created</span>
</span></span><span class="line"><span class="cl"><span class="err">ETag:</span> <span class="err">W/</span><span class="s2">&#34;JzEsNjg3MTk0Nzk4MzYn&#34;</span>
</span></span><span class="line"><span class="cl"><span class="err">Location:</span> <span class="err">https:</span> <span class="c1">//fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=&#39;usmf&#39;,CustomerGroupId=&#39;1070&#39;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">Content-Type:</span> <span class="err">application/json;</span> <span class="err">odata.metadata=minimal</span>
</span></span><span class="line"><span class="cl"><span class="err">OData-Version:</span> <span class="mf">4.0</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;@odata.context&#34;</span><span class="p">:</span> <span class="s2">&#34;https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;@odata.etag&#34;</span><span class="p">:</span> <span class="s2">&#34;W/\&#34;JzEsNjg3MTk0Nzk4MzYn\&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;dataAreaId&#34;</span><span class="p">:</span> <span class="s2">&#34;usmf&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;CustomerGroupId&#34;</span><span class="p">:</span> <span class="s2">&#34;1070&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;ClearingPeriodPaymentTermName&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;DefaultDimensionDisplayValue&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;CustomerAccountNumberSequence&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;IsSalesTaxIncludedInPrice&#34;</span><span class="p">:</span> <span class="s2">&#34;No&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;Description&#34;</span><span class="p">:</span> <span class="s2">&#34;Wholesales customers1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;WriteOffReason&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;PaymentTermId&#34;</span><span class="p">:</span> <span class="s2">&#34;Net30&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nt">&#34;TaxGroupId&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="err">--changesetresponse_</span><span class="mi">541</span><span class="err">a</span><span class="mi">7</span><span class="err">d</span><span class="mi">21</span><span class="err">-af</span><span class="mi">21-4</span><span class="err">d</span><span class="mi">66</span><span class="err">-b</span><span class="mi">410</span><span class="err">-fb</span><span class="mi">4165599</span><span class="err">b</span><span class="mi">54</span><span class="err">--</span>
</span></span><span class="line"><span class="cl"><span class="err">--batchresponse_</span><span class="mf">45e87829</span><span class="mi">-5</span><span class="err">a</span><span class="mi">26</span><span class="mf">-480e-8</span><span class="err">aaa</span><span class="mi">-8</span><span class="err">a</span><span class="mi">08</span><span class="err">c</span><span class="mi">7</span><span class="err">a</span><span class="mi">82</span><span class="err">c</span><span class="mi">60</span><span class="err">--</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check the data in Dynamics 365 for finance and operations</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_5.png"></a>
</figure>
<p>Note: refer this article for an C# example:
<a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/odata#run-multiple-requests-in-a-single-transaction" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/odata#run-multiple-requests-in-a-single-transaction</a></p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Extend the standard reports in Dynamics 365 finance and operations</title>
    <link>https://nuxulu.com/2019-10-10-extend-the-standard-reports-in-dynamics-365-finance-and-operations/</link>
    <pubDate>Thu, 10 Oct 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-10-10-extend-the-standard-reports-in-dynamics-365-finance-and-operations/</guid>
    <description><![CDATA[<p>In this article, I will show the procedure for the SSRS Reports development and customization in Dynamics 365 finance and operations (Version 8.1 and above).</p>
<p>The scenario is you would like to extend <strong>the customer account statement</strong> report with 2 main tasks</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/custom-designs-business-docs?toc=/dynamics365/commerce/toc.json" target="_blank" rel="noopener noreffer ">Create custom design for the report</a></li>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/expand-app-suite-report-data-sets?toc=/dynamics365/commerce/toc.json" target="_blank" rel="noopener noreffer ">Expand the standard report data sets</a></li>
</ul>
<p>Same with AX 2012 version, there is no change on how you developer a new SSRS report with query based and report data provider. But if you want to extend or modify the standard one you need to understand how to use extensions in general, Event handlers and Chain of Command.</p>
<p>The steps</p>
<h3 id="1-adding-a-new-field">1. Adding a new field</h3>
<p>The main temp table is <strong>CustAccountStatementExtTmp</strong>, right click and create an extension; I&rsquo;m going to add a new string field <strong>MaxTxT</strong></p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_1.png"></a>
</figure>
<h3 id="2-duplicate-the-report">2. Duplicate the report</h3>
<p>Duplicate the <strong>CustAccountStatementExt</strong> report in <em>the Application explorer &gt; AOT &gt; Reports &gt; CustAccountStatementExt</em> as shown in below screen shot:</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_2.png"></a>
</figure>
<p>Rename the report and provide any appropriate name: <strong>MaxCustAccountStatementExt</strong></p>
<h3 id="3-modifythe-report-design-right-click-on-report-dataset-and-choose-restore-to-refresh-the-new-field">3. Modify the report design, right click on report dataset and choose restore to refresh the new field</h3>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_3.png"></a>
</figure>
<p>Open report designer and add that field into a table</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_4.png"></a>
</figure>
<h3 id="4-create-a-new-extension-classthat-extends-the-standard-report-controller-class">4. Create a new Extension class that extends the standard report controller class.</h3>
<p><em><strong>class MaxCustAccountStatementExtController_Ext extends CustAccountStatementExtController{}</strong></em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="c1">//Add construct</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">MaxCustAccountStatementExtController_Ext</span> <span class="n">construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">new</span> <span class="n">MaxCustAccountStatementExtController_Ext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Copy the main method from the standard controller class and add references to the new Controller class</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">SrsPrintMgmtFormLetterController</span> <span class="n">controller</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MaxCustAccountStatementExtController_Ext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">controller</span><span class="p">.</span><span class="n">parmReportName</span><span class="p">(</span><span class="n">PrintMgmtDocType</span><span class="p">::</span><span class="n">construct</span><span class="p">(</span><span class="n">PrintMgmtDocumentType</span><span class="p">::</span><span class="n">CustAccountStatement</span><span class="p">).</span><span class="n">getDefaultReportFormat</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="n">controller</span><span class="p">.</span><span class="n">parmArgs</span><span class="p">(</span><span class="n">_args</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">MaxCustAccountStatementExtController_Ext</span><span class="p">::</span><span class="n">startControllerOperation</span><span class="p">(</span><span class="n">controller</span><span class="p">,</span> <span class="n">_args</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">static</span> <span class="k">void</span> <span class="n">startControllerOperation</span><span class="p">(</span><span class="n">SrsPrintMgmtFormLetterController</span> <span class="n">_controller</span><span class="p">,</span> <span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">_controller</span><span class="p">.</span><span class="n">startOperation</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Optional method, determine which default design for report</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">void</span> <span class="n">outputReport</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">SRSCatalogItemName</span>  <span class="n">reportDesign</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">reportDesign</span> <span class="p">=</span> <span class="n">ssrsReportStr</span><span class="p">(</span><span class="n">MaxCustAccountStatementExt</span><span class="p">,</span><span class="n">Report</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="n">parmReportName</span><span class="p">(</span><span class="n">reportDesign</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="n">parmReportContract</span><span class="p">().</span><span class="n">parmReportName</span><span class="p">(</span><span class="n">reportDesign</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">formletterReport</span><span class="p">.</span><span class="n">parmReportRun</span><span class="p">().</span><span class="n">settingDetail</span><span class="p">().</span><span class="n">parmReportFormatName</span><span class="p">(</span><span class="n">reportDesign</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="5-create-new-report-handler-class">5. Create new report handler class</h3>
<p><em><strong>class MaxCustAccountStatementHandler {}</strong></em></p>
<p>We have two different ways to Populate the data in the Report handler class:</p>
<ul>
<li>Add a temp table Inserting event, row-by-row calculations.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="na">[DataEventHandlerAttribute(tableStr(CustAccountStatementExtTmp), DataEventType::Inserting)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">CustAccountStatementExtTmpInsertEvent</span><span class="p">(</span><span class="n">Common</span> <span class="n">c</span><span class="p">,</span> <span class="n">DataEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">CustAccountStatementExtTmp</span>    <span class="n">tempTable</span> <span class="p">=</span> <span class="n">c</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">tempTable</span><span class="p">.</span><span class="n">MaxTxT</span> <span class="p">=</span> <span class="s">&#34;Hello world&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Add a data processing post-handler, inserting operations that use a single pass over the result set of the standard solution.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="na">[PostHandlerFor(classStr(CustAccountStatementExtDP), methodstr(CustAccountStatementExtDP, processReport))]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">TmpTablePostHandler</span><span class="p">(</span><span class="n">XppPrePostArgs</span> <span class="n">arguments</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">CustAccountStatementExtDP</span> <span class="n">dpInstance</span> <span class="p">=</span> <span class="n">arguments</span><span class="p">.</span><span class="n">getThis</span><span class="p">()</span> <span class="k">as</span> <span class="n">CustAccountStatementExtDP</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">CustAccountStatementExtTmp</span> <span class="n">tmpTable</span> <span class="p">=</span> <span class="n">dpInstance</span><span class="p">.</span><span class="n">getCustAccountStatementExtTmp</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">ttsbegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">forUpdate</span> <span class="n">tmpTable</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">tmpTable</span><span class="p">.</span><span class="n">MaxTxT</span> <span class="p">=</span> <span class="s">&#34;Hello world&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">tmpTable</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">ttscommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="6-add-a-delegate-handler-method-to-start-to-use-your-custom-report">6. Add a delegate handler method to start to use your custom report.</h3>
<p>In this example, extend the <em><strong>getDefaultReportFormatDelegate</strong></em> method in the <em><strong>PrintMgtDocTypeHandlerExt</strong></em> class by using the following code.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">MaxPrintMgtDocTypeHandlersExt</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="na">    [SubscribesTo(classstr(PrintMgmtDocType), delegatestr(PrintMgmtDocType, getDefaultReportFormatDelegate))]</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">getDefaultReportFormatDelegate</span><span class="p">(</span><span class="n">PrintMgmtDocumentType</span> <span class="n">_docType</span><span class="p">,</span> <span class="n">EventHandlerResult</span> <span class="n">_result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">switch</span> <span class="p">(</span><span class="n">_docType</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">case</span> <span class="n">PrintMgmtDocumentType</span><span class="p">::</span><span class="n">CustAccountStatement</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">_result</span><span class="p">.</span><span class="n">result</span><span class="p">(</span><span class="n">ssrsReportStr</span><span class="p">(</span><span class="n">MaxCustAccountStatementExt</span><span class="p">,</span> <span class="n">Report</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="7-create-extension-for-the-existing-menu-items">7. Create extension for the existing menu items</h3>
<p>Navigating to the <strong>CustAccountStatementExt</strong> output menu item and create extension.</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_5.png"></a>
</figure>
<p>Also make sure to set the value of the Object property to <strong>MaxCustAccountStatementExtController_Ext</strong> to redirect user navigation to the extended solution.</p>
<p>That&rsquo;s all, this is what you should have</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_9.png"></a>
</figure>
<h3 id="8-update-the-print-management-settings-to-use-the-custom-business-document">8. Update the Print management settings to use the custom business document</h3>
<p>Go to <em>Account payable &gt; Inquiries and reports &gt; Setup &gt; Forms &gt; Form setup</em>
Click <strong>Print Management</strong>, find the document configuration settings, and then select the custom design</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_6.png"></a>
</figure>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_7.png"></a>
</figure>
<h3 id="9-run-report-and-test-the-result">9. Run report and test the result</h3>
<figure class='center'>
  <a href="/imagesposts/2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_8.png"></a>
</figure>]]></description>
</item>
<item>
    <title>Technical reference - Data entity - Dynamics 365 finance and operations</title>
    <link>https://nuxulu.com/2019-09-28-technical-referece-report-data-entites-d365/</link>
    <pubDate>Sat, 28 Sep 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-09-28-technical-referece-report-data-entites-d365/</guid>
    <description><![CDATA[<p>The following reports provide details about technical objects available in Dynamics 365 for Finance Operations version 10.0. This version was released in May 2019 and has a build number of 10.0.2.</p>
<iframe src="https://onedrive.live.com/embed?cid=7198ABAAEE532EE3&resid=7198ABAAEE532EE3%21337409&authkey=ABl8QaiHw7y4r7g&em=2" width="1000" height="1000" frameborder="0" scrolling="no"></iframe>]]></description>
</item>
<item>
    <title>Dynamics 365 for finance and operations database synchronization using command line</title>
    <link>https://nuxulu.com/2019-08-05-database-sync-d365fo/</link>
    <pubDate>Mon, 05 Aug 2019 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2019-08-05-database-sync-d365fo/</guid>
    <description><![CDATA[<p>You can either execute the script for <em>cloud-hosted</em>, <em>onebox VHD</em>, or <em>UAT</em> environment. This is not applied with <strong>one-box Microsoft hosted</strong> environment.</p>
<p>Open PowerShell, run following script</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">K:</span><span class="p">\</span><span class="n">AOSService</span><span class="p">\</span><span class="n">webroot</span><span class="p">\</span><span class="n">bin</span><span class="p">\</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">Dynamics</span><span class="p">.</span><span class="n">AX</span><span class="p">.</span><span class="n">Deployment</span><span class="p">.</span><span class="n">Setup</span><span class="p">.</span><span class="n">exe</span> 
</span></span><span class="line"><span class="cl"><span class="n">-bindir</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">metadatadir</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-sqluser</span> <span class="s2">&#34;axdbadmin&#34;</span> <span class="n">-sqlserver</span> <span class="s2">&#34;.&#34;</span> <span class="n">-sqldatabase</span> <span class="s2">&#34;AxDB&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-setupmode</span> <span class="s2">&#34;sync&#34;</span> <span class="n">-syncmode</span> <span class="s2">&#34;fullall&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-isazuresql</span> <span class="s2">&#34;false&#34;</span> <span class="n">-sqlpwd</span> <span class="s2">&#34;************&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-logfilename</span> <span class="s2">&#34;C:\Temp\dbsync.log&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>For example</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">K:</span><span class="p">\</span><span class="n">AOSService</span><span class="p">\</span><span class="n">webroot</span><span class="p">\</span><span class="n">bin</span><span class="p">\</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">Dynamics</span><span class="p">.</span><span class="n">AX</span><span class="p">.</span><span class="n">Deployment</span><span class="p">.</span><span class="n">Setup</span><span class="p">.</span><span class="n">exe</span> 
</span></span><span class="line"><span class="cl"><span class="n">-bindir</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">metadatadir</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-sqluser</span> <span class="s2">&#34;axdbadmin&#34;</span> <span class="n">-sqlserver</span> <span class="s2">&#34;.&#34;</span> <span class="n">-sqldatabase</span> <span class="s2">&#34;AxDB&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-setupmode</span> <span class="s2">&#34;sync&#34;</span> <span class="n">-syncmode</span> <span class="s2">&#34;fullall&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-isazuresql</span> <span class="s2">&#34;false&#34;</span> <span class="n">-sqlpwd</span> <span class="s2">&#34;AOSWebSite@123&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="n">-logfilename</span> <span class="s2">&#34;C:\Temp\dbsync.log&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>AX DB user you can get from LCS, if you want to sync Azure DB please change <code>-isazuresql</code> to <em>True</em></p>
]]></description>
</item>
<item>
    <title>Exception Handling in Dynamics 365 For Finance and Operation</title>
    <link>https://nuxulu.com/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</link>
    <pubDate>Mon, 07 Aug 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</guid>
    <description><![CDATA[<p>When we write a code, or make a customization to Dynamics 365 For Operation which is using X++ should make use of Exception Handling to provide some context for the message or a different more useful message. In this article, I will be exploring how I can come up with a uniform way to catch multiple types of exception that can be raised in X++.</p>
<h3 id="1-exception-type">1. Exception type</h3>
<p>There are many several types of exception and the type differs depending on what caused the error. Much of exception types are determined by the kernel and are not normally thrown by application code. All <strong>exception types</strong>, however, can be caught, and it is the developers’ responsibility to decide which exceptions need to be handled.</p>
<p>The exception type is identified using the system-based enumeration called an exception. Because it is a system Enum, it cannot be modified, so users cannot add new exception types.</p>
<p>The following table shows the exception literals that are the values of the Exception enumeration.</p>
<figure class='center '>
  <a href="/imagesposts/2017-08-07_10h00_37.png"></a>
</figure>
<h3 id="2-key-commands">2. Key commands</h3>
<p>The <strong>Try</strong> command signifies the start of a block of code that you want to control with the X++ exception handling system. Any exceptions that are thrown in that block of code can be caught and handled accordingly. The block of code inside the Try statement must be contained between brackets ( { } ).</p>
<p><strong>Catch</strong> statements come after the block of code and define what code is executed when each exception is thrown.</p>
<p>You do not have to define a catch statement for every possible exception; however, each try statement must have at least one catch statement.</p>
<p>A <strong>Retry</strong> command tells the system to go back to the Try statement and attempt to execute the code again. Any data that was loaded before the Try command will remain as it was, but any data retrieved or modified after the Try statement will be refreshed.</p>
<p>When a deadlock exception is thrown, all locks on tables that this process holds are released, which may allow the other process or processes that are also deadlocked to continue.</p>
<p>By calling a retry, the process can attempt to update the record again and may now be able to complete. It is a best practice that a retry uses a counter so that the number of retries can be controlled, and a user does not become stuck in a loop.</p>
<p>The <strong>final</strong> keyword is now available to follow the try and catch keywords. The semantics are identical to the semantics in C#. The statements provided in the final clause is executed irrespective of whether the try block threw any exceptions.</p>
<h3 id="3-code-statement">3. Code Statement</h3>
<p>We will use these lines of code example here for testing Exception handling</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">CustCreateCustomer</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">CustCreateCustomer</span> <span class="n">custCreateCustomer</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CustCreateCustomer</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">custCreateCustomer</span><span class="p">.</span><span class="n">run</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Dialog</span>          <span class="n">dlg</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dialog</span><span class="p">(</span><span class="s">&#34;Create new customer&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">DialogField</span>     <span class="n">dlgCust</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">DialogField</span>     <span class="n">dlgGrp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">CustTable</span> <span class="n">custTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">dlgCust</span> <span class="p">=</span> <span class="n">dlg</span><span class="p">.</span><span class="n">addField</span><span class="p">(</span><span class="n">extendedTypeStr</span><span class="p">(</span><span class="n">CustVendAc</span><span class="p">),</span> <span class="s">&#34;Customer account&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">dlgGrp</span>  <span class="p">=</span> <span class="n">dlg</span><span class="p">.</span><span class="n">addField</span><span class="p">(</span><span class="n">extendedTypeStr</span><span class="p">(</span><span class="n">CustGroupId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">dlg</span><span class="p">.</span><span class="n">run</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">try</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">custTable</span><span class="p">.</span><span class="n">AccountNum</span>    <span class="p">=</span> <span class="n">dlgCust</span><span class="p">.</span><span class="k">value</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="n">custTable</span><span class="p">.</span><span class="n">CustGroup</span>     <span class="p">=</span> <span class="n">dlgGrp</span><span class="p">.</span><span class="k">value</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(!</span><span class="n">custTable</span><span class="p">.</span><span class="n">validateWrite</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="s">&#34;Please enter all required fields.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">custTable</span><span class="p">.</span><span class="n">insert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">Error</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">error</span><span class="p">(</span><span class="s">&#34;An error occurred. Please try again&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This code will try to create a customer after revived inputted value from users, this code also handling errors when user do not input enough information. A <code>Throw</code> statement is used to throw an error that can be caught by a Catch statement. When the system throws an exception <code>ttsabort</code> is called automatically, and so does not have to be called in a Catch statement.</p>
<h3 id="4-optimistic-concurrency-exceptions">4. Optimistic Concurrency Exceptions</h3>
<p>The <strong>optimistic concurrency check</strong> (OCC) is a performance enhancing function within Microsoft Dynamics 365 For Operation. It presumes that any record retrieved from the database is not updated until it is proven to be updated by the database. This means that fewer locks must be placed on records in the database. This allows for faster access for other users.</p>
<p>This also means that one user can update a record after another user has retrieved it from the database. This can cause data inconsistency. If the second user then also tries to update the record, an <code>UpdateConflict</code> exception is thrown. The system does this by comparing the <code>recVersion</code> field on the record buffer at runtime and the actual record in the database. The <code>recVersion</code> field value is changed every time that an update is successfully made to a record.</p>
<p>There are two main table update exceptions, <code>UpdateConflict</code> and <code>DeadLock</code>. An update conﬂict occurs due to the optimistic concurrency failing, whereas a deadlock is the classic database scenario where both transactions have each locked a table that the other needs.</p>
<p><strong>Update conﬂicts</strong> are normally handled within the insert, delete, and update methods of a table. The <strong>BOM table</strong> is a good example of this. You may also hard to find many examples where this has been used. We use this pattern only if we deem it to be required. The code within the table&rsquo;s update method also updates other records, so it has been written to handle update conﬂicts.</p>
<p>The following code is an example of how to handle the UpdateConflict exception that might be thrown.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">update</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">OCCRetryCount</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttsbegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// code that updates records in other tables</span>
</span></span><span class="line"><span class="cl">        <span class="n">super</span><span class="p">();</span> <span class="c1">// do the update</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// other code that updates records in other tables</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttscommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//Deadlock</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">Deadlock</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">retry</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//UpdateConflict</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">UpdateConflict</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">appl</span><span class="p">.</span><span class="n">ttsLevel</span><span class="p">()</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">xSession</span><span class="p">::</span><span class="n">currentRetryCount</span><span class="p">()</span> <span class="p">&gt;=</span> <span class="err">#</span><span class="n">RetryNum</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">throw</span> <span class="n">Exception</span><span class="p">::</span><span class="n">UpdateConflictNotRecovered</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">retry</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">throw</span> <span class="n">Exception</span><span class="p">::</span><span class="n">UpdateConflict</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If a conflict due to OCC occurs, the system throws the <code>UpdateConflict</code> exception and it is caught by the catch statement.</p>
<p>The other new element here is <code>ttsLevel</code>. Since transactions can be nested, we do want the exception to falling through to the parent transaction if one exists. If <code>ttsabort</code> is issued (directly or due to a throwing error) at any level, the whole transaction will be rolled back; we can&rsquo;t roll back just the level where the error is thrown.</p>
<p>The code checks the current TTS level. If it is not Zero, in other words, it is still in a TTS transaction, it throws another <code>UpdateConflict</code> exception to the next Catch list of the next outer Try statement in scope. This continues until it is no longer inside a TTS transaction. We must make sure that when the code is retired, all data is refreshed.</p>
<p>It is important that we don&rsquo;t retry indefinitely, as this may cause the client to hang. To control this, we use <code>xSession::currentRetryCount()</code> to get the number of retries and check this against the <code>#RetryNum</code> macro. The macro defines the standard number of retries deemed appropriate by Microsoft, which is five.
then the <code>UpdateConflictNotRecovered</code> exception is thrown. This means the whole transaction is aborted and stops retrying.</p>
<h3 id="5-conclusion">5. Conclusion</h3>
<p>We do not, in any case, want an error to be thrown that stops the form from opening. Also, if there is an error, we need to decide whether the user actually needs to know that an error occurred. It may be enough for our purposes that the fields don&rsquo;t appear, and we can use the debugger to trace through the code to determine why.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Management reporter in new AX, Dynamics 365 For Operation</title>
    <link>https://nuxulu.com/2017-07-24-management-reporter-in-dynamics-365-for-operation/</link>
    <pubDate>Mon, 24 Jul 2017 01:33:44 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-07-24-management-reporter-in-dynamics-365-for-operation/</guid>
    <description><![CDATA[<h3 id="1-overview-management-reporter-in-new-ax">1. Overview Management Reporter in New AX</h3>
<p>Management Reporter is now <strong>Financial reports</strong>.</p>
<p>As you know Management Reporter is a real-time financial reporting application that is designed to empower information workers to quickly and easily create, generate, secure, and publish financial statements, such as Profit and Loss statements, balance sheets, and cash flow reports.</p>
<p>In Dynamics 365 For Operation, I can access these reports within AX means directly <em>from the web client in the browser</em>. This feature allows me to run financial statements, such as a balance sheet and income statements.</p>
<p>The <strong>22 default</strong> reports that are included, default financial reports including income statements, balance sheet reports, cash flow statements, and general ledger reports, which can be modified depending on your company’s requirements.</p>
<p>Here is the list</p>
<figure class='center '>
  <a href="/imagesposts/Financial_reports.png"></a>
</figure>
<h3 id="2-access">2. Access</h3>
<p>You can find the financial reporting menu in Dynamics 365 For Operation by visiting</p>
<p><em><strong>General Ledger &gt; Inquiries and reports &gt; Financial reporting.</strong></em></p>
<p>Although, there are some privileges and duties relating to this. These report functions are available to users that have their appropriate privileges and duties assigned to them already.
In order to view, edit, and manage reports in Management Reporter you need to add security administrator role to business Users. Besides, if you only need users can run the financial reports then you have to add the appropriate privileges and duties assigned to them.</p>
<p>Before creating and generating financial reports for a legal entity, you must be done set up for that legal entity:</p>
<ul>
<li>Fiscal calendar</li>
<li>Ledger</li>
<li>Chart of Accounts</li>
<li>Currency</li>
</ul>
<h3 id="3-management-reporter-benefits">3. Management Reporter Benefits</h3>
<p>With Management Reporter, business users can:</p>
<ul>
<li>Create their own boardroom-quality reports without IT assistance.</li>
<li>Take advantage of secure report distribution through the centralized Report Library.</li>
<li>Gain strong support for regulatory compliance (Change the report date, currency, view in Summary view or a detailed view, Add either dimension filters or attribute filters).</li>
<li>Report design flexibility likes Save dimension combinations, and reuse the dimensions for multiple reports. Management Report Components.</li>
<li>Financial report collaboration:
<ul>
<li>Schedule reports so that they are automatically generated on a daily, weekly, monthly, or annual basis.</li>
<li>Export to the read-only XPS format, which provides better document security through digital signatures.</li>
<li>Export to a Microsoft Excel worksheet.</li>
<li>To share reports, you can create email messages that contain links to the reports.</li>
</ul>
</li>
</ul>
<h3 id="4-management-report-components">4. Management Report Components</h3>
<p>Some important components I want to mention here:</p>
<ul>
<li><strong>Report Designer</strong>
Create report building blocks that can be combined to define and generate a report. The report wizard guides less experienced users through the design process. Advanced users can create new report building blocks or modify existing building blocks to meet their requirements.</li>
<li><strong>Desktop Viewer</strong>
Used to organize and view reports and supporting files. It also stores the report library.</li>
<li><strong>Web Viewer</strong>
Displays Management Reporter reports in a web browser. The Web Viewer does not require an installation of Management Reporter server components.</li>
<li><strong>Report schedules</strong>
A user can schedule a single report or a group of reports to generate regularly.</li>
<li><strong>Management Reporter database</strong>
This SQL database stores the components, known as building blocks, which are used to generate reports. It also stores report definitions and previously generated reports.</li>
<li><strong>Application service</strong>
Controls access to the data provider and provides connectivity to clients.</li>
<li><strong>Process service</strong>
Generates the reports that are created and queued by the Management Reporter client.</li>
</ul>
<h3 id="5-generate-financial-reports">5. Generate financial reports</h3>
<p>We are currently at Financial reports screen as picture below</p>
<figure class='center '>
  <a href="/imagesposts/2017-04-10_11h56_15.png"></a>
</figure>
<p>As you can see there&rsquo;s nowhere on the screen or anything that indicates that there&rsquo;s the Management Reporter available, but if we click this <code>edit</code> button and entering your email account and password. After you log in, it will open the <strong>Report Definitions</strong> Management Reporter window for us.</p>
<figure class='center '>
  <a href="/imagesposts/2017-04-10_11h57_20.png"></a>
</figure>
<p>On the left, here we have a list of all the same reports that we were looking at in AX.
Let&rsquo;s look at <code>the income statement - default report</code>, So I have a couple parameter fields we need to change before we can generate our report. Please prefer below picture</p>
<figure class='center '>
  <a href="/imagesposts/2017-04-10_12h08_53.png"></a>
</figure>
After we click **generate** button, Financial will be generated on current web browser
<figure class='center '>
  <a href="/imagesposts/2017-04-10_12h11_29.png"></a>
</figure>
we can see here by the report date.  So, on our income statement, we have all the usual fields here.  We have total revenues, gross profit, total operating experiences, net operating income and net income. That all is pretty standard and it all looks good.
<h3 id="6-conclusion">6. Conclusion</h3>
<p>Row, Column, Tree, Report definitions work essentially the same as they did in <strong>Dynamics AX 2012</strong>. I can still use row, column, and tree definitions with multiple reports, and options for the Report definition tabs.</p>
<figure class='center '>
  <a href="/imagesposts/2017-04-10_14h57_51.png"></a>
</figure>
<p>Here are some of the functions that are not available in Financial Reporting for Dynamics 365 for Operations:</p>
<ul>
<li>Publishing/distributing reports to SharePoint and/or SharePoint Online locations is not available.</li>
<li>Report Viewer/Library has been removed.</li>
<li>Import data from an Excel file is not available.</li>
<li>XBRL (extensible Business Reporting Language) is no longer available.</li>
<li>Comments are not currently available in the web client.</li>
<li>Running a consolidation between companies in different instances of AX is not available.</li>
<li>The Wizard has been removed.</li>
<li>Management Reporter includes direct integration with the Microsoft Dynamics AX general ledger so that there is no need to create a custom connection to the data source.</li>
</ul>
<p>Nevertheless, with custom reporting structures, ledger accounts, and dimensions mapping, creation and the capabilities to publish reports to multiple channels and formats from the desktop, and embedding transactional and analytical reports into a customizable dashboard, Financial Reporting in Dynamics 365 For Operation is all set to simplify the financial reporting process, providing instant insight into your financials.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Basic C# OOP Concept</title>
    <link>https://nuxulu.com/2017-04-10-oops_concept/</link>
    <pubDate>Tue, 11 Apr 2017 00:00:00 &#43;0000</pubDate>
    <author>false</author>
    <guid>https://nuxulu.com/2017-04-10-oops_concept/</guid>
    <description><![CDATA[<blockquote>
<p>There are many explanations that we can find in internet about C# OOP, but here in my article I will give a very simple example. In this article, I will use a “House (like the houses we live in) “as a real-time example for easy understanding of OOP Concept in C#.</p>
</blockquote>
<h3 id="1-class">1. Class</h3>
<p><strong>Class</strong> is a like a Blueprint.</p>
<p>Blueprint is outline drawing of our actual plan. For example if we plan to build our new house, the Engineer will explain our new house plan with a blue print as shown in the image below. Once we finalized the plan the engineer will start building the house with same plan.</p>
<p>Same like blueprint class is an outline of program. Using the class we can write our own method and declare the variables and using the objects we can access the class Method and Variables. The class will be complete with Variables, Methods and Objects.</p>
<figure class='center '>
  <a href="/imagesposts/Blueprint.jpg"></a>
</figure>
<p>For more easy understanding of OOP with real world example here I have explained a class with House.</p>
<p>We can imagine a House as an example for a Class. In a house, we will have rooms like living room, bedroom, kitchen and items like TV, fridge etc. House owner can access and use all the rooms and rooms&rsquo; items. Same like this in a Class will have a group of <strong>Methods and Variables</strong>.</p>
<p>Rooms and Rooms&rsquo;items are example for <strong>Methods and Variables</strong>. So now, we have a complete house with all rooms and rooms&rsquo;items. House owner can access and use all the rooms and Rooms&rsquo; Items. To access and use a Class, methods and variables here we use <strong>Objects</strong>. Objects are instance of a class. We will see details about objects in the next section.</p>
<p><em>What will happen if there are no rooms and items in a House?</em>  It will be empty and no one can use the house until it has all the rooms and Items. See the below image as an example for the empty house.</p>
<figure class='center '>
  <a href="/imagesposts/EmptyHouse.jpg"></a>
</figure>
<p>Now this empty house is a Class. So what is the use of a Class without Methods and variable.
Now let’s see an example for a Complete House with Rooms and items.</p>
<figure class='center '>
  <a href="/imagesposts/CompleteHouse.jpg"></a>
</figure>
<p>So here, we have a complete house. Similarly, the Class will be complete with group of Variables, Methods and Objects. We can see details of all this in next sections of this article.</p>
<p><em><strong>Class and objects are the base concept of OOP – Object Oriented Programming.</strong></em></p>
<p>Class should be started with the Keyword class and next we give the name for our class we can give any meaning full name as Class Name, next we will have the Open and close brackets.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">ClassA</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2-object">2. Object</h3>
<p>As we have already seen that, <strong>House Owner</strong> will access and use all the <strong>Rooms</strong> of the House and its Items. Similarly, to access all <strong>Class Method</strong> and <strong>Variable</strong> we use <strong>Objects</strong>. We can create one or many object for a same Class. Example we can say for a house there might be one or many owners.</p>
<p><code>objHouseOwner</code> is the Object for a class which will be used to access all variable and Method of a class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nn">ConsoleApplication1</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">class</span> <span class="nc">Program</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Program</span> <span class="n">pro</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Program</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-variable">3. Variable</h3>
<p>Variables are used to store our value. Our value can be numeric or characters for example to store a Phone no we can use <code>int</code> type variable and to store our name we can use <code>string</code> type variable with name for each variable.</p>
<p><strong>Variables can be local or Global</strong>. For Example, we can say if we buy a new TV , TV Service man will come and setup the TV in our home. He will give his contact number for future contacts. Usually what we do is take a memo paper and write his contact number and keep it in a common place or in a wallet of ours.</p>
<p>If we keep the memo in a Common place everyone who is visiting our house can see that contact number. <strong>Global or public variables</strong> are similar to this. If we declared the variable as Global, All the Methods inside the class can access the variable. If we store the memo Only in our wallet, we can see the contact number. Local or private variables are similar to this.</p>
<p>Syntax for variable:</p>
<p><code>Access-Modifiers Data-Type Variable-Name</code></p>
<p>By default the Access-Modifiers are by private, we can also use public to variable.</p>
<p>Example of Variable:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nn">ConsoleApplication1</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Example Program </span>
</span></span><span class="line"><span class="cl">    <span class="k">class</span> <span class="nc">ShanuHouseClass</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="kt">int</span> <span class="n">noOfTV</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">private</span> <span class="n">Boolean</span> <span class="n">doYouHaveTV</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">protected</span> <span class="n">String</span> <span class="n">yourTVName</span> <span class="p">=</span> <span class="s">&#34;SAMSUNG&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ShanuHouseClass</span> <span class="n">objHouseOwner</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ShanuHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You Have total &#34;</span> <span class="p">+</span> <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">noOfTV</span> <span class="p">+</span> <span class="s">&#34; no of TV :&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV Name is :&#34;</span> <span class="p">+</span> <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">yourTVName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_1.png"></a>
</figure>
<p>In Above example program I have declared two variables inside a class. In main method I have created object for class. Here we can see using the object we can access the variable of a class and display the output.</p>
<p>Main Method is the default Method of C#, where every console and windows application will start the program execution, In the Main Method, we can declare the Object for the class and use the object, and we can access all variables and Methods of a Class. For example, we can say there will be entrance gate for every house. Using the entrance gate we can enter inside our house. Similarly, to run our program there should be some default program execution starting Method. Main method will be useful in this program execution starting point. Whenever we run our C# Console or windows application, first the Main method will be executed .From the main method we can create an object for our other classes and call their Methods.</p>
<h3 id="4-method-or-functions">4. Method or Functions</h3>
<p>Method is a group of code statement .Now here we can see the above example program with method.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">ShanuHouseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">int</span> <span class="n">noOfTV</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="n">Boolean</span> <span class="n">doYouHaveTV</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="n">String</span> <span class="n">yourTVName</span> <span class="p">=</span> <span class="s">&#34;SAMSUNG&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">myFirstMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You Have total &#34;</span> <span class="p">+</span> <span class="n">noOfTV</span> <span class="p">+</span> <span class="s">&#34;no of TV :&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV Name is :&#34;</span> <span class="p">+</span> <span class="n">yourTVName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">a</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ShanuHouseClass</span> <span class="n">a</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ShanuHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">a</span><span class="p">.</span><span class="n">myFirstMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_2.png"></a>
</figure>
<blockquote>
<p>Most of developers were wondering about what is the difference between the Method and Function, both Methods and Functions are the same. Here in my article, I will use Method instead of functions. However, there is one difference in Methods and Functions, In OOP Languages like <code>C#, Java</code> etc. We use the term Method while the non-OOP programming like <code>C</code> etc. we use the term Function.</p>
</blockquote>
<p><strong>What is the use of Methods?</strong>
Another real-time example let’s take our mobile phone, we can say as we have Mobile phone and store many Songs in it. However, we always like to listen to the selected songs. It will be boring and hard for us to select our favorite song every time and play it.</p>
<p>Instead of doing the same work repeatedly, we use the playlist. In playlist, we can add all-favorite songs of ours. Just click on the playlist of our collections and listen to the music. This will make our work easier and we don’t need to do the same thing again and again. Methods are used like a playlist where we can write all our repeated code in one Method and just call the method wherever we needed.</p>
<p>In a house, there might be one big room or multiple rooms but each room will have different facilities, similarly in a class we can write one or multiple Methods. In a house, there might be two or three Bedrooms. Here the room name is Bedroom, but each bedroom can be different by size, color etc. This means same Rooms with different type. Similarly, in a class we can create more than one method with the same name but different parameter. In OOP it’s called as <strong>Polymorphism</strong> we can see details about Polymorphism later on in this article.</p>
<p><em>Syntax for the Functions</em>
<code>Access-Modifiers Return-Type Method-Name (Parameter-List)</code></p>
<ul>
<li>Access-Modifiers: We will see more details about this Topic later on.</li>
<li>Return-Type: If our Method returns any value then we use the return Type with any Data Type as String, int etc., if our Method does not return any value then we use the type “Void”.</li>
<li>Method-Name: Here we give our Name for every Method, which we create</li>
<li>Parameter-List: Parameter-List or Arguments, which we pass to the function.</li>
</ul>
<p><em><strong>Here is an example of Method:</strong></em></p>
<ul>
<li><strong>Method with Void Type</strong>:
Void is a keyword which will not return any data from the Method, for example we can see the below Method with void Type, here in this method we display all our output using the <code>Console.WriteLine</code> and have used the <code>Console.ReadLine());</code> to get the Input. This Method has all Input and Output Operation but this method don’t return any value.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="c1">// Function with void and no parameter  -- here void means no return type        </span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">veranda</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Welcome to Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;How Many Chairs Do you have in your Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">NoofChair</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;I have total &#34;</span> <span class="p">+</span> <span class="n">NoofChair</span> <span class="p">+</span> <span class="s">&#34; Chairs in my Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>Method with Return Type</strong>:
Method with return type will return some result, which can be used in our program, for example, here we have Method TVNAME with return Type as <code>String</code>. We can say in our home we might have a TV in our LivingROOM and in the parent’s bedroom and also in kids bedroom .We might have different TV brand in each room, suppose if we want to know each room TV Brand Name then we need to enter the same code 3 times. Instead of writing the same code again, we can use a method with Return Type.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="c1">// Function with Return type as String        </span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="kt">string</span> <span class="n">TVNAME</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">String</span> <span class="n">YOURTVName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Enter Your TV Brand NAME&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">YOURTVName</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">YOURTVName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>Method with Parameter-List</strong>:
So far, we have seen methods without arguments. Arguments are used to pass some data to the Method to do our process in a better way. For example, we can say we want to do a painting, to our bedrooms. We need to get the opinions of all the member of the house in order to know there choices of color for each bedroom, we can pass the member Name and their favorite color as parameter to a Method.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="c1">//Function with parameter    </span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">nameandColor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">nameandColor</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Same Method name with different arguments are called as Method over loading, here we can see below .Both Method has the same name but it has different arguments.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="c1">// Same Function Name with Different Paramenter        </span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">MemberName</span><span class="p">,</span> <span class="n">String</span> <span class="n">Color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">MemberName</span> <span class="p">+</span> <span class="s">&#34; Like &#34;</span> <span class="p">+</span> <span class="n">Color</span> <span class="p">+</span> <span class="s">&#34;Color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The Complete Class with Main Method Example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.Threading.Tasks</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">// Example Program</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">ShanuHouseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">int</span> <span class="n">noOfTV</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="n">Boolean</span> <span class="n">doYouHaveTV</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="n">String</span> <span class="n">yourTVName</span> <span class="p">=</span> <span class="s">&#34;SAMSUNG&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">int</span> <span class="n">NoofChair</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">myFirstMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You Have total &#34;</span> <span class="p">+</span> <span class="n">noOfTV</span> <span class="p">+</span> <span class="s">&#34;no of TV :&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV Name is :&#34;</span> <span class="p">+</span> <span class="n">yourTVName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Function with void and no parameter  -- here void means no return type   </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">veranda</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Welcome to Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;How Many Chairs Do you have in your Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">NoofChair</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;I have total &#34;</span> <span class="p">+</span> <span class="n">NoofChair</span> <span class="p">+</span> <span class="s">&#34; Chairs in my Veranda&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Function with Return type as String   </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">string</span> <span class="n">TVNAME</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">String</span> <span class="n">YOURTVName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Enter Your TV Brand NAME&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">YOURTVName</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">YOURTVName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//Function with parameter    </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">nameandColor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">nameandColor</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Same Function Name with Different Paramenter   </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">MemberName</span><span class="p">,</span> <span class="n">String</span> <span class="n">Color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">MemberName</span> <span class="p">+</span> <span class="s">&#34; Like &#34;</span> <span class="p">+</span> <span class="n">Color</span> <span class="p">+</span> <span class="s">&#34;Color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ShanuHouseClass</span> <span class="n">objHouseOwner</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ShanuHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">veranda</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">String</span> <span class="n">returnvalue</span> <span class="p">=</span> <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">TVNAME</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV BRAND NAME IS: &#34;</span> <span class="p">+</span> <span class="n">returnvalue</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;My Name is Shanu I like Lavender color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;My Name is Afraz I like Light Blue color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;SHANU&#34;</span><span class="p">,</span> <span class="s">&#34;Lavender&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The Output of above class is here:</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_3.png"></a>
</figure>
<h3 id="5-access-modifiers">5. Access Modifiers</h3>
<p>Access Modifiers are nothing but the Usage and Limitation of our type like variable, Methods and Class. For Example we can say it as a security limit. This six are the basic Access modifiers which we used in our C# Class/method and in Variables.</p>
<ul>
<li><code>Private</code></li>
</ul>
<p>Let’s take our House Example .We will have a Security Guard in House, His duty is till the Entrance of the house. He cannot go inside the house and access all the things. In this case we can create a SecurityGuardClass and declare the variable and method for Security as private .</p>
<ul>
<li><code>Public</code></li>
</ul>
<p>House Owners are public to the class where they can access all classes related to the House. They have no restrictions to access their house.</p>
<ul>
<li><code>Internal</code></li>
</ul>
<p>Access limit of variable or method is within a project. For example let’s consider in our project we have more than one class and we have declared a variable as internal in one class. Let’s see an example program for internal variable.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Modifiers</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">class</span> <span class="nc">sampleInternalClass</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="k">internal</span> <span class="n">String</span> <span class="n">myInternal</span> <span class="p">=</span> <span class="s">&#34;Iam Internal Variable&#34;</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">class</span> <span class="nc">ShanuHouseClass</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">noOfTV</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="n">String</span> <span class="n">yourTVName</span> <span class="p">=</span> <span class="s">&#34;SAMSUNG&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">void</span> <span class="n">myFirstMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You Have total &#34;</span> <span class="p">+</span> <span class="n">noOfTV</span> <span class="p">+</span> <span class="s">&#34;no of TV :&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV Name is :&#34;</span> <span class="p">+</span> <span class="n">yourTVName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ShanuHouseClass</span> <span class="n">objHouseOwner</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ShanuHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">myFirstMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">sampleInternalClass</span> <span class="n">intObj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">sampleInternalClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Internal Variable Example :&#34;</span> <span class="p">+</span> <span class="n">intObj</span><span class="p">.</span><span class="n">myInternal</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_4.png"></a>
</figure>
<ul>
<li><code>Protected</code></li>
</ul>
<p>Only the main class and derived class can have access of protected variable or method. For example servants and Guests are example for the Protected. For Example Servants can go to all room and do cleaning and other activates. However, they have limitations of access in the house, as they cannot take rest in a bed of house owner.</p>
<ul>
<li><code>Protected Internal</code></li>
</ul>
<p>Protected Internal variable or Method has limitation with in a project of class or Derived class. Here is a sample program for Protect Internal Variable .In this example I have used the Inheritance .we will see in detail about Inheritance more detail in this article.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">sampleProtectedInternalClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">internal</span> <span class="n">String</span> <span class="n">myprotectedInternal</span> <span class="p">=</span> <span class="s">&#34;Iam Protected Internal Variable&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">protectedInternalMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Protected Internal Variable Example :&#34;</span> <span class="p">+</span> <span class="n">myprotectedInternal</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">derivedClass</span> <span class="p">:</span> <span class="n">sampleProtectedInternalClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">derivedprotectedInternal</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Derived Protected Internal Variable Example :&#34;</span> <span class="p">+</span> <span class="n">myprotectedInternal</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">ShanuHouseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">noOfTV</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="k">public</span> <span class="n">String</span> <span class="n">yourTVName</span> <span class="p">=</span> <span class="s">&#34;SAMSUNG&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">void</span> <span class="n">myFirstMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You Have total &#34;</span> <span class="p">+</span> <span class="n">noOfTV</span> <span class="p">+</span> <span class="s">&#34;no of TV :&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Your TV Name is :&#34;</span> <span class="p">+</span> <span class="n">yourTVName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ShanuHouseClass</span> <span class="n">objHouseOwner</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ShanuHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">myFirstMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">sampleProtectedInternalClass</span> <span class="n">intObj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">sampleProtectedInternalClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">intObj</span><span class="p">.</span><span class="n">protectedInternalMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">derivedClass</span> <span class="n">proIntObj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">derivedClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">proIntObj</span><span class="p">.</span><span class="n">derivedprotectedInternal</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_5.png"></a>
</figure>
<blockquote>
<p>The main and major things we need to know in OOP concept are Encapsulation, Abstraction,Polymorphism and Inheritance. We will discuss them in detail in this article.</p>
</blockquote>
<h3 id="6-encapsulation">6. Encapsulation</h3>
<p>Encapsulation is to hide the member or variable to outside class. In our house example, I have already told that House security guard limitation is till the entrance of the house. The security guard doesn’t need to know about what is happening inside the house. Therefore, the House Owner will hide all the happenings to Security guard for more safety. The hiding and limitation are called as Encapsulation.</p>
<p>For example, we have two Classes the first one is <code>Houseclass</code> and the other class as <code>houseSecurityClass</code>.</p>
<p>Here we can see all the variables are wrap into a class where <code>houseSecurityClass</code> is set as public, so the <code>Houseclass</code> can access that, but <code>houseClass</code> has both Public and private variable where the private variable of a class cannot be accessed outside of the class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="c1">//Encapsulation in OOP</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">houseSecurityClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="kt">int</span> <span class="n">noofSecurity</span><span class="p">;</span> <span class="k">public</span> <span class="n">String</span> <span class="n">SecurityName</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">Houseclass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="kt">int</span> <span class="n">noofLockerinHosue</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="k">public</span> <span class="kt">string</span> <span class="n">OwnerName</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="7-abstraction">7. Abstraction</h3>
<p>Abstraction is to show and share some common information to the user. Let’s take our House example, in our house we will have servant, servants can go to all rooms and do cleaning and other works. The house owner can give full rights or some partial rights to the servant for accessing his house. Here we can see an example program as private declared variables and Methods are not shared with servant but the public variable and Methods are shared with servant.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">HouseServerntClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="kt">int</span> <span class="n">SaftyLoackerKeyNo</span> <span class="p">=</span> <span class="m">10001</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="n">String</span> <span class="n">roomCleanInstructions</span> <span class="p">=</span> <span class="s">&#34;Clean All rooms&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">void</span> <span class="n">saftyNos</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;My SaftyLoackerKeyNo is&#34;</span> <span class="p">+</span> <span class="n">SaftyLoackerKeyNo</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">roomCleanInstruction</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">roomCleanInstructions</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">agrs</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">HouseServerntClass</span> <span class="n">a</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HouseServerntClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">a</span><span class="p">.</span><span class="n">saftyNos</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">a</span><span class="p">.</span><span class="n">roomCleanInstruction</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_6.png"></a>
</figure>
<h3 id="8-inheritance">8. Inheritance</h3>
<p>Inheritance is used to reuse the code. In Protected Internal Access modifier section we have already seen an example program for Inheritance. Inheritance is nothing but accessing and using all base class variable and methods in the Derived Class. Inheritance can be</p>
<ul>
<li><strong>Single level Inheritance</strong></li>
</ul>
<p>With one Base class and one derived Class for example.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">baseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">void</span> <span class="n">privateMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;private Method&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">publicMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;This Method Shared&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">DerivedClass</span> <span class="p">:</span> <span class="n">baseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">DerivedClass</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DerivedClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">publicMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//This will be error as private method can not be accessed in Derived Class        </span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">privateMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The Error is:</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_7.png"></a>
</figure>
<blockquote>
<p>Some time users might be not clear of what Base class is and what Derived class is. Base class is the super class and derived class is the classes which inherit the base class.</p>
</blockquote>
<p>Here we can see a simple Inheritance where the base class is the <code>GuestVist</code> and derived class is the <code>HouseOwnerClass</code>. Here <code>HouseOwnerClass</code> class inherits the base class of <code>GuestVist</code></p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_8.png"></a>
</figure>
<ul>
<li><strong>Multi level Inheritance</strong></li>
</ul>
<p>With more than one Derived Class for example. Here we can see an example first base class is derived in <strong>DerivedClass1</strong> and then the <strong>DerivedClass1</strong> is derived in <strong>DerivedClass2</strong> .Now from <strong>DerivedClass2</strong> we can access both <strong>baseClass</strong> and <strong>DerivedClass1</strong> variable and methods.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">baseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">void</span> <span class="n">privateMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;private Method&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">publicMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;This Method Shared&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">DerivedClass1</span> <span class="p">:</span> <span class="n">baseClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">DerivedClass1</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Derived Class 1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">DerivedClass2</span> <span class="p">:</span> <span class="n">DerivedClass1</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">DerivedClass2</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DerivedClass2</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">publicMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">DerivedClass1</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//This will be error as private method can not be accessed in Derived Class   </span>
</span></span><span class="line"><span class="cl">        <span class="c1">//obj.privateMethod(); </span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_9.png"></a>
</figure>
<ul>
<li>
<p><strong>Multiple Inheritance</strong></p>
<ul>
<li>Will the .Net Support Multiple Inheritance?
The Answer to this Question is <strong>No</strong>. In C #, it’s not possible to write a Multiple Inheritance using Class.
What is Multiple Inheritance? Multiple Inheritance is nothing but we can have more than one class and we can inherit both Classes in our derived class.</li>
<li>What will happen if I write a Multiple Class Inheritance Using C#?
Let’s take our example House .Here we have the derived Class as <code>HouseOwnerClass</code> and have Two More classes as <code>GuestVist</code> and <code>FriendsandRelationsClass</code>.
Now suppose for our house both Guest and Friend have visited. For this, we write above three classes and inherit the two classes in our derived class.
When I write the Multiple Inheritance in C #, it will display the warning message during our code and execute our program. 
See the below image which shows the Warning error message while I write Multiple Inheritance.</li>
</ul>
</li>
</ul>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_10.png"></a>
</figure>
<pre><code>* Then how can we use the Multiple Inheritance
</code></pre>
<p><strong>Interface</strong> will be used for Multiple Inheritance.</p>
<h3 id="9-polymorphism">9. Polymorphism</h3>
<p>Ploy means more than one form. In the beginning of the Article at Method Section, we have already seen an example of Polymorphism. Same method name with different parameter is an example for the polymorphism.
<strong>Method Overloading</strong> and <strong>Method Overriding</strong> will be used in polymorphism. Polymorphism have two types of execution one is Compile Time Polymorphism and the other one is called the Run time Polymorphism.</p>
<ul>
<li><strong>Method Overloading</strong></li>
</ul>
<p>Method overloading are nothing but same Method name will be used for more than one method with different Argument.
Here is an example program for the Method Overloading. As we can see here Method name <code>BedRoom</code> has been used for two Method but the parameter for both methods are different.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HouseOwnerClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//Function with parameter        </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">nameandColor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">nameandColor</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Same Function Name with Different Paramenter       </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">BedRoom</span><span class="p">(</span><span class="n">String</span> <span class="n">MemberName</span><span class="p">,</span> <span class="n">String</span> <span class="n">Color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">MemberName</span> <span class="p">+</span> <span class="s">&#34; Like &#34;</span> <span class="p">+</span> <span class="n">Color</span> <span class="p">+</span> <span class="s">&#34; Color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">HouseOwnerClass</span> <span class="n">objHouseOwner</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HouseOwnerClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;My Name is Shanu I like Lavender color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;My Name is Afraz I like Light Blue color&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouseOwner</span><span class="p">.</span><span class="n">BedRoom</span><span class="p">(</span><span class="s">&#34;SHANU&#34;</span><span class="p">,</span> <span class="s">&#34;Lavender&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_11.png"></a>
</figure>
<ul>
<li><strong>Method Overriding</strong></li>
</ul>
<p>The difference between the Method Overloading and Overriding are.In Method Overloading we will have same method name with different argument.
In Method Overriding we will have same Method Name same Argument and same type but method overriding can only be used in the derived class, Method Overriding cannot be done in the same class.
We will see how Method Overriding can be used in <strong>Abstract Method, Virtual Method and in Sealed Method</strong> kindly refer to that section in this article.</p>
<h3 id="10-abstract-classmethod">10. Abstract Class/Method</h3>
<ul>
<li>Abstract Class: Abstract class will have a keyword <code>abstract</code>.</li>
</ul>
<p>The Abstract class will be as a super class for all our class. Abstract class cannot be accessed by an object, which means we cannot create an object for an abstract class.</p>
<ul>
<li>What will happen when we create an object for an Abstract Class?</li>
</ul>
<p>Here we can see an error warning message as “An instance of an abstract class cannot be created” when I try to create an object for my abstract class.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_12.png"></a>
</figure>
<p>Abstract class can have both Abstract Method and normal Method. In Abstract Class at least one Abstract Method should be declared. In addition, derived class should override the abstract method. To access the abstract method we should use the “override” keyword in our derived class.</p>
<ul>
<li>What will happen if we create an abstract method but which is not override in derived class?</li>
</ul>
<p>Here we can see an abstract class has an abstract method, But the abstract method is not override in the derived class. See the below image for the warning message displaying as class must implement the abstract member.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_13.png"></a>
</figure>
<p>Here we can see an example of Abstract Class and for Abstract Method in detail.
In this example, we can see an abstract class, which has normal Method and Abstract Method. Abstract Methods; do not have body part in Abstract Class, which means we can only declare an Abstract Method at Abstract Class, There should be minimum one Abstract Method in an Abstract Class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">GuestVist</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">Guestwelcomemessage</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Welcome to our AbstractHome&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">GuestName</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Guest name is: Abstract&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">abstract</span> <span class="k">void</span> <span class="n">purposeofVisit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">// derived class to inherit the abstract class</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">A</span> <span class="p">:</span> <span class="n">GuestVist</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="n">purposeofVisit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Abstract just came for a Meetup and spend some time &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">A</span> <span class="n">objHouse</span> <span class="p">=</span> <span class="k">new</span> <span class="n">A</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouse</span><span class="p">.</span><span class="n">purposeofVisit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouse</span><span class="p">.</span><span class="n">Guestwelcomemessage</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouse</span><span class="p">.</span><span class="n">GuestName</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_14.png"></a>
</figure>
<h3 id="11-virtual-classmethod">11. Virtual Class/Method</h3>
<p>Virtual method is very useful in our day-to-day programming.</p>
<ul>
<li>What is virtual Method and what is the use of Virtual Method?</li>
</ul>
<p>Take our House example one guest confirms, as today total five persons will visit your home. For this, we write a function as message display as five Guest visiting our home. Once Guest visits, we see their total 20 persons have visited. In Some cases it might be increase or decrease we will come to know when they reach us.</p>
<p>In that case, the guest will be as a Separate Class and House will be as separate class. Without changing the message in Guest class how can we change the data in our Derived class?</p>
<ul>
<li>What is the Difference between Abstract Method and Virtual Method?</li>
</ul>
<p>Both similarities use the override keyword. Abstract Method can only be declared in Abstract Class, which means no body part for abstract method in Abstract class. However, for virtual it can have body part.</p>
<p>See the example program below. Here we have both Abstract Method and Virtual Method.</p>
<p>In Abstract class, the virtual method says as total five guests but in the derived Class program, the message was override as 20 guests. See the final output in below. Guess what will be displayed for Virtual Method? Will the result be 5 Guests or 20 Guests check for the output below the program.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">GuestVist</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">abstract</span> <span class="k">void</span> <span class="n">purposeofVisit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Abstract Method       </span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">virtual</span> <span class="k">void</span> <span class="n">NoofGuestwillvisit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Virtual Method     </span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Total 5 Guest will Visit your Home&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">AbstractHouseClass</span> <span class="p">:</span> <span class="n">GuestVist</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="n">purposeofVisit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Abstract method Override     </span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Abstract just for a Meetup and spend some time &#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="n">NoofGuestwillvisit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Virtual method override      </span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Total 20 Guest Visited our Home&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">AbstractHouseClass</span> <span class="n">objHouse</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AbstractHouseClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouse</span><span class="p">.</span><span class="n">purposeofVisit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">objHouse</span><span class="p">.</span><span class="n">NoofGuestwillvisit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_15.png"></a>
</figure>
<h3 id="12-sealed-classmethod">12. Sealed Class/Method</h3>
<p><strong>Sealed Class</strong>: </p>
<p>As name says this class cannot be inherited by other classes.</p>
<p>Take our House Example. In a house, the Houseowner can have a secret room, as might be official or financial rooms. The owner don’t want others to access his official room. The sealed class will be useful in those cases.
Sealed class can be declared using the keyword Sealed. If one class is declared as Sealed, it cannot be inherited in other derived classes.</p>
<ul>
<li>What will happen when we inherit sealed class in our derived class?</li>
</ul>
<p>Let’s see an example when I try to inherit my sealed class from my derived class. It shows me the below warning message.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_16.png"></a>
</figure>
<p>Here we can see an example program of Sealed Class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">sealed</span> <span class="k">class</span> <span class="nc">OwnerofficialRoom</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">AllMyPersonalItems</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;All Items in this rooms are personal to me no one else can access or inherit me&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HouseSealedClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">OwnerofficialRoom</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">OwnerofficialRoom</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">AllMyPersonalItems</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Sealed Method</strong>: </p>
<p>If we declared a method as sealed that specific method cannot be override in the derived class.</p>
<p>Let’s see our house class here I have base class with Virtual Method and virtual Sealed method.</p>
<p>The Virtual method can be override in the derived class .But the Virtual Sealed Method cannot be override in sealed class.</p>
<h3 id="13-static-classmethod">13. Static Class/Method</h3>
<p>We have already learned about what is Sealed Class in this Article; now let’s see what are Static Class and Static Method.
Both Static and Sealed Class cannot be inherited.</p>
<ul>
<li>What is the Difference between Static Class and Sealed Class?</li>
</ul>
<p>We can create an Object (instance) for the Sealed Class, we can see in my sealed class section I have created a sample Sealed class and in Main Method I have created an object to access the sealed Class. And in a Sealed Class both Static and non-Static methods can be written.</p>
<p>But for a Static Class it’s not possible to create an Object. In Static Class only Static members are allowed which means in a static Class it’s not possible to write non-static method.</p>
<p>We can say our main method as an example for the Static method. When we create a console application in c# we can see each class will have a default main method. In my article I have explained that when an Console or Windows application start execute first the main method will be executed .There is no need to create an object for the main method since it was been declared as a static method.</p>
<p><code>static void Main(string[] args)</code></p>
<p>Another interesting one in Static class is that memory will be allocated for all static variable and methods during execution but for the non static variable and methods memory will be allocated only when the object for the class are created.
Let’s take our same sealed class Example for our static Class and method.</p>
<ul>
<li>What will happen when we inherit Static class in our derived class?</li>
</ul>
<p>Let’s see an example when I try to inherit my static class from my derived class. It shows me the below warning message.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_17.png"></a>
</figure>
<ul>
<li>What will happen when we declare non-Static method in a Static class?</li>
</ul>
<p>Let’s see an example when I try to create a non-Static method at my Static Class.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_18.png"></a>
</figure>
<ul>
<li>What will happen when we create an object for the Static class?</li>
</ul>
<p>Let’s see an example when I try to create an object for my Static Class.</p>
<figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_19.png"></a>
</figure>
<p>When we run the program we get the error message as <em>Can not create an instance of a static class</em></p>
<ul>
<li>How to call the Static Class Method and variable without creating the Object?</li>
</ul>
<p>It’s simple just we can use the <strong>ClassName.Variable or Method Name</strong> for example <code>OwnerofficialRoom.AllMyPersonalItems();</code>
See the below example with Static class</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">OwnerofficialRoom</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">AllMyPersonalItems</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;All Items in this rooms are personal to me no one else can access or inherit me&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HouseStaticClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">OwnerofficialRoom</span><span class="p">.</span><span class="n">AllMyPersonalItems</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Is that possible to create a Static Method in non-Static Class?</li>
</ul>
<p>The answer is yes. We can create a Static Method to the non Static class. No need to create an object to access the static method in non-static class. We can directly use the class name to access the Static method.
See the below example with Static method in non-static Class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">OwnerofficialRoom</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">AllMyPersonalItems</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;No need to create object for me just use my class name to access me :)&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">non_staticMethod</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;You need to create an Object to Access Me :(&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">StaticmethodClass</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// for statci method no need to create object just call directly using the classname.       </span>
</span></span><span class="line"><span class="cl">        <span class="n">OwnerofficialRoom</span><span class="p">.</span><span class="n">AllMyPersonalItems</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// for non-static method need to create object to access the method.      </span>
</span></span><span class="line"><span class="cl">        <span class="n">OwnerofficialRoom</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">OwnerofficialRoom</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">non_staticMethod</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_20.png"></a>
</figure>
<h3 id="14-interface">14. Interface</h3>
<p>Interface is same like abstract class but in Interface we will have only method declaration but in abstract class we can have both method declaration and method definition .Methods of Interface must be implemented in a implementing class.</p>
<p>See the below Example program for an Interface. All the methods of Interface have been implemented in the class. As I have already told you that c# don’t support multiple inheritance for using multiple inheritance we can use Interface.</p>
<p>This below program is an example for multiple inheritance using Interface.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">interface</span> <span class="nc">GuestInterface</span> <span class="p">{</span> <span class="k">void</span> <span class="n">GuestWelcomeMessage</span><span class="p">();</span> <span class="k">void</span> <span class="n">NoofGuestes</span><span class="p">();</span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">interface</span> <span class="nc">FriendsandRelationsInterface</span> <span class="p">{</span> <span class="k">void</span> <span class="n">friendwelcomemessage</span><span class="p">();</span> <span class="k">void</span> <span class="n">FriendName</span><span class="p">();}</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HouseOwnerClass</span> <span class="p">:</span> <span class="n">GuestInterface</span><span class="p">,</span> <span class="n">FriendsandRelationsInterface</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">GuestWelcomeMessage</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;All guests are well come to our home&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">NoofGuestes</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Total 15 Guestes has visited&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">friendwelcomemessage</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Welcome to our Home&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">void</span> <span class="n">FriendName</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Friend  name is: Afraz&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">HouseOwnerClass</span> <span class="n">obj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HouseOwnerClass</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">GuestWelcomeMessage</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">NoofGuestes</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">friendwelcomemessage</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span><span class="p">.</span><span class="n">FriendName</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure class='center '>
  <a href="/imagesposts/basic-c-oop-concept_21.png"></a>
</figure>
<p>In some cases we need to have certain methods which will be used in many derived classes. Each derived can implement different functionality for those Methods. In These cases, we can use the Interface.
We can say our Guest and house example. For Guest the <code>Welcome Message</code> and <code>No of Guest</code> Function are common, but it will be different for different owners in the same house, Guest might a fathers guest, Mothers Guest, Children’s Guest or Family Guest. Each guest can have different welcome message subject, but the functions are same as Message .let’s consider now Father is a Class, Mother is a class and Children are one Class. Both guestWelcome Message and Noofguest method are same for all. In this case, we can create an Interface and declare both methods in the Interface. All father, mother and Children Classes can inherit the interface and write their own method details.</p>
<p>Interface is similar to Abstract class but the major difference between the Abstract Class and the Interface are .In Abstract Class there can be both Abstract Method and Non Abstract methods .But in Interface all methods are abstract by default which means there is no non Abstract type method in the Interface. All the Methods declared in Interface should be override in the derived class.</p>
<p><strong>What will happen when non-abstract methods with body part are declared in an Interface?</strong>
It will display the warning message as <code>unexpected modifier</code> in Access modifier part and <code>Unexpected Method body</code> error warning at message Body.</p>
<p>This article repost from <a href="http://www.c-sharpcorner.com/UploadFile/asmabegam/basic-concept-of-oop-in-C-Sharp" target="_blank" rel="noopener noreffer ">here</a> under markdown format. Thank you!</p>]]></description>
</item>
<item>
    <title>How to create main menu in Dynamics AX 2012</title>
    <link>https://nuxulu.com/2017-03-29-how-to-create-main-menu-in-dynamics-ax-2012/</link>
    <pubDate>Wed, 29 Mar 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-03-29-how-to-create-main-menu-in-dynamics-ax-2012/</guid>
    <description><![CDATA[<p>All main entry points to the UI and reports are access though the menu structure. This is presented in three ways: the left-hand navigation pane, the content area, and the navigation bar (at the top of the client). The menu design is controlled from the Menus node in the AOT.</p>
<p>Each module will have a menu, which is created by adding a menu reference (or shortcut) to the main menu:</p>
<figure class='center '>
  <a href="/imagesposts/reference_menu.png"></a>
  <figcaption></figcaption>
</figure>
<p>This matches the list of modules shown in the client&rsquo;s left-hand navigation pane.</p>
<h4 id="create-menu-in-aot">Create Menu in AOT</h4>
<ol>
<li>
<p>Open your project.</p>
</li>
<li>
<p>Right-click on the <strong>Menus node</strong> and select <strong>New</strong> &gt; <strong>Menu</strong>.</p>
</li>
<li>
<p>Rename the menu as <strong>YourMainMeunuName</strong> and open the property sheet.</p>
</li>
<li>
<p>For Porperties of created Menu:</p>
<p>. Enter the <strong>label</strong> and create a label.</p>
<p>. As this menu will be a module with company-specifc information, set the <strong>SetCompany</strong> property to Yes.</p>
<p>. Choose the icons in the <strong>NormalImage</strong> property and set <strong>ImageLocation</strong> to EmbeddedResource.</p>
</li>
<li>
<p>Create <strong>Submenu</strong>, by right-clicking on the menu and navigating to <strong>New | Submenu</strong>.</p>
</li>
</ol>
<h4 id="finally-we-need-to-add-our-menu-as-a-module-to-the-main-menu-which-is-done-as-follows">Finally, we need to add our menu as a module to the main menu, which is done as follows:</h4>
<ol>
<li>
<p>Place the AOT window next to our project window (if required, open the AOT window by pressing Ctrl + D).</p>
</li>
<li>
<p>Scroll down to Menus and expand MainMenu.</p>
</li>
<li>
<p>Right-click on <strong>MainMenu</strong> and navigate to <strong>New &gt; Menu reference</strong>.</p>
</li>
<li>
<p>This opens a new window titled Select: Menus. Locate <strong>your menu</strong> and drag it to <strong>MainMenu</strong>, as shown in the following screenshot (the title changes from Select: Menus to the path of the select node when you click on it):</p>
</li>
</ol>
<figure class='center '>
  <a href=""></a>
  <figcaption></figcaption>
</figure>
<p><em>Note: Do not drag the menu from your project!</em></p>
<p>Save AOT and you can check new menu on AX client.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Number sequence farmework overview in Dynamics AX 2012</title>
    <link>https://nuxulu.com/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</link>
    <pubDate>Thu, 19 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</guid>
    <description><![CDATA[<figure class='center '>
  <a href="/imagesposts/number-sequence-overview.png"></a>
</figure>
<p>For this demo, I will create New module along with NumberSequence, about creating Number Sequence <em>without</em> module you also use same steps just leave some steps base on Design picture above.</p>
<h2 id="etd">ETD</h2>
<p>Create ETD <code>ContosoId</code> extends <code>num</code> datatype.</p>
<h2 id="table">Table</h2>
<p>Create <code>Contoso</code> Table with <code>ContosoId</code> field.</p>
<h2 id="enum">Enum</h2>
<p>Create a new enum value <code>Contoso</code> in BaseEnum <code>NumberSeqModule</code>.</p>
<p>This value will be used to link number sequence to the module and to restrict displayed number sequence by module in Form.</p>
<h2 id="numberseqmodule-class">NumberSeqModule Class</h2>
<p>Create <code>NumberSeqModuleXXX</code> class</p>
<p>Create a new <code>NumberSeqModuleXXX</code> class, such as <code>NumberSeqModuleContoso</code>, which extends the <code>NumberSeqApplicationModule</code> class. The sample code for creating this class is as follows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">NumberSeqModuleContoso</span> <span class="n">extends</span> <span class="n">NumberSeqApplicationModule</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">void</span> <span class="n">loadModule</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqDatatype</span> <span class="n">datatype</span> <span class="p">=</span> <span class="n">NumberSeqDatatype</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Contoso Id */</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmDatatypeId</span><span class="p">(</span><span class="n">extendedtypenum</span><span class="p">(</span><span class="n">ContosoId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmReferenceHelp</span><span class="p">(</span><span class="s">&#34;ContosoId&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmWizardIsContinuous</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmWizardIsManual</span><span class="p">(</span><span class="n">NoYes</span><span class="p">::</span><span class="n">No</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmWizardIsChangeDownAllowed</span><span class="p">(</span><span class="n">NoYes</span><span class="p">::</span><span class="n">No</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmWizardIsChangeUpAllowed</span><span class="p">(</span><span class="n">NoYes</span><span class="p">::</span><span class="n">No</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">parmWizardHighest</span><span class="p">(</span><span class="m">999999</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">datatype</span><span class="p">.</span><span class="n">addParameterType</span><span class="p">(</span><span class="n">NumberSeqParameterType</span><span class="p">::</span><span class="n">DataArea</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">this</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">datatype</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">NumberSeqModule</span> <span class="n">numberSeqModule</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">NumberSeqModule</span><span class="p">::</span><span class="n">Contoso</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Use of the <code>DataArea</code> segment in <em>Step 4</em> to describe the default segment for the extended data types used for <code>ContosoId</code>.</p>
<p>Note In <strong>Microsoft Dynamics AX 2009</strong>, number sequence references could be initialized by restarting the Application Object Server (AOS). In <strong>Microsoft Dynamics AX 2012</strong>, the initialization of references to populate the <code>NumberSequenceDatatype</code> and <code>NumberSequenceParameterType</code> tables has moved to the initialization checklist. To initialize the newly created references, run a job that executes the <code>LoadModule</code> method likes below.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">loadNumSeq</span> <span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//define the class variable</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqModuleContoso</span> <span class="n">seqMod</span> <span class="p">=</span> <span class="k">new</span> <span class="n">NumberSeqModuleContoso</span> <span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//load the number sequences that were not generated</span>
</span></span><span class="line"><span class="cl">	<span class="n">seqMod</span><span class="p">.</span><span class="n">load</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can also reinitialize all references by running a job that executes the <code>LoadAll</code> method in the <code>NumberSequenceModuleSetup</code> class. However, for reinitializing all references, you must ensure that there are no existing number sequences already defined in the system.</p>
<p>Then run the wizard in <em>Organization Administration &gt; CommonForms &gt; Numbersequences &gt; Numbersequences &gt; Generate &gt; run the wizard</em>.</p>
<h2 id="parameters-table-and-form">Parameters Table and Form</h2>
<p>Create a Number sequences page in the parameters form of the new module.</p>
<p>You need to Create <code>ContosoParameters</code> Table along with form, See existing forms such as <code>CustParameters</code> or <code>LedgerParameters</code> for examples of the implementation.</p>
<p><em>These forms are using <strong>DetailsFormMaster</strong> form parten as Best Practice for Setup form.</em></p>
<h3 id="create-contosoparameters-table">Create <code>ContosoParameters</code> Table</h3>
<ul>
<li>
<p>Add field key, Extends from <code>ParametersKey</code></p>
</li>
<li>
<p>Properties on Field key Visible = false, AllowEdit = false, AllowEditOnCreate = false</p>
</li>
<li>
<p>Create index name Key with AllowDuplicate = No.</p>
</li>
<li>
<p>Set table properties.</p>
</li>
<li>
<p>TableContent = Default data</p>
</li>
<li>
<p>ConfigurationKey</p>
</li>
<li>
<p>CacheLookup = Found</p>
</li>
<li>
<p>TableGroup = Parameter</p>
</li>
<li>
<p>PrimaryKey = Key</p>
</li>
<li>
<p>ClusterKey = Key</p>
</li>
</ul>
<p>The sample code for creating method this table as below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">void</span> <span class="n">delete</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="s">&#34;@SYS23721&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">initValue</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Key is set to mandatory so set it to 1</span>
</span></span><span class="line"><span class="cl">	<span class="k">this</span><span class="p">.</span><span class="n">Key</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">ContosoParameters</span> <span class="n">find</span><span class="p">(</span><span class="n">boolean</span> <span class="n">_forupdate</span> <span class="p">=</span> <span class="k">false</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">ContosoParameters</span> <span class="n">parameter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">_forupdate</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">parameter</span><span class="p">.</span><span class="n">selectForUpdate</span><span class="p">(</span><span class="n">_forupdate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">select</span> <span class="n">firstonly</span> <span class="n">RecId</span> <span class="k">from</span> <span class="n">parameter</span>
</span></span><span class="line"><span class="cl">		<span class="k">where</span> <span class="n">parameter</span><span class="p">.</span><span class="n">Key</span> <span class="p">==</span> <span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(!</span><span class="n">parameter</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">parameter</span><span class="p">.</span><span class="n">isTmp</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Company</span><span class="p">::</span><span class="n">createParameter</span><span class="p">(</span><span class="n">parameter</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">parameter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">client</span> <span class="n">server</span> <span class="k">static</span> <span class="n">NumberSeqModule</span> <span class="n">numberSeqModule</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">NumberSeqModule</span><span class="p">::</span><span class="n">Contoso</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">server</span> <span class="k">static</span> <span class="n">NumberSequenceReference</span> <span class="n">numRefContosoId</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqScopeFactory</span><span class="p">::</span><span class="n">CreateDataAreaScope</span><span class="p">(</span><span class="n">curext</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">NumberSeqReference</span><span class="p">::</span><span class="n">findReference</span><span class="p">(</span><span class="n">extendedtypenum</span> <span class="p">(</span><span class="n">ContosoId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="create-contosoparameters-form">Create <code>ContosoParameters</code> form</h3>
<p>Note This form can only be used for references that have a scope of DataArea. The administration forms described in the Setup and Administration of number sequences section can be used for references that have any scope. These forms can be found in <em>Organization Administration &gt; Common &gt; Number Sequences</em></p>
<p>The data source of Parameters form likes picture below, you can also refer to <code>CustParameters</code> form for design.</p>
<figure class='center '>
  <a href="/imagesposts/ContosoParameters.png"></a>
</figure>
<p>Code example for form methods:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">FormRun</span> <span class="n">extends</span> <span class="n">ObjectRun</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqReference</span>          <span class="n">numberSeqReference</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">boolean</span>                     <span class="n">runExecuteDirect</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">TmpIdRef</span>                    <span class="n">tmpIdRef</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqScope</span>              <span class="n">scope</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqApplicationModule</span>  <span class="n">numberSeqApplicationModule</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">container</span>                   <span class="n">numberSequenceModules</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">void</span> <span class="k">init</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">this</span><span class="p">.</span><span class="n">numberSeqPreInit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">ContosoParameters</span><span class="p">::</span><span class="n">find</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">this</span><span class="p">.</span><span class="n">numberSeqPostInit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">void</span> <span class="n">numberSeqPostInit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">numberSequenceReference_ds</span><span class="p">.</span><span class="kt">object</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">NumberSequenceReference</span><span class="p">,</span> <span class="n">AllowSameAs</span><span class="p">)).</span><span class="n">visible</span><span class="p">(</span><span class="n">numberSeqApplicationModule</span><span class="p">.</span><span class="n">sameAsActive</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">referenceSameAsLabel</span><span class="p">.</span><span class="n">visible</span><span class="p">(</span><span class="n">numberSeqApplicationModule</span><span class="p">.</span><span class="n">sameAsActive</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">void</span> <span class="n">numberSeqPreInit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">runExecuteDirect</span>            <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">numberSequenceModules</span>       <span class="p">=</span> <span class="p">[</span><span class="n">NumberSeqModule</span><span class="p">::</span><span class="n">Contoso</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">numberSeqApplicationModule</span>  <span class="p">=</span> <span class="k">new</span> <span class="n">NumberSeqModuleContoso</span> <span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">scope</span>                       <span class="p">=</span> <span class="n">NumberSeqScopeFactory</span><span class="p">::</span><span class="n">createDataAreaScope</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqApplicationModule</span><span class="p">::</span><span class="n">createReferencesMulti</span><span class="p">(</span><span class="n">numberSequenceModules</span><span class="p">,</span> <span class="n">scope</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">tmpIdRef</span><span class="p">.</span><span class="n">setTmpData</span><span class="p">(</span><span class="n">NumberSequenceReference</span><span class="p">::</span><span class="n">configurationKeyTableMulti</span><span class="p">(</span><span class="n">numberSequenceModules</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Code example for <code>NumberSequenceReference</code> data source methods</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">void</span> <span class="n">removeFilter</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">runExecuteDirect</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">numbersequenceReference_ds</span><span class="p">.</span><span class="n">executeQuery</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">void</span> <span class="n">executeQuery</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">runExecuteDirect</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">else</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">runExecuteDirect</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="p">.</span><span class="n">queryRun</span><span class="p">(</span><span class="n">NumberSeqReference</span><span class="p">::</span><span class="n">buildQueryRunMulti</span><span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">tmpIdRef</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">numberSequenceTable</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">numberSequenceModules</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">scope</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">		<span class="n">numbersequenceReference_ds</span><span class="p">.</span><span class="n">research</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="how-to-use-on-table">How to use on Table</h2>
<p>Set number sequence in Contoso Table</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">private</span> <span class="k">void</span> <span class="n">setContosoId</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeq</span> <span class="n">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSequenceReference</span> <span class="n">numberSequenceReference</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">numberSequenceReference</span> <span class="p">=</span> <span class="n">CVRParameters</span><span class="p">::</span><span class="n">numRefContosoId</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">num</span> <span class="p">=</span> <span class="n">NumberSeq</span><span class="p">::</span><span class="n">newGetNum</span><span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="p">.</span><span class="n">Id</span> <span class="p">=</span> <span class="n">num</span><span class="p">.</span><span class="n">num</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Optional method – in case you don’t want to expose Number sequence on Form Level</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">initValue</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Initialise the title id</span>
</span></span><span class="line"><span class="cl">	<span class="k">this</span><span class="p">.</span> <span class="n">setContosoId</span> <span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">insert</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span><span class="p">(!</span><span class="k">this</span><span class="p">.</span><span class="n">Id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="p">.</span> <span class="n">setContosoId</span> <span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>From now on you can create new record in Contoso Table with number sequence.</p>
<h2 id="how-to-use-on-form">How to use on Form</h2>
<p>How to use on form level (In case you don’t want to expose NS in Table Level)</p>
<ul>
<li>In the class declaration of the form that will be accessing data, add a variable declaration for the number sequence handler. The following example shows the variable definition for a number sequence handler.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">FormRun</span> <span class="n">extends</span> <span class="n">ObjectRun</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeqFormHandler</span> <span class="n">numberSeqFormHandlerContosoId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Add the <code>NumberSeqFormHandler</code> method to the form. The code in this method will create an instance of the number sequence form handler and return it.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="n">NumberSeqFormHandler</span> <span class="n">numSeqFormHandlerContosoId</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(!</span><span class="n">numberSeqFormHandlerContosoId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">numberSeqFormHandlerContosoId</span> <span class="p">=</span> <span class="n">NumberSeqFormHandler</span><span class="p">::</span><span class="n">newForm</span><span class="p">(</span><span class="n">ContosoParameters</span><span class="p">::</span> <span class="n">numRefContosoId</span><span class="p">().</span><span class="n">NumberSequenceId</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">element</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">Contoso_ds</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">															 <span class="n">fieldNum</span><span class="p">(</span><span class="n">Contoso</span><span class="p">,</span> <span class="n">ContosoId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">															<span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">numberSeqFormHandlerContosoId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Add <strong>create, delete, and write</strong> methods to the data source of the table that contains the field for which the number sequence is being used. The following code examples show these methods that are added to the data source for the Contoso table to support the number sequence for the <code>ContosoId</code> field.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">create</span><span class="p">(</span><span class="n">boolean</span> <span class="n">_append</span> <span class="p">=</span> <span class="k">false</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//before create, (ensure the number seuence has not run out of numbers)</span>
</span></span><span class="line"><span class="cl">	<span class="n">element</span><span class="p">.</span><span class="n">numSeqFormHandlerContosoId</span><span class="p">().</span><span class="n">formMethodDataSourceCreatePre</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// start: inherited table code</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// we need to let the create happen so the user can</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// choose the type</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">(</span><span class="n">_append</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//number sequence, create action, (get next number)</span>
</span></span><span class="line"><span class="cl">	<span class="n">element</span><span class="p">.</span><span class="n">numSeqFormHandlerContosoId</span><span class="p">().</span><span class="n">formMethodDataSourceCreate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">delete</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//release the number sequence value.</span>
</span></span><span class="line"><span class="cl">	<span class="n">element</span><span class="p">.</span> <span class="n">numSeqFormHandlerContosoId</span><span class="p">().</span><span class="n">formMethodDataSourceDelete</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//delete the record</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">write</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">element</span><span class="p">.</span> <span class="n">numSeqFormHandlerContosoId</span><span class="p">().</span><span class="n">formMethodDataSourceWrite</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">boolean</span> <span class="n">validateWrite</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">boolean</span>         <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">ret</span> <span class="p">=</span> <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">ret</span> <span class="p">=</span> <span class="n">element</span><span class="p">.</span><span class="n">numberSeqFormHandler</span><span class="p">().</span><span class="n">formMethodDataSourceValidateWrite</span><span class="p">(</span><span class="n">ret</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">ret</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Contoso</span><span class="p">.</span><span class="n">validateWrite</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">Link</span> <span class="n">Active</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">linkActive</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">element</span><span class="p">.</span><span class="n">numberSeqFormHandler</span><span class="p">().</span><span class="n">formMethodDataSourceLinkActive</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="optional-method">Optional method</h2>
<p>Continuous sequence</p>
<p>To avoid having gaps for continuous sequence you should add this code to the delete of the table.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">delete</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeq</span><span class="p">::</span><span class="n">releaseNumber</span><span class="p">(</span><span class="n">ContosoParameters</span><span class="p">::</span><span class="n">numRefContosoId</span><span class="p">().</span><span class="n">NumberSequenceId</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">ContosoId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="testing">Testing</h2>
<p>Testing Number sequence by Job</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">Max_numberSeqRefCustAccount</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSequenceReference</span> <span class="n">numberSeqRefCustAccount</span> <span class="p">=</span> <span class="n">CustParameters</span><span class="p">::</span><span class="n">numRefCustAccount</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">NumberSeq</span>               <span class="n">numSeqCustAccount</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="c1">//Use the TTS level to decide whether sequence is consumed or not.</span>
</span></span><span class="line"><span class="cl">		<span class="n">ttsBegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="p">(</span><span class="n">numberSeqRefCustAccount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="n">numSeqCustAccount</span> <span class="p">=</span> <span class="n">NumberSeq</span><span class="p">::</span><span class="n">newGetNum</span><span class="p">(</span><span class="n">numberSeqRefCustAccount</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="p">(</span><span class="n">numSeqCustAccount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="n">info</span><span class="p">(</span><span class="n">numSeqCustAccount</span><span class="p">.</span><span class="n">num</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="n">ttsCommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">Error</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">	   <span class="n">info</span><span class="p">(</span><span class="s">&#34;Caught &#39;Exception::Error&#39;.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Overview delete action in Dyanmics AX 2012</title>
    <link>https://nuxulu.com/2017-01-19-overview-delete-action-in-dyanmics-ax-2012/</link>
    <pubDate>Thu, 19 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-19-overview-delete-action-in-dyanmics-ax-2012/</guid>
    <description><![CDATA[<p>We normally create action delete in foreign table to make sure referential integrity in Logic and validation.</p>
<p>The delete action has the following options: <strong>None, Restricted, Cascade, Cascade + Restricted</strong></p>
<h4 id="none">None:</h4>
<p>This has no effect, and effectively disables the delete action. This is useful if you want to specifically state <em>do nothing</em> so that someone else doesn&rsquo;t try to correct what seems to be an omission.</p>
<h4 id="restricted">Restricted:</h4>
<p>This will prevent the record from being deleted if there are records in the related table that match the selected relation. This occurs within the <code>validateDelete</code> table event, which is called by the delete table event.</p>
<h4 id="cascade">Cascade:</h4>
<p>This will delete the record in the related table, based on the relation. Ex: A sales order line is of no use without a sales order. This is an extension of the delete table event.</p>
<h4 id="cascade--restricted">Cascade + Restricted</h4>
<p>This is a little special. In a two-table scenario, it is the same as <em>Restricted</em>. It will stop the record from being deleted if a related record exists. But if the record is being deleted as part of a cascade from a table related to it, the records will be deleted.</p>
<p>for more infomation about how to create <code>DeleteActions</code> at <a href="http://msdn.microsoft.com/enus/library/bb315018.aspx" target="_blank" rel="noopener noreffer ">MSDN</a>.</p>]]></description>
</item>
<item>
    <title>Handle AIF error messages in dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>Normally, when we consume AIF Service, we use this code like below to handle Error messages</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">client</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">contract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;items registed on Trans Id: &#34;</span> <span class="p">+</span> <span class="n">contract</span><span class="p">.</span><span class="n">InventTransId</span> <span class="p">+</span> <span class="s">&#34; with &#34;</span> <span class="p">+</span> <span class="n">contract</span><span class="p">.</span><span class="n">Qty</span> <span class="p">+</span> <span class="s">&#34; quantities.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Ex: {0}&#34;</span><span class="p">,</span> <span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If it cause error, message would return like this</p>
<p></p>
<p>If you want to know more details, you have to go In Dynamics ax <strong>AIF Exceptions form</strong> then check</p>
<p></p>
<p>It&rsquo;s quite hard for 3rd party developer, especially they don&rsquo;t have right to access AX server.</p>
<p>Anyway, we can get meaningful error message by doing below steps</p>
<ul>
<li>Check that box in AIF inbound ports</li>
</ul>
<p></p>
<ul>
<li>Use <code>FaultException</code> class to get message</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">client</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">contract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;items registed on Trans Id: &#34;</span> <span class="p">+</span> <span class="n">contract</span><span class="p">.</span><span class="n">InventTransId</span> <span class="p">+</span> <span class="s">&#34; with &#34;</span> <span class="p">+</span> <span class="n">contract</span><span class="p">.</span><span class="n">Qty</span> <span class="p">+</span> <span class="s">&#34; quantities.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">ServiceModel</span><span class="p">.</span><span class="n">FaultException</span><span class="p">&lt;</span><span class="n">ItemsRegistration</span><span class="p">.</span><span class="n">RegRef</span><span class="p">.</span><span class="n">AifFault</span><span class="p">&gt;</span> <span class="n">aifFault</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//FaultMessageList[] list = aifFault.Detail.FaultMessageListArray[0];</span>
</span></span><span class="line"><span class="cl">	<span class="n">InfologMessage</span><span class="p">[]</span> <span class="n">list</span> <span class="p">=</span> <span class="n">aifFault</span><span class="p">.</span><span class="n">Detail</span><span class="p">.</span><span class="n">InfologMessageList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">foreach</span> <span class="p">(</span><span class="n">InfologMessage</span> <span class="n">message</span> <span class="k">in</span> <span class="n">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">message</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>what we got</p>
<p></p>
<p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>How to create HTTP adapter port</title>
    <link>https://nuxulu.com/2017-01-12-how-to-create-http-adapter-port/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-12-how-to-create-http-adapter-port/</guid>
    <description><![CDATA[<p>We normally use <code>NETTCP</code> adapter for .NET system, It going to very easy to consume by.</p>
<p>As my experience, if we use <code>NETTCP</code> adapter for consuming by Java system, we will need add some extension or 3rd party due to binding and mismatch schema and of course client doesn’t want to do that either me.</p>
<p>So, my solution is creating HTTP adapter for Java, you can also use .NET system to consume HTTP adapter without any problems</p>
<h3 id="how-to-do">How to do</h3>
<ul>
<li>You need to make sure install web services component on Internet Information Services (IIS) and verify that the default website is working.</li>
</ul>
<p></p>
<ul>
<li>In AX, under System administrator &gt; Services and AIF &gt; Web sites, open from a create new record follow information</li>
</ul>
<p>Name: <code>DynamicsAXAif60</code>
Virtual directory share path: <code>\\YourServerName\MicrosoftDynamicsAXAif60</code>
URL: <code>http://YourServerName/MicrosoftDynamicsAXAif60</code></p>
<ul>
<li>From now on, you can create AIF inbound port with <strong>HTTP adapter</strong>.</li>
</ul>
<p></p>
<p>After you&rsquo;ve actived the services, that Port will deployed under <code>DynamicsAXAif60</code> folder in IIS.</p>
<p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>Response in AIF custom service class</title>
    <link>https://nuxulu.com/2017-01-12-respone-in-aif-custom-service-class/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-12-respone-in-aif-custom-service-class/</guid>
    <description><![CDATA[<p>At the previous <a href="../2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3" rel="">post</a> I already show how to customize Response Value list in AIF Document standard service, today we will talk about response in Custom AIF service class.</p>
<p>We already know for Custom AIF service we actually need 2 classes, one is <code>contract</code> for data input and one is <code>service</code> to process a logic. With <code>Response</code> class, it&rsquo;s literally same with <code>contract</code> class. They both hold parm value.</p>
<ul>
<li>
<p><strong><code>contract</code> class</strong> gets parametters.</p>
</li>
<li>
<p><strong><code>Response</code> class</strong> sets return values.</p>
</li>
</ul>
<h3 id="scenario">Scenario</h3>
<p>I want to get <code>HcmPersonnelNumberId</code> and <code>HcmWorkerName</code> of current userID on C#.NET application.</p>
<h3 id="solution">Solution</h3>
<ul>
<li>
<p>Write Custom AIF service to get Worker information, and then public this service.</p>
</li>
<li>
<p>Write C#.NET console to consume that service.</p>
</li>
</ul>
<h3 id="walkthrough">Walkthrough</h3>
<h4 id="response-class">Response class</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="na">[DataContractAttribute]</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">MaxWorkerResponse</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>     <span class="n">gId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>     <span class="n">gName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>two value that I want to return is <code>HcmPersonnelNumberId</code> and <code>HcmWorkerName</code>, I will store it in 2 parms method</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="na">[DataMemberAttribute(&#39;HcmWorkerName&#39;)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">HcmWorkerName</span> <span class="n">parmName</span><span class="p">(</span><span class="n">HcmWorkerName</span> <span class="n">_name</span> <span class="p">=</span> <span class="n">gName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">gName</span> <span class="p">=</span> <span class="n">_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">gName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="na">
</span></span></span><span class="line"><span class="cl"><span class="na">[DataMemberAttribute(&#39;HcmPersonnelNumberId&#39;)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">HcmPersonnelNumberId</span> <span class="n">parmId</span><span class="p">(</span><span class="n">HcmPersonnelNumberId</span> <span class="n">_id</span> <span class="p">=</span> <span class="n">gId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">gId</span> <span class="p">=</span> <span class="n">_id</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">gId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="service-class">Service class</h4>
<p>Create <code>MaxPRService</code> Class, This class consume through service that need to be extend <code>SysOperationServiceBase</code> class</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">MaxPRService</span> <span class="n">extends</span> <span class="n">SysOperationServiceBase</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Main logic</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="na">[SysEntryPointAttribute(true),
</span></span></span><span class="line"><span class="cl"><span class="na">AifCollectionTypeAttribute(&#39;return&#39;, Types::String)]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">MaxWorkerResponse</span> <span class="n">getEmployee</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">HcmWorkerRecId</span>          <span class="n">workerRecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">HcmPersonnelNumberId</span>    <span class="n">personnelNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">HcmWorkerName</span>           <span class="n">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MaxWorkerResponse</span>       <span class="n">response</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">workerRecId</span> <span class="p">=</span> <span class="n">DirPersonUser</span><span class="p">::</span><span class="n">currentWorker</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">personnelNumber</span> <span class="p">=</span> <span class="n">HcmWorker</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">workerRecId</span><span class="p">).</span><span class="n">PersonnelNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">name</span> <span class="p">=</span> <span class="n">HcmWorker</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">workerRecId</span><span class="p">).</span><span class="n">name</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MaxWorkerResponse</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">response</span><span class="p">.</span><span class="n">parmId</span><span class="p">(</span><span class="n">personnelNumber</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">response</span><span class="p">.</span><span class="n">parmName</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">response</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="create-service">Create service</h4>
<p>In AOT create new service and add recent created class to that Service, in operations node add <code>getEmployee</code> method, you will get something likes</p>
<p></p>
<p>Then right click service &gt; Add-ins &gt; Register Service.</p>
<p>go to AIF inbound form to create new service and add <code>getEmployee</code> operation to that service then Active.</p>
<h4 id="consume-service">Consume service</h4>
<p>Add recent WSDL URI <code>http://WINSERVER:8104/DynamicsAx/Services/MaxPurchReqGeneral</code> into Service reference in C# Console project</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">CallContext</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;USMF&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;EN-US&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	<span class="n">MaxPRServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MaxPRServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">MaxWorkerResponse</span> <span class="n">response</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">getEmployee</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">HcmWorkerName</span> <span class="p">+</span> <span class="s">&#34;, &#34;</span> <span class="p">+</span> <span class="n">response</span><span class="p">.</span><span class="n">HcmPersonnelNumberId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>AIF Custom response value in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</link>
    <pubDate>Wed, 11 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>For this demonstration, I use AIF service to create Sales order with <code>SalesSalesOrderService</code> and I gonna consume AIF using C#.NET.</p>
<p>Normally, in consume service application we handle return value by using <code>EntityKeyList</code>, <code>EntityKey</code>, <code>KeyData[0].Value</code>. And for Sales Order It will return Created SalesID.</p>
<p>Let&rsquo;s take a look on <code>AxdSalesOrder</code> class. More about <code>Axd</code> class please prefer <a href="https://technet.microsoft.com/en-us/library/aa862063.aspx" target="_blank" rel="noopener noreffer ">this</a>.</p>
<p>Then go to <code>createList</code> method, this method will handle response value</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="n">AifEntityKeyList</span> <span class="n">createList</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifDocumentXml</span>                  <span class="n">_xml</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEndpointActionPolicyInfo</span>     <span class="n">_actionPolicyInfo</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifConstraintListCollection</span>     <span class="n">_constraintListCollection</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEntityKeyList</span> <span class="n">aifEntityKeyList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">aifEntityKeyList</span> <span class="p">=</span> <span class="n">super</span><span class="p">(</span><span class="n">_xml</span><span class="p">,</span> <span class="n">_actionPolicyInfo</span><span class="p">,</span> <span class="n">_constraintListCollection</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Sales orders are committed - master planning explosion can be executed and confirmed dates be set</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="n">postSalesOrderCreation</span><span class="p">(</span><span class="n">aifEntityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">aifEntityKeyList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>So, how about customer wants another meaning value beside <code>SalesID</code> likes <code>InventTransId</code> information in <code>SalesLine</code> table or another tables base on your requirement. To do that, we need to customize this method.</p>
<h3 id="how-to-do">How to do</h3>
<p>I will use <code>Map</code> and <code>MapEnumerator</code> classes (Please refer MSDN to understand these class), this is steps:</p>
<ol>
<li>We get the <code>SalesId</code> from the original <code>entityKeyList</code> and add into <code>Map</code>.</li>
<li>add <code>Map</code> to <code>MapEnumerator</code>.</li>
<li>Use <code>SalesId</code> to find the sales line. (<code>mapEnumerator.currentValue()</code> can get current <code>SalesID</code>).</li>
<li>Create a new <code>entityKey</code> and insert the sales line information to this <code>entityKey</code>.</li>
<li>add back <code>entityKey</code> to <code>entityKeyList</code></li>
</ol>
<p>From here in <code>entityKeyList</code> will store information of <code>SalesID</code> and List fields of <code>SalesLine</code> table.</p>
<p>Here is the code for <code>createList</code> method, beside <code>SalesId</code> I will try to get <code>InventTransId</code> in <code>SalesLine</code> Table</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">AifEntityKeyList</span> <span class="n">createList</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifDocumentXml</span>                  <span class="n">_xml</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEndpointActionPolicyInfo</span>     <span class="n">_actionPolicyInfo</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifConstraintListCollection</span>     <span class="n">_constraintListCollection</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEntityKeyList</span> <span class="n">aifEntityKeyList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">SalesId</span>                         <span class="n">salesId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">SalesLine</span>                       <span class="n">salesLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEntityKey</span>                    <span class="n">entityKey</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">AifEntityKey</span>                    <span class="n">salesEntityKey</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Map</span>                             <span class="n">keyDataMap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Map</span>                             <span class="n">salesOrderMap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MapEnumerator</span>                   <span class="n">mapEnumerator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">aifEntityKeyList</span> <span class="p">=</span> <span class="n">super</span><span class="p">(</span><span class="n">_xml</span><span class="p">,</span> <span class="n">_actionPolicyInfo</span><span class="p">,</span> <span class="n">_constraintListCollection</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Sales orders are committed - master planning explosion can be executed and confirmed dates be set</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="p">.</span><span class="n">postSalesOrderCreation</span><span class="p">(</span><span class="n">aifEntityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">entityKey</span>       <span class="p">=</span> <span class="n">aifEntityKeyList</span><span class="p">.</span><span class="n">getEntityKey</span><span class="p">(</span><span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">keyDataMap</span>      <span class="p">=</span> <span class="n">entityKey</span><span class="p">.</span><span class="n">parmKeyDataMap</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">mapEnumerator</span>   <span class="p">=</span> <span class="n">keyDataMap</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">mapEnumerator</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">salesId</span> <span class="p">=</span> <span class="n">mapEnumerator</span><span class="p">.</span><span class="n">currentValue</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">salesId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">while</span> <span class="k">select</span> <span class="n">InventTransId</span><span class="p">,</span> <span class="n">RecId</span> <span class="k">from</span> <span class="n">salesLine</span>
</span></span><span class="line"><span class="cl">                <span class="k">where</span> <span class="n">salesLine</span><span class="p">.</span><span class="n">SalesId</span> <span class="p">==</span> <span class="n">salesId</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesEntityKey</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AifEntityKey</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesOrderMap</span>  <span class="p">=</span> <span class="k">new</span> <span class="n">Map</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Integer</span><span class="p">,</span> <span class="n">Types</span><span class="p">::</span><span class="n">Container</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesEntityKey</span><span class="p">.</span><span class="n">parmTableId</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">SalesLine</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesEntityKey</span><span class="p">.</span><span class="n">parmRecId</span><span class="p">(</span><span class="n">salesLine</span><span class="p">.</span><span class="n">RecId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesOrderMap</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">SalesLine</span><span class="p">,</span> <span class="n">InventTransId</span><span class="p">),</span> <span class="p">[</span><span class="n">salesLine</span><span class="p">.</span><span class="n">InventTransId</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">                <span class="n">salesEntityKey</span><span class="p">.</span><span class="n">parmKeyDataMap</span><span class="p">(</span><span class="n">salesOrderMap</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">aifEntityKeyList</span><span class="p">.</span><span class="n">addEntityKey</span><span class="p">(</span><span class="n">salesEntityKey</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">aifEntityKeyList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Code in C#.NET to get list key</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">SalesOrderServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SalesOrderServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span><span class="p">[]</span> <span class="n">salesOrderCreatedEntity</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">salesOrder</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//EntityKey salesOrderCreated = (EntityKey)salesOrderCreatedEntity.GetValue(0);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">System</span><span class="p">.</span><span class="n">Collections</span><span class="p">.</span><span class="n">IEnumerator</span> <span class="n">enumerator</span> <span class="p">=</span> <span class="n">salesOrderCreatedEntity</span><span class="p">.</span><span class="n">GetEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">while</span> <span class="p">(</span><span class="n">enumerator</span><span class="p">.</span><span class="n">MoveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">EntityKey</span> <span class="n">salesOrderCreated</span> <span class="p">=</span> <span class="p">(</span><span class="n">EntityKey</span><span class="p">)</span><span class="n">enumerator</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">salesOrderCreated</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Field</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">salesOrderCreated</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//Console.WriteLine(&#34;The sales order created has a Sales ID of &#34; + salesOrderCreated.KeyData[0].Value);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Here is what we got</p>
<p></p>
<p>Just remember this one just for AIF Document Standard, for AIF custom service we do another way I will so in next post.</p>
<p>Thank you for reading.</p>]]></description>
</item>
<item>
    <title>How to block vendor and send email for notification.</title>
    <link>https://nuxulu.com/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</link>
    <pubDate>Tue, 10 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</guid>
    <description><![CDATA[<p>Main requirements is Using batch to find and block vendor base on last transaction condition and notify for them by emails.</p>
<h3 id="set-up-e-mail-parameters">Set up E-mail parameters</h3>
<p>For set up email, we need Go to AX <code>System administrator &gt; Setup &gt; E-mail parameters</code></p>
<p></p>
<h3 id="vendor-emails">Vendor emails</h3>
<p>Vendor emails locate on <code>LogisticsElectronicAddress.Locator</code>, <code>partyTable.PrimaryContactEmail</code>, <code>partyLocation.Location</code>, please take a look on this job to find how to update Vendor emails and you also could see the relations more clearly.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">UpdateVendorEmail</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">VendTable</span>                   <span class="n">vendTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">LogisticsElectronicAddress</span>  <span class="n">electronicAddress</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DirPartyTable</span>               <span class="n">partyTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DirPartyLocation</span>            <span class="n">partyLocation</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">initValue</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">Type</span> <span class="p">=</span> <span class="n">LogisticsElectronicAddressMethodType</span><span class="p">::</span><span class="n">Email</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">Description</span> <span class="p">=</span> <span class="s">&#34;Max Nguyen&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">Locator</span>     <span class="p">=</span> <span class="s">&#34;luan52@outlook.com&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">IsPrimary</span>   <span class="p">=</span> <span class="n">NoYes</span><span class="p">::</span><span class="n">Yes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">electronicAddress</span><span class="p">.</span><span class="n">insert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">forUpdate</span> <span class="n">partyTable</span>
</span></span><span class="line"><span class="cl">        <span class="n">exists</span> <span class="k">join</span> <span class="n">vendTable</span>
</span></span><span class="line"><span class="cl">            <span class="k">where</span> <span class="n">vendTable</span><span class="p">.</span><span class="n">Party</span> <span class="p">==</span> <span class="n">partyTable</span><span class="p">.</span><span class="n">RecId</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttsBegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">partyTable</span><span class="p">.</span><span class="n">PrimaryContactEmail</span> <span class="p">=</span> <span class="n">electronicAddress</span><span class="p">.</span><span class="n">RecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">partyTable</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttsCommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">select</span> <span class="n">firstOnly</span> <span class="n">forupdate</span> <span class="n">partyLocation</span>
</span></span><span class="line"><span class="cl">            <span class="k">where</span> <span class="n">partyLocation</span><span class="p">.</span><span class="n">Party</span> <span class="p">==</span> <span class="n">partyTable</span><span class="p">.</span><span class="n">RecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">partyLocation</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsBegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">Location</span> <span class="p">=</span> <span class="n">electronicAddress</span><span class="p">.</span><span class="n">Location</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsCommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">initValue</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">Location</span> <span class="p">=</span> <span class="n">electronicAddress</span><span class="p">.</span><span class="n">Location</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">Party</span>     <span class="p">=</span> <span class="n">partyTable</span><span class="p">.</span><span class="n">RecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">partyLocation</span><span class="p">.</span><span class="n">insert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="batch-class">Batch class</h3>
<p>Main logic here is find Vend accounts are not exist in <code>VendTrans</code> table with condition <code>endTrans.TransDate &gt;= beginDate</code>, and <code>beginDate</code> count from today <code>systemDateGet()</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">class</span> <span class="nc">Max_VendorBlockedBatch</span> <span class="n">extends</span> <span class="n">RunBaseBatch</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Get the date before 6 months from today</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="n">TransDate</span> <span class="n">getBeginDate</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">TransDate</span>   <span class="n">beginDate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TransDate</span>   <span class="n">currentDate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Months</span>      <span class="n">month</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">YearBase</span>    <span class="n">years</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Day</span>         <span class="n">day</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">currentDate</span> <span class="p">=</span> <span class="n">systemDateGet</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">day</span>         <span class="p">=</span> <span class="n">dayOfMth</span><span class="p">(</span><span class="n">currentDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">month</span>       <span class="p">=</span> <span class="n">mthOfYr</span><span class="p">(</span><span class="n">currentDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">years</span>       <span class="p">=</span> <span class="n">year</span><span class="p">(</span><span class="n">currentDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">month</span> <span class="p">&lt;</span> <span class="m">6</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">beginDate</span> <span class="p">=</span> <span class="n">mkDate</span><span class="p">(</span><span class="n">day</span><span class="p">,</span> <span class="m">12</span> <span class="p">-</span> <span class="p">(</span><span class="m">6</span> <span class="p">-</span> <span class="n">month</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">years</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">beginDate</span> <span class="p">=</span> <span class="n">mkDate</span><span class="p">(</span><span class="n">day</span><span class="p">,</span> <span class="n">month</span> <span class="p">-</span> <span class="m">6</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">years</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">beginDate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Send E-mail</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">sendEmail</span><span class="p">(</span><span class="n">AccountNum</span> <span class="n">_vendor</span><span class="p">,</span> <span class="n">str</span> <span class="n">_recipient</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>                                     <span class="n">sender</span>  <span class="p">=</span> <span class="err">&#39;</span><span class="n">sender@email</span><span class="p">.</span><span class="n">com</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>                                     <span class="n">subject</span> <span class="p">=</span> <span class="err">&#39;</span><span class="n">Account</span> <span class="n">blocked</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>                                     <span class="n">body</span>    <span class="p">=</span> <span class="err">&#39;</span><span class="n">Your</span> <span class="n">account</span> <span class="k">is</span> <span class="n">blocked</span> <span class="n">due</span> <span class="n">to</span> <span class="n">last</span> <span class="n">transaction</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span>                                    <span class="n">toList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListEnumerator</span>                          <span class="n">le</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Set</span>                                     <span class="n">permissionSet</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Exception</span>                        <span class="n">e</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>                                     <span class="n">mailServer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>                                     <span class="n">mailServerPort</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">SmtpClient</span>              <span class="n">mailClient</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailMessage</span>             <span class="n">mailMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span>             <span class="n">mailFrom</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span>             <span class="n">mailTo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddressCollection</span>   <span class="n">mailToCollection</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">toList</span> <span class="p">=</span> <span class="n">strSplit</span><span class="p">(</span><span class="n">_recipient</span><span class="p">,</span> <span class="sc">&#39;;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">         
</span></span><span class="line"><span class="cl">        <span class="n">permissionSet</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Set</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">permissionSet</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">assertMultiple</span><span class="p">(</span><span class="n">permissionSet</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">        <span class="n">mailServer</span>      <span class="p">=</span> <span class="n">SysEmaiLParameters</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="k">false</span><span class="p">).</span><span class="n">SMTPRelayServerName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailServerPort</span>  <span class="p">=</span> <span class="n">SysEmaiLParameters</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="k">false</span><span class="p">).</span><span class="n">SMTPPortNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailClient</span>      <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">SmtpClient</span><span class="p">(</span><span class="n">mailServer</span><span class="p">,</span> <span class="n">mailServerPort</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">        <span class="n">le</span> <span class="p">=</span> <span class="n">toList</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">le</span><span class="p">.</span><span class="n">moveNext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">         
</span></span><span class="line"><span class="cl">        <span class="n">mailFrom</span>    <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span><span class="p">(</span><span class="n">sender</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailTo</span>      <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span><span class="p">(</span><span class="n">strLTrim</span><span class="p">(</span><span class="n">strRTrim</span><span class="p">(</span><span class="n">le</span><span class="p">.</span><span class="n">current</span><span class="p">())));</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailMessage</span><span class="p">(</span><span class="n">mailFrom</span><span class="p">,</span> <span class="n">mailTo</span><span class="p">);</span>     
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">mailToCollection</span> <span class="p">=</span> <span class="n">mailMessage</span><span class="p">.</span><span class="n">get_To</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="p">(</span><span class="n">le</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">mailToCollection</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">strLTrim</span><span class="p">(</span><span class="n">strRTrim</span><span class="p">(</span><span class="n">le</span><span class="p">.</span><span class="n">current</span><span class="p">())));</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">         
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span><span class="p">.</span><span class="n">set_Priority</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailPriority</span><span class="p">::</span><span class="n">High</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span><span class="p">.</span><span class="n">set_Subject</span><span class="p">(</span><span class="n">subject</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span><span class="p">.</span><span class="n">set_Body</span><span class="p">(</span><span class="n">body</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">        <span class="n">mailClient</span><span class="p">.</span><span class="n">Send</span><span class="p">(</span><span class="n">mailMessage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">        <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Email</span> <span class="n">was</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">vendor</span> <span class="p">%</span><span class="m">1.</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">_vendor</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">CLRError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">e</span> <span class="p">=</span> <span class="n">ClrInterop</span><span class="p">::</span><span class="n">getLastException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">info</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">get_Message</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            <span class="n">e</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="n">get_InnerException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Initializes a new instance of the <em><c>Batch</c></em> class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">MAX_VendorBlockedBatch</span> <span class="n">construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">new</span> <span class="n">MAX_VendorBlockedBatch</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Gets description of the dialog.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">ClassDescription</span> <span class="n">description</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="err">&#39;</span><span class="n">Vendor</span> <span class="n">blocked</span> <span class="n">batch</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Find the vendor without transaction and disable, then send email to vendor</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">VendTrans</span>   <span class="n">vendTrans</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">VendTable</span>   <span class="n">vendTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TransDate</span>   <span class="n">beginDate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Email</span>       <span class="n">email</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>         <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">beginDate</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">getBeginDate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="k">select</span> <span class="n">forUpdate</span> <span class="n">AccountNum</span><span class="p">,</span> <span class="n">Party</span> <span class="k">from</span> <span class="n">vendTable</span>
</span></span><span class="line"><span class="cl">            <span class="n">Notexists</span> <span class="k">join</span> <span class="n">vendTrans</span>
</span></span><span class="line"><span class="cl">            <span class="k">where</span> <span class="n">vendTrans</span><span class="p">.</span><span class="n">AccountNum</span> <span class="p">==</span> <span class="n">vendTable</span><span class="p">.</span><span class="n">AccountNum</span>
</span></span><span class="line"><span class="cl">                <span class="p">&amp;&amp;</span> <span class="n">vendTrans</span><span class="p">.</span><span class="n">TransDate</span> <span class="p">&gt;=</span> <span class="n">beginDate</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//Set the vendor blocked</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsBegin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">vendTable</span><span class="p">.</span><span class="n">Blocked</span> <span class="p">=</span> <span class="n">CustVendorBlocked</span><span class="p">::</span><span class="n">All</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">vendTable</span><span class="p">.</span><span class="n">update</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">ttsCommit</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1">//Send E-mail to vendor</span>
</span></span><span class="line"><span class="cl">            <span class="n">email</span> <span class="p">=</span> <span class="n">vendTable</span><span class="p">.</span><span class="n">email</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">email</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">this</span><span class="p">.</span><span class="n">sendEmail</span><span class="p">(</span><span class="n">vendTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">,</span> <span class="n">email</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">warning</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="err">&#39;</span><span class="n">The</span> <span class="n">vendor</span> <span class="p">%</span><span class="m">1</span> <span class="n">did</span> <span class="n">not</span> <span class="n">have</span> <span class="n">E</span><span class="p">-</span><span class="n">mail</span> <span class="n">address</span><span class="p">.</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">vendTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">Deadlock</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">retry</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Provides an enter point for the <c>Batch</c> class.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">MAX_VendorBlockedBatch</span> <span class="n">vendorBlockedBatch</span> <span class="p">=</span> <span class="n">MAX_VendorBlockedBatch</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">vendorBlockedBatch</span><span class="p">.</span><span class="n">prompt</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">vendorBlockedBatch</span><span class="p">.</span><span class="n">run</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>From here you can run class and set up recurrence for batch job.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Simple summary Keys are in Dynamics AX</title>
    <link>https://nuxulu.com/2017-01-03-simple-custom-serivce-in-ax-r3/</link>
    <pubDate>Tue, 03 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-03-simple-custom-serivce-in-ax-r3/</guid>
    <description><![CDATA[<ul>
<li>
<p>There is a maximum of one <code>Primary Key</code> per table, whereas a table can have several <code>alternate keys</code>. The <code>primary key</code> is usually the type of key that other tables, called child tables, refer to when a <code>foreign key</code> field in those other tables need a relational identifier.</p>
</li>
<li>
<p>For new tables the default is a <code>primary key</code> based on the <code>RecId</code> field , incremented number or a completely meaningless number that is generated by the system <code>surrogate key</code>. <code>A surrogate key</code> is a system-generated value that acts as the primary key of a table. This value is typically used instead of a set of fields called the natural key which would typically act as the primary key of a table. Microsoft Dynamics AX 2012 uses Recld as the <code>surrogate key</code>.</p>
</li>
<li>
<p><code>Alternate key</code> can be chosen as the <code>Replacement Key</code> of a table that can display on forms instead of a meaningless numeric <code>primary key</code> value. Each table can have a maximum of one <code>replacement key</code>.</p>
</li>
<li>
<p><code>Natural key</code> has meaning to people. Most <code>replacement keys</code> are <code>natural keys</code>.</p>
</li>
<li>
<p>Relations represents a <code>foreign key</code>.</p>
</li>
</ul>
<p>Thank you for reading!</p>
]]></description>
</item>
<item>
    <title>AX1004 error in Dynamics AX</title>
    <link>https://nuxulu.com/2017-01-02-ax1004-error/</link>
    <pubDate>Mon, 02 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-02-ax1004-error/</guid>
    <description><![CDATA[<p>I got this error at version Dynamics 2012 R3 CU9, SQL Server 2014, Windows Server 2012 R2.</p>
<p>Those kind of errors will come when you move report from Dev Server to Live Server, even compilation in <em>DP Class, Query, Contract, table</em> … without any error</p>
<p><figure><a class="lightgallery" href="/imagesposts/AX1004-error.png" title="Image" data-thumbnail="/imagesposts/AX1004-error.png" data-sub-html="<h2>Image_rounded</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Image_rounded</figcaption>
    </figure>{:.rounded}</p>
<p><span style="color: red">AX1004: Reference System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 was not a valid model assembly.</span></p>
<p><span style="color: red">MSB3644: The reference assemblies for framework “.NETFramework,Version=v4.0” were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK </span></p>
<h3 id="cause">Cause</h3>
<p>There is no reference Assemblies Version 4.0  under <code>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework</code> on Windows Server 2012 R2 (only Version 4.5 it have)</p>
<h3 id="solution">Solution</h3>
<p>Copy those Assemblies from your any where (Windows 7,8,10) to Server</p>
<p>Restore and compile again.</p>
<p>Thank you for reading!</p>
]]></description>
</item>
<item>
    <title>Recalculate InventSum in Dynamics AX</title>
    <link>https://nuxulu.com/2017-01-02-recalculate-inventsum/</link>
    <pubDate>Mon, 02 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-02-recalculate-inventsum/</guid>
    <description><![CDATA[<p><code>InventSum</code> is needed to recalculate sometimes. We should use <code>InventSumRecalcItem</code> class in Dynamics AX.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">InventSumRecalcItem</span> <span class="n">InventSumRecalcItem</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">InventSumRecalcItem</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InventSumRecalcItem</span><span class="p">(</span><span class="s">&#34;ITEM001&#34;</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="n">checkfix</span><span class="p">::</span><span class="n">fix</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">InventSumRecalcItem</span><span class="p">.</span><span class="n">updatenow</span><span class="p">();</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>First parameter : <code>ItemId</code></p>
<p>Second parameter : <code>Show errors</code></p>
<p>Third parameter : <code>Fix or only check</code></p>
<p>What if you want to calculate for all items:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventTable</span> <span class="n">InventTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">InventSumRecalcItem</span> <span class="n">InventSumRecalcItem</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">WHILE</span> <span class="n">SELECT</span> <span class="n">InventTable</span>
</span></span><span class="line"><span class="cl">	<span class="n">WHERE</span> <span class="p">(</span><span class="n">InventTable</span><span class="p">.</span><span class="n">ItemType</span> <span class="p">==</span> <span class="n">ItemType</span><span class="p">::</span><span class="n">Item</span><span class="p">)</span> <span class="p">||</span> <span class="p">(</span><span class="n">InventTable</span><span class="p">.</span><span class="n">ItemType</span> <span class="p">==</span> <span class="n">ItemType</span><span class="p">::</span><span class="n">BOM</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">InventSumRecalcItem</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InventSumRecalcItem</span><span class="p">(</span><span class="n">InventTable</span><span class="p">.</span><span class="n">ItemId</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="n">checkfix</span><span class="p">::</span><span class="n">fix</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">InventSumRecalcItem</span><span class="p">.</span><span class="n">updatenow</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>
]]></description>
</item>
<item>
    <title>Simple summary Keys are in Dynamics AX</title>
    <link>https://nuxulu.com/2017-01-02-simple-summary-keys-are-in-dynamics-ax/</link>
    <pubDate>Mon, 02 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-02-simple-summary-keys-are-in-dynamics-ax/</guid>
    <description><![CDATA[<ul>
<li>
<p>There is a maximum of one <code>Primary Key</code> per table, whereas a table can have several <code>alternate keys</code>. The <code>primary key</code> is usually the type of key that other tables, called child tables, refer to when a <code>foreign key</code> field in those other tables need a relational identifier.</p>
</li>
<li>
<p>For new tables the default is a <code>primary key</code> based on the <code>RecId</code> field , incremented number or a completely meaningless number that is generated by the system <code>surrogate key</code>.</p>
</li>
<li>
<p>As <strong>The RecId data type</strong>, <code>surrogate keys</code> exist on a primary key table. As <strong>The RefRecId ETD</strong>, surrogate foreign keys exist on a foreign key table (Ex: <code>Party</code> field is on <code>CustTable</code> Table).</p>
</li>
<li>
<p><code>Alternate key</code> can be chosen as the <code>Replacement Key</code> of a table that can display on forms instead of a meaningless numeric <code>primary key</code> value. Each table can have a maximum of one <code>replacement key</code>.</p>
</li>
<li>
<p><code>Natural key</code> has meaning to people. A set of fields that uniquely identify a record and would have formed the primary key of the table, if not for the existence of a <code>surrogate key</code>.</p>
</li>
<li>
<p>Relations represents a <code>foreign key</code>.</p>
</li>
</ul>
<p>Thank you for reading!</p>
]]></description>
</item>
<item>
    <title>Using Methods in Table Filters &amp; Query Ranges in Dynamics AX 2012</title>
    <link>https://nuxulu.com/2017-01-02-using-methods-in-table-filters-query-ranges-in-dynamics-ax-2012/</link>
    <pubDate>Mon, 02 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-02-using-methods-in-table-filters-query-ranges-in-dynamics-ax-2012/</guid>
    <description><![CDATA[<p>In Dynamics AX, there is a class called <code>SysQueryRangeUtil</code> that can be utilized in both query ranges and table filters. Using methods from this class allow you to be very precise about what dates you want to use in reports or for filtering your data.</p>
<p>Let’s say you have a report that you always want to run to see orders with shipping dates of the next day. It is possible to do so by using one of the methods from the <code>SysQueryRangeUtil</code>. The use of the letter <strong>&rsquo;t&rsquo;</strong> will work for today’s date, but when you try to add days to it, it doesn’t work in reports. Instead, I will use the <code>currentdate()</code> method and add <code>1</code> to it.</p>
<blockquote>
<p>All methods &amp; expressions must be surrounded by parentheses as shown below.</p>
</blockquote>
<p></p>
<p><em>Filtering the requested ship dates in an AX query for tomorrow <code>(current day() + 1)</code></em></p>
<p>On any form with a grid, you filter your data by pressing <strong><em>Ctrl+G</em></strong>.</p>
<p>If I were to want to see open customer invoices from the last 90 days, I would filter my <strong>open customer invoices form</strong> and use the method <code>(dayRange(-90,0))</code>. The first number represents how many months backward from this month, and the second represents how many months forward. The same sorts of things can be done for the <code>monthRange()</code>, <code>yearRange()</code>, and <code>dateRange()</code> methods. The best part about this is that you can of course save these filters to create views that you might use on a daily basis.</p>
<p></p>
<p>If you are creating your query ranges in code, these methods can also be utilized whenever you are setting them. Definitely be sure to check out the <code>SysQueryRangeUtil</code> class as there are many more methods to use.</p>
<p>Here is some methods you can use:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">currentCustomerAccount()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">currentVendorAccount()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">currentUserId()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">currentDate()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dateRange()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">day()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dayRange()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">greaterThanDate()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">greaterThanUtcDate()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">greaterThanUtcNow()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">lessthanDate()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">lessthanUtcDate()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">lessthanUtcNow()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">monthRange()
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">yearRange()
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>for example:</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">(</span><span class="n">dayRange</span><span class="p">(-</span><span class="n">30</span><span class="p">,</span><span class="n">0</span><span class="p">))</span> <span class="err">–</span> <span class="n">Results</span> <span class="k">in</span> <span class="n">a</span> <span class="n">date</span> <span class="n">range</span> <span class="k">for</span> <span class="n">the</span> <span class="n">last</span> <span class="n">30</span> <span class="n">days</span><span class="err">:</span> <span class="s2">&#34;26-01-2017&#34;</span><span class="p">..</span><span class="s2">&#34;25-02-2017&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">day</span><span class="p">(-</span><span class="n">1</span><span class="p">))</span> <span class="err">–</span> <span class="n">Results</span> <span class="k">in</span> <span class="n">yesterday</span><span class="s1">&#39;s date: 24-02-2017
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">(day(0)) – Results in today&#39;</span><span class="n">s</span> <span class="n">date</span><span class="err">:</span> <span class="n">25</span><span class="p">-</span><span class="n">02</span><span class="p">-</span><span class="n">2017</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">day</span><span class="p">(</span><span class="n">1</span><span class="p">))</span> <span class="err">–</span> <span class="n">Results</span> <span class="k">in</span> <span class="n">tomorrow</span><span class="s1">&#39;s date: 26-02-2017
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">(greaterThanDate(2)) – Results in every date after today plus 2: &gt; 27-02-2017
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">(lessThanDate(-1)) – Results in every date of today minus 1: &lt; 24-02-2017
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">(monthRange(0,2)) – Results in first day till the last day of the month&#39;</span><span class="n">s</span> <span class="n">choosen</span> <span class="p">(</span><span class="n">0</span> <span class="p">=</span> <span class="n">current</span> <span class="n">month</span><span class="p">)</span><span class="err">:</span> <span class="s2">&#34;01-02-2017&#34;</span><span class="p">..</span><span class="s2">&#34;30-04-2017&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">yearRange</span><span class="p">(-</span><span class="n">1</span><span class="p">,-</span><span class="n">1</span><span class="p">))</span> <span class="err">–</span> <span class="n">Results</span> <span class="k">in</span> <span class="n">first</span> <span class="n">day</span> <span class="n">till</span> <span class="n">the</span> <span class="n">last</span> <span class="n">day</span> <span class="n">of</span> <span class="n">the</span> <span class="n">chosen</span> <span class="n">year</span><span class="err">:</span> <span class="s2">&#34;01-01-2017&#34;</span><span class="p">..</span><span class="s2">&#34;31-12-2017&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>
]]></description>
</item>
<item>
    <title>Difference between QueryFilter and QueryBuildRrange</title>
    <link>https://nuxulu.com/2017-01-01-difference-between-queryfilter-and-querybuildrange/</link>
    <pubDate>Sun, 01 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2017-01-01-difference-between-queryfilter-and-querybuildrange/</guid>
    <description><![CDATA[<p>In Dynamics AX, we have two way to filter the result set of records in joined query is using <code>QueryFilter</code> class and <code>QueryBuildRange</code> class.</p>
<p>So what&rsquo;s difference between them? when do we use <code>QueryFilter</code> class? When do we use <code>QueryBuildRange</code> class?</p>
<p>Today, i will make a simple sample to show what is difference between them.</p>
<p>I have two table :</p>
<p>Table <code>DuyDang_ParentTable</code> which have 1 columns : <code>ID</code>.</p>
<p></p>
<p>Table <code>DuyDang_ChildTable</code> which have 3 columns : <code>ID</code>, <code>ParentID</code>, <code>Qty</code>.</p>
<p></p>
<p>and they have relation like this : <code>DuyDang_ParentTable.ID = DuyDang_ChildTable.ParentID</code>.</p>
<p>I have the <strong>Outer Join</strong> query:</p>
<h3 id="use-queryfilter-class">Use QueryFilter class:</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">DuyDang_QueryFilter</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Query</span> <span class="n">query</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildDataSource</span> <span class="n">qbds</span><span class="p">,</span> <span class="n">qbds1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryRun</span> <span class="n">queryRun</span><span class="p">;</span>    
</span></span><span class="line"><span class="cl">    <span class="n">DuyDang_ParentTable</span> <span class="n">parentTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DuyDang_ChildTable</span> <span class="n">childTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryFilter</span> <span class="n">qFilter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildRange</span> <span class="n">qRange</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">struct</span> <span class="nc">structSet</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">structSet</span> <span class="p">=</span> <span class="k">new</span> <span class="k">struct</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="s">&#34;str ParentID;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">+</span> <span class="s">&#34;str ChildID;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">+</span> <span class="s">&#34;real Quantity&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">query</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Query</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">));</span>  
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span> <span class="p">=</span> <span class="n">qbds</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">));</span>    
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span><span class="p">.</span><span class="n">joinMode</span><span class="p">(</span><span class="n">JoinMode</span><span class="p">::</span><span class="n">OuterJoin</span><span class="p">);</span> <span class="c1">// Set join type.   </span>
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span><span class="p">.</span><span class="n">addLink</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">,</span> <span class="n">ID</span><span class="p">),</span> <span class="n">fieldNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">,</span> <span class="n">ParentID</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">qFilter</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">addQueryFilter</span><span class="p">(</span><span class="n">qbds1</span><span class="p">,</span> <span class="err">&#39;</span><span class="n">Qty</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">qFilter</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="n">queryValue</span><span class="p">(</span><span class="m">15</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//qRange = qbds1.addRange(fieldNum(DuyDang_ChildTable, Qty));</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//qRange.value(queryValue(15));</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">queryRun</span> <span class="p">=</span> <span class="k">new</span> <span class="n">QueryRun</span><span class="p">(</span><span class="n">query</span><span class="p">);</span>    
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">queryRun</span><span class="p">.</span><span class="n">next</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">parentTable</span> <span class="p">=</span> <span class="n">queryRun</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">childTable</span> <span class="p">=</span> <span class="n">queryRun</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;ParentID&#34;</span><span class="p">,</span> <span class="n">parentTable</span><span class="p">.</span><span class="n">ID</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;ChildID&#34;</span><span class="p">,</span> <span class="n">childTable</span><span class="p">.</span><span class="n">ID</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;Quantity&#34;</span><span class="p">,</span> <span class="n">childTable</span><span class="p">.</span><span class="n">Qty</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="n">structSet</span><span class="p">.</span><span class="n">toString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>and result <code>info</code> here:</p>
<p></p>
<h3 id="use-querybuildrange-class">Use QueryBuildRange class:</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">DuyDang_QueryFilter</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Query</span> <span class="n">query</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildDataSource</span> <span class="n">qbds</span><span class="p">,</span> <span class="n">qbds1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryRun</span> <span class="n">queryRun</span><span class="p">;</span>    
</span></span><span class="line"><span class="cl">    <span class="n">DuyDang_ParentTable</span> <span class="n">parentTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DuyDang_ChildTable</span> <span class="n">childTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryFilter</span> <span class="n">qFilter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildRange</span> <span class="n">qRange</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">struct</span> <span class="nc">structSet</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">structSet</span> <span class="p">=</span> <span class="k">new</span> <span class="k">struct</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="s">&#34;str ParentID;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">+</span> <span class="s">&#34;str ChildID;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">+</span> <span class="s">&#34;real Quantity&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">query</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Query</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">));</span>  
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span> <span class="p">=</span> <span class="n">qbds</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">));</span>    
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span><span class="p">.</span><span class="n">joinMode</span><span class="p">(</span><span class="n">JoinMode</span><span class="p">::</span><span class="n">OuterJoin</span><span class="p">);</span> <span class="c1">// Set join type.   </span>
</span></span><span class="line"><span class="cl">    <span class="n">qbds1</span><span class="p">.</span><span class="n">addLink</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">,</span> <span class="n">ID</span><span class="p">),</span> <span class="n">fieldNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">,</span> <span class="n">ParentID</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//qFilter = query.addQueryFilter(qbds1, &#39;Qty&#39;);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//qFilter.value(queryValue(15));</span>
</span></span><span class="line"><span class="cl">    <span class="n">qRange</span> <span class="p">=</span> <span class="n">qbds1</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">,</span> <span class="n">Qty</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">qRange</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="n">queryValue</span><span class="p">(</span><span class="m">15</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">queryRun</span> <span class="p">=</span> <span class="k">new</span> <span class="n">QueryRun</span><span class="p">(</span><span class="n">query</span><span class="p">);</span>    
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">queryRun</span><span class="p">.</span><span class="n">next</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">parentTable</span> <span class="p">=</span> <span class="n">queryRun</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ParentTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">childTable</span> <span class="p">=</span> <span class="n">queryRun</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">DuyDang_ChildTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;ParentID&#34;</span><span class="p">,</span> <span class="n">parentTable</span><span class="p">.</span><span class="n">ID</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;ChildID&#34;</span><span class="p">,</span> <span class="n">childTable</span><span class="p">.</span><span class="n">ID</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">structSet</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;Quantity&#34;</span><span class="p">,</span> <span class="n">childTable</span><span class="p">.</span><span class="n">Qty</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="n">structSet</span><span class="p">.</span><span class="n">toString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>and result <code>info</code> here:</p>
<p></p>
<p>now you can see the difference between them</p>
<ul>
<li>When you use <code>QueryBuidRange</code> class, the restriction is in the <code>ON</code> clause of the <code>OUTER JOIN</code> in the ANSI SQL select statement that is generated by the AOS for the underlying database system.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">DuyDang_ParentTable</span><span class="p">(</span><span class="n">DuyDang_ParentTable_1</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">OUTER</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">DuyDang_ChildTable</span><span class="p">(</span><span class="n">DuyDang_ChildTable_1</span><span class="p">)</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">ON</span><span class="w"> </span><span class="n">DuyDang_ParentTable</span><span class="p">.</span><span class="n">ID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">DuyDang_ChildTable</span><span class="p">.</span><span class="n">ParentID</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">		</span><span class="k">AND</span><span class="w"> </span><span class="p">((</span><span class="n">Qty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">15</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>When you use <code>QueryFilter</code> class, the restriction is in the <code>WHERE</code> clause of the <code>OUTER JOIN</code> in the ANSI SQL select statement that is generated by the AOS for the underlying database system.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">DuyDang_ParentTable</span><span class="p">(</span><span class="n">DuyDang_ParentTable_1</span><span class="p">)</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">OUTER</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">DuyDang_ChildTable</span><span class="p">(</span><span class="n">DuyDang_ChildTable_1</span><span class="p">)</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">ON</span><span class="w"> </span><span class="n">DuyDang_ParentTable</span><span class="p">.</span><span class="n">ID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">DuyDang_ChildTable</span><span class="p">.</span><span class="n">ParentID</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="k">WHERE</span><span class="w"> </span><span class="p">((</span><span class="n">DuyDang_ChildTable</span><span class="p">(</span><span class="n">DuyDang_ChildTable_1</span><span class="p">).</span><span class="n">Qty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">15</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Useful functions to use in AX 2012</title>
    <link>https://nuxulu.com/2016-12-30-useful-functions-to-use-in-ax-2012/</link>
    <pubDate>Fri, 30 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-30-useful-functions-to-use-in-ax-2012/</guid>
    <description><![CDATA[<p>Useful functions to use in AX 2012</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">   1
</span><span class="lnt">   2
</span><span class="lnt">   3
</span><span class="lnt">   4
</span><span class="lnt">   5
</span><span class="lnt">   6
</span><span class="lnt">   7
</span><span class="lnt">   8
</span><span class="lnt">   9
</span><span class="lnt">  10
</span><span class="lnt">  11
</span><span class="lnt">  12
</span><span class="lnt">  13
</span><span class="lnt">  14
</span><span class="lnt">  15
</span><span class="lnt">  16
</span><span class="lnt">  17
</span><span class="lnt">  18
</span><span class="lnt">  19
</span><span class="lnt">  20
</span><span class="lnt">  21
</span><span class="lnt">  22
</span><span class="lnt">  23
</span><span class="lnt">  24
</span><span class="lnt">  25
</span><span class="lnt">  26
</span><span class="lnt">  27
</span><span class="lnt">  28
</span><span class="lnt">  29
</span><span class="lnt">  30
</span><span class="lnt">  31
</span><span class="lnt">  32
</span><span class="lnt">  33
</span><span class="lnt">  34
</span><span class="lnt">  35
</span><span class="lnt">  36
</span><span class="lnt">  37
</span><span class="lnt">  38
</span><span class="lnt">  39
</span><span class="lnt">  40
</span><span class="lnt">  41
</span><span class="lnt">  42
</span><span class="lnt">  43
</span><span class="lnt">  44
</span><span class="lnt">  45
</span><span class="lnt">  46
</span><span class="lnt">  47
</span><span class="lnt">  48
</span><span class="lnt">  49
</span><span class="lnt">  50
</span><span class="lnt">  51
</span><span class="lnt">  52
</span><span class="lnt">  53
</span><span class="lnt">  54
</span><span class="lnt">  55
</span><span class="lnt">  56
</span><span class="lnt">  57
</span><span class="lnt">  58
</span><span class="lnt">  59
</span><span class="lnt">  60
</span><span class="lnt">  61
</span><span class="lnt">  62
</span><span class="lnt">  63
</span><span class="lnt">  64
</span><span class="lnt">  65
</span><span class="lnt">  66
</span><span class="lnt">  67
</span><span class="lnt">  68
</span><span class="lnt">  69
</span><span class="lnt">  70
</span><span class="lnt">  71
</span><span class="lnt">  72
</span><span class="lnt">  73
</span><span class="lnt">  74
</span><span class="lnt">  75
</span><span class="lnt">  76
</span><span class="lnt">  77
</span><span class="lnt">  78
</span><span class="lnt">  79
</span><span class="lnt">  80
</span><span class="lnt">  81
</span><span class="lnt">  82
</span><span class="lnt">  83
</span><span class="lnt">  84
</span><span class="lnt">  85
</span><span class="lnt">  86
</span><span class="lnt">  87
</span><span class="lnt">  88
</span><span class="lnt">  89
</span><span class="lnt">  90
</span><span class="lnt">  91
</span><span class="lnt">  92
</span><span class="lnt">  93
</span><span class="lnt">  94
</span><span class="lnt">  95
</span><span class="lnt">  96
</span><span class="lnt">  97
</span><span class="lnt">  98
</span><span class="lnt">  99
</span><span class="lnt"> 100
</span><span class="lnt"> 101
</span><span class="lnt"> 102
</span><span class="lnt"> 103
</span><span class="lnt"> 104
</span><span class="lnt"> 105
</span><span class="lnt"> 106
</span><span class="lnt"> 107
</span><span class="lnt"> 108
</span><span class="lnt"> 109
</span><span class="lnt"> 110
</span><span class="lnt"> 111
</span><span class="lnt"> 112
</span><span class="lnt"> 113
</span><span class="lnt"> 114
</span><span class="lnt"> 115
</span><span class="lnt"> 116
</span><span class="lnt"> 117
</span><span class="lnt"> 118
</span><span class="lnt"> 119
</span><span class="lnt"> 120
</span><span class="lnt"> 121
</span><span class="lnt"> 122
</span><span class="lnt"> 123
</span><span class="lnt"> 124
</span><span class="lnt"> 125
</span><span class="lnt"> 126
</span><span class="lnt"> 127
</span><span class="lnt"> 128
</span><span class="lnt"> 129
</span><span class="lnt"> 130
</span><span class="lnt"> 131
</span><span class="lnt"> 132
</span><span class="lnt"> 133
</span><span class="lnt"> 134
</span><span class="lnt"> 135
</span><span class="lnt"> 136
</span><span class="lnt"> 137
</span><span class="lnt"> 138
</span><span class="lnt"> 139
</span><span class="lnt"> 140
</span><span class="lnt"> 141
</span><span class="lnt"> 142
</span><span class="lnt"> 143
</span><span class="lnt"> 144
</span><span class="lnt"> 145
</span><span class="lnt"> 146
</span><span class="lnt"> 147
</span><span class="lnt"> 148
</span><span class="lnt"> 149
</span><span class="lnt"> 150
</span><span class="lnt"> 151
</span><span class="lnt"> 152
</span><span class="lnt"> 153
</span><span class="lnt"> 154
</span><span class="lnt"> 155
</span><span class="lnt"> 156
</span><span class="lnt"> 157
</span><span class="lnt"> 158
</span><span class="lnt"> 159
</span><span class="lnt"> 160
</span><span class="lnt"> 161
</span><span class="lnt"> 162
</span><span class="lnt"> 163
</span><span class="lnt"> 164
</span><span class="lnt"> 165
</span><span class="lnt"> 166
</span><span class="lnt"> 167
</span><span class="lnt"> 168
</span><span class="lnt"> 169
</span><span class="lnt"> 170
</span><span class="lnt"> 171
</span><span class="lnt"> 172
</span><span class="lnt"> 173
</span><span class="lnt"> 174
</span><span class="lnt"> 175
</span><span class="lnt"> 176
</span><span class="lnt"> 177
</span><span class="lnt"> 178
</span><span class="lnt"> 179
</span><span class="lnt"> 180
</span><span class="lnt"> 181
</span><span class="lnt"> 182
</span><span class="lnt"> 183
</span><span class="lnt"> 184
</span><span class="lnt"> 185
</span><span class="lnt"> 186
</span><span class="lnt"> 187
</span><span class="lnt"> 188
</span><span class="lnt"> 189
</span><span class="lnt"> 190
</span><span class="lnt"> 191
</span><span class="lnt"> 192
</span><span class="lnt"> 193
</span><span class="lnt"> 194
</span><span class="lnt"> 195
</span><span class="lnt"> 196
</span><span class="lnt"> 197
</span><span class="lnt"> 198
</span><span class="lnt"> 199
</span><span class="lnt"> 200
</span><span class="lnt"> 201
</span><span class="lnt"> 202
</span><span class="lnt"> 203
</span><span class="lnt"> 204
</span><span class="lnt"> 205
</span><span class="lnt"> 206
</span><span class="lnt"> 207
</span><span class="lnt"> 208
</span><span class="lnt"> 209
</span><span class="lnt"> 210
</span><span class="lnt"> 211
</span><span class="lnt"> 212
</span><span class="lnt"> 213
</span><span class="lnt"> 214
</span><span class="lnt"> 215
</span><span class="lnt"> 216
</span><span class="lnt"> 217
</span><span class="lnt"> 218
</span><span class="lnt"> 219
</span><span class="lnt"> 220
</span><span class="lnt"> 221
</span><span class="lnt"> 222
</span><span class="lnt"> 223
</span><span class="lnt"> 224
</span><span class="lnt"> 225
</span><span class="lnt"> 226
</span><span class="lnt"> 227
</span><span class="lnt"> 228
</span><span class="lnt"> 229
</span><span class="lnt"> 230
</span><span class="lnt"> 231
</span><span class="lnt"> 232
</span><span class="lnt"> 233
</span><span class="lnt"> 234
</span><span class="lnt"> 235
</span><span class="lnt"> 236
</span><span class="lnt"> 237
</span><span class="lnt"> 238
</span><span class="lnt"> 239
</span><span class="lnt"> 240
</span><span class="lnt"> 241
</span><span class="lnt"> 242
</span><span class="lnt"> 243
</span><span class="lnt"> 244
</span><span class="lnt"> 245
</span><span class="lnt"> 246
</span><span class="lnt"> 247
</span><span class="lnt"> 248
</span><span class="lnt"> 249
</span><span class="lnt"> 250
</span><span class="lnt"> 251
</span><span class="lnt"> 252
</span><span class="lnt"> 253
</span><span class="lnt"> 254
</span><span class="lnt"> 255
</span><span class="lnt"> 256
</span><span class="lnt"> 257
</span><span class="lnt"> 258
</span><span class="lnt"> 259
</span><span class="lnt"> 260
</span><span class="lnt"> 261
</span><span class="lnt"> 262
</span><span class="lnt"> 263
</span><span class="lnt"> 264
</span><span class="lnt"> 265
</span><span class="lnt"> 266
</span><span class="lnt"> 267
</span><span class="lnt"> 268
</span><span class="lnt"> 269
</span><span class="lnt"> 270
</span><span class="lnt"> 271
</span><span class="lnt"> 272
</span><span class="lnt"> 273
</span><span class="lnt"> 274
</span><span class="lnt"> 275
</span><span class="lnt"> 276
</span><span class="lnt"> 277
</span><span class="lnt"> 278
</span><span class="lnt"> 279
</span><span class="lnt"> 280
</span><span class="lnt"> 281
</span><span class="lnt"> 282
</span><span class="lnt"> 283
</span><span class="lnt"> 284
</span><span class="lnt"> 285
</span><span class="lnt"> 286
</span><span class="lnt"> 287
</span><span class="lnt"> 288
</span><span class="lnt"> 289
</span><span class="lnt"> 290
</span><span class="lnt"> 291
</span><span class="lnt"> 292
</span><span class="lnt"> 293
</span><span class="lnt"> 294
</span><span class="lnt"> 295
</span><span class="lnt"> 296
</span><span class="lnt"> 297
</span><span class="lnt"> 298
</span><span class="lnt"> 299
</span><span class="lnt"> 300
</span><span class="lnt"> 301
</span><span class="lnt"> 302
</span><span class="lnt"> 303
</span><span class="lnt"> 304
</span><span class="lnt"> 305
</span><span class="lnt"> 306
</span><span class="lnt"> 307
</span><span class="lnt"> 308
</span><span class="lnt"> 309
</span><span class="lnt"> 310
</span><span class="lnt"> 311
</span><span class="lnt"> 312
</span><span class="lnt"> 313
</span><span class="lnt"> 314
</span><span class="lnt"> 315
</span><span class="lnt"> 316
</span><span class="lnt"> 317
</span><span class="lnt"> 318
</span><span class="lnt"> 319
</span><span class="lnt"> 320
</span><span class="lnt"> 321
</span><span class="lnt"> 322
</span><span class="lnt"> 323
</span><span class="lnt"> 324
</span><span class="lnt"> 325
</span><span class="lnt"> 326
</span><span class="lnt"> 327
</span><span class="lnt"> 328
</span><span class="lnt"> 329
</span><span class="lnt"> 330
</span><span class="lnt"> 331
</span><span class="lnt"> 332
</span><span class="lnt"> 333
</span><span class="lnt"> 334
</span><span class="lnt"> 335
</span><span class="lnt"> 336
</span><span class="lnt"> 337
</span><span class="lnt"> 338
</span><span class="lnt"> 339
</span><span class="lnt"> 340
</span><span class="lnt"> 341
</span><span class="lnt"> 342
</span><span class="lnt"> 343
</span><span class="lnt"> 344
</span><span class="lnt"> 345
</span><span class="lnt"> 346
</span><span class="lnt"> 347
</span><span class="lnt"> 348
</span><span class="lnt"> 349
</span><span class="lnt"> 350
</span><span class="lnt"> 351
</span><span class="lnt"> 352
</span><span class="lnt"> 353
</span><span class="lnt"> 354
</span><span class="lnt"> 355
</span><span class="lnt"> 356
</span><span class="lnt"> 357
</span><span class="lnt"> 358
</span><span class="lnt"> 359
</span><span class="lnt"> 360
</span><span class="lnt"> 361
</span><span class="lnt"> 362
</span><span class="lnt"> 363
</span><span class="lnt"> 364
</span><span class="lnt"> 365
</span><span class="lnt"> 366
</span><span class="lnt"> 367
</span><span class="lnt"> 368
</span><span class="lnt"> 369
</span><span class="lnt"> 370
</span><span class="lnt"> 371
</span><span class="lnt"> 372
</span><span class="lnt"> 373
</span><span class="lnt"> 374
</span><span class="lnt"> 375
</span><span class="lnt"> 376
</span><span class="lnt"> 377
</span><span class="lnt"> 378
</span><span class="lnt"> 379
</span><span class="lnt"> 380
</span><span class="lnt"> 381
</span><span class="lnt"> 382
</span><span class="lnt"> 383
</span><span class="lnt"> 384
</span><span class="lnt"> 385
</span><span class="lnt"> 386
</span><span class="lnt"> 387
</span><span class="lnt"> 388
</span><span class="lnt"> 389
</span><span class="lnt"> 390
</span><span class="lnt"> 391
</span><span class="lnt"> 392
</span><span class="lnt"> 393
</span><span class="lnt"> 394
</span><span class="lnt"> 395
</span><span class="lnt"> 396
</span><span class="lnt"> 397
</span><span class="lnt"> 398
</span><span class="lnt"> 399
</span><span class="lnt"> 400
</span><span class="lnt"> 401
</span><span class="lnt"> 402
</span><span class="lnt"> 403
</span><span class="lnt"> 404
</span><span class="lnt"> 405
</span><span class="lnt"> 406
</span><span class="lnt"> 407
</span><span class="lnt"> 408
</span><span class="lnt"> 409
</span><span class="lnt"> 410
</span><span class="lnt"> 411
</span><span class="lnt"> 412
</span><span class="lnt"> 413
</span><span class="lnt"> 414
</span><span class="lnt"> 415
</span><span class="lnt"> 416
</span><span class="lnt"> 417
</span><span class="lnt"> 418
</span><span class="lnt"> 419
</span><span class="lnt"> 420
</span><span class="lnt"> 421
</span><span class="lnt"> 422
</span><span class="lnt"> 423
</span><span class="lnt"> 424
</span><span class="lnt"> 425
</span><span class="lnt"> 426
</span><span class="lnt"> 427
</span><span class="lnt"> 428
</span><span class="lnt"> 429
</span><span class="lnt"> 430
</span><span class="lnt"> 431
</span><span class="lnt"> 432
</span><span class="lnt"> 433
</span><span class="lnt"> 434
</span><span class="lnt"> 435
</span><span class="lnt"> 436
</span><span class="lnt"> 437
</span><span class="lnt"> 438
</span><span class="lnt"> 439
</span><span class="lnt"> 440
</span><span class="lnt"> 441
</span><span class="lnt"> 442
</span><span class="lnt"> 443
</span><span class="lnt"> 444
</span><span class="lnt"> 445
</span><span class="lnt"> 446
</span><span class="lnt"> 447
</span><span class="lnt"> 448
</span><span class="lnt"> 449
</span><span class="lnt"> 450
</span><span class="lnt"> 451
</span><span class="lnt"> 452
</span><span class="lnt"> 453
</span><span class="lnt"> 454
</span><span class="lnt"> 455
</span><span class="lnt"> 456
</span><span class="lnt"> 457
</span><span class="lnt"> 458
</span><span class="lnt"> 459
</span><span class="lnt"> 460
</span><span class="lnt"> 461
</span><span class="lnt"> 462
</span><span class="lnt"> 463
</span><span class="lnt"> 464
</span><span class="lnt"> 465
</span><span class="lnt"> 466
</span><span class="lnt"> 467
</span><span class="lnt"> 468
</span><span class="lnt"> 469
</span><span class="lnt"> 470
</span><span class="lnt"> 471
</span><span class="lnt"> 472
</span><span class="lnt"> 473
</span><span class="lnt"> 474
</span><span class="lnt"> 475
</span><span class="lnt"> 476
</span><span class="lnt"> 477
</span><span class="lnt"> 478
</span><span class="lnt"> 479
</span><span class="lnt"> 480
</span><span class="lnt"> 481
</span><span class="lnt"> 482
</span><span class="lnt"> 483
</span><span class="lnt"> 484
</span><span class="lnt"> 485
</span><span class="lnt"> 486
</span><span class="lnt"> 487
</span><span class="lnt"> 488
</span><span class="lnt"> 489
</span><span class="lnt"> 490
</span><span class="lnt"> 491
</span><span class="lnt"> 492
</span><span class="lnt"> 493
</span><span class="lnt"> 494
</span><span class="lnt"> 495
</span><span class="lnt"> 496
</span><span class="lnt"> 497
</span><span class="lnt"> 498
</span><span class="lnt"> 499
</span><span class="lnt"> 500
</span><span class="lnt"> 501
</span><span class="lnt"> 502
</span><span class="lnt"> 503
</span><span class="lnt"> 504
</span><span class="lnt"> 505
</span><span class="lnt"> 506
</span><span class="lnt"> 507
</span><span class="lnt"> 508
</span><span class="lnt"> 509
</span><span class="lnt"> 510
</span><span class="lnt"> 511
</span><span class="lnt"> 512
</span><span class="lnt"> 513
</span><span class="lnt"> 514
</span><span class="lnt"> 515
</span><span class="lnt"> 516
</span><span class="lnt"> 517
</span><span class="lnt"> 518
</span><span class="lnt"> 519
</span><span class="lnt"> 520
</span><span class="lnt"> 521
</span><span class="lnt"> 522
</span><span class="lnt"> 523
</span><span class="lnt"> 524
</span><span class="lnt"> 525
</span><span class="lnt"> 526
</span><span class="lnt"> 527
</span><span class="lnt"> 528
</span><span class="lnt"> 529
</span><span class="lnt"> 530
</span><span class="lnt"> 531
</span><span class="lnt"> 532
</span><span class="lnt"> 533
</span><span class="lnt"> 534
</span><span class="lnt"> 535
</span><span class="lnt"> 536
</span><span class="lnt"> 537
</span><span class="lnt"> 538
</span><span class="lnt"> 539
</span><span class="lnt"> 540
</span><span class="lnt"> 541
</span><span class="lnt"> 542
</span><span class="lnt"> 543
</span><span class="lnt"> 544
</span><span class="lnt"> 545
</span><span class="lnt"> 546
</span><span class="lnt"> 547
</span><span class="lnt"> 548
</span><span class="lnt"> 549
</span><span class="lnt"> 550
</span><span class="lnt"> 551
</span><span class="lnt"> 552
</span><span class="lnt"> 553
</span><span class="lnt"> 554
</span><span class="lnt"> 555
</span><span class="lnt"> 556
</span><span class="lnt"> 557
</span><span class="lnt"> 558
</span><span class="lnt"> 559
</span><span class="lnt"> 560
</span><span class="lnt"> 561
</span><span class="lnt"> 562
</span><span class="lnt"> 563
</span><span class="lnt"> 564
</span><span class="lnt"> 565
</span><span class="lnt"> 566
</span><span class="lnt"> 567
</span><span class="lnt"> 568
</span><span class="lnt"> 569
</span><span class="lnt"> 570
</span><span class="lnt"> 571
</span><span class="lnt"> 572
</span><span class="lnt"> 573
</span><span class="lnt"> 574
</span><span class="lnt"> 575
</span><span class="lnt"> 576
</span><span class="lnt"> 577
</span><span class="lnt"> 578
</span><span class="lnt"> 579
</span><span class="lnt"> 580
</span><span class="lnt"> 581
</span><span class="lnt"> 582
</span><span class="lnt"> 583
</span><span class="lnt"> 584
</span><span class="lnt"> 585
</span><span class="lnt"> 586
</span><span class="lnt"> 587
</span><span class="lnt"> 588
</span><span class="lnt"> 589
</span><span class="lnt"> 590
</span><span class="lnt"> 591
</span><span class="lnt"> 592
</span><span class="lnt"> 593
</span><span class="lnt"> 594
</span><span class="lnt"> 595
</span><span class="lnt"> 596
</span><span class="lnt"> 597
</span><span class="lnt"> 598
</span><span class="lnt"> 599
</span><span class="lnt"> 600
</span><span class="lnt"> 601
</span><span class="lnt"> 602
</span><span class="lnt"> 603
</span><span class="lnt"> 604
</span><span class="lnt"> 605
</span><span class="lnt"> 606
</span><span class="lnt"> 607
</span><span class="lnt"> 608
</span><span class="lnt"> 609
</span><span class="lnt"> 610
</span><span class="lnt"> 611
</span><span class="lnt"> 612
</span><span class="lnt"> 613
</span><span class="lnt"> 614
</span><span class="lnt"> 615
</span><span class="lnt"> 616
</span><span class="lnt"> 617
</span><span class="lnt"> 618
</span><span class="lnt"> 619
</span><span class="lnt"> 620
</span><span class="lnt"> 621
</span><span class="lnt"> 622
</span><span class="lnt"> 623
</span><span class="lnt"> 624
</span><span class="lnt"> 625
</span><span class="lnt"> 626
</span><span class="lnt"> 627
</span><span class="lnt"> 628
</span><span class="lnt"> 629
</span><span class="lnt"> 630
</span><span class="lnt"> 631
</span><span class="lnt"> 632
</span><span class="lnt"> 633
</span><span class="lnt"> 634
</span><span class="lnt"> 635
</span><span class="lnt"> 636
</span><span class="lnt"> 637
</span><span class="lnt"> 638
</span><span class="lnt"> 639
</span><span class="lnt"> 640
</span><span class="lnt"> 641
</span><span class="lnt"> 642
</span><span class="lnt"> 643
</span><span class="lnt"> 644
</span><span class="lnt"> 645
</span><span class="lnt"> 646
</span><span class="lnt"> 647
</span><span class="lnt"> 648
</span><span class="lnt"> 649
</span><span class="lnt"> 650
</span><span class="lnt"> 651
</span><span class="lnt"> 652
</span><span class="lnt"> 653
</span><span class="lnt"> 654
</span><span class="lnt"> 655
</span><span class="lnt"> 656
</span><span class="lnt"> 657
</span><span class="lnt"> 658
</span><span class="lnt"> 659
</span><span class="lnt"> 660
</span><span class="lnt"> 661
</span><span class="lnt"> 662
</span><span class="lnt"> 663
</span><span class="lnt"> 664
</span><span class="lnt"> 665
</span><span class="lnt"> 666
</span><span class="lnt"> 667
</span><span class="lnt"> 668
</span><span class="lnt"> 669
</span><span class="lnt"> 670
</span><span class="lnt"> 671
</span><span class="lnt"> 672
</span><span class="lnt"> 673
</span><span class="lnt"> 674
</span><span class="lnt"> 675
</span><span class="lnt"> 676
</span><span class="lnt"> 677
</span><span class="lnt"> 678
</span><span class="lnt"> 679
</span><span class="lnt"> 680
</span><span class="lnt"> 681
</span><span class="lnt"> 682
</span><span class="lnt"> 683
</span><span class="lnt"> 684
</span><span class="lnt"> 685
</span><span class="lnt"> 686
</span><span class="lnt"> 687
</span><span class="lnt"> 688
</span><span class="lnt"> 689
</span><span class="lnt"> 690
</span><span class="lnt"> 691
</span><span class="lnt"> 692
</span><span class="lnt"> 693
</span><span class="lnt"> 694
</span><span class="lnt"> 695
</span><span class="lnt"> 696
</span><span class="lnt"> 697
</span><span class="lnt"> 698
</span><span class="lnt"> 699
</span><span class="lnt"> 700
</span><span class="lnt"> 701
</span><span class="lnt"> 702
</span><span class="lnt"> 703
</span><span class="lnt"> 704
</span><span class="lnt"> 705
</span><span class="lnt"> 706
</span><span class="lnt"> 707
</span><span class="lnt"> 708
</span><span class="lnt"> 709
</span><span class="lnt"> 710
</span><span class="lnt"> 711
</span><span class="lnt"> 712
</span><span class="lnt"> 713
</span><span class="lnt"> 714
</span><span class="lnt"> 715
</span><span class="lnt"> 716
</span><span class="lnt"> 717
</span><span class="lnt"> 718
</span><span class="lnt"> 719
</span><span class="lnt"> 720
</span><span class="lnt"> 721
</span><span class="lnt"> 722
</span><span class="lnt"> 723
</span><span class="lnt"> 724
</span><span class="lnt"> 725
</span><span class="lnt"> 726
</span><span class="lnt"> 727
</span><span class="lnt"> 728
</span><span class="lnt"> 729
</span><span class="lnt"> 730
</span><span class="lnt"> 731
</span><span class="lnt"> 732
</span><span class="lnt"> 733
</span><span class="lnt"> 734
</span><span class="lnt"> 735
</span><span class="lnt"> 736
</span><span class="lnt"> 737
</span><span class="lnt"> 738
</span><span class="lnt"> 739
</span><span class="lnt"> 740
</span><span class="lnt"> 741
</span><span class="lnt"> 742
</span><span class="lnt"> 743
</span><span class="lnt"> 744
</span><span class="lnt"> 745
</span><span class="lnt"> 746
</span><span class="lnt"> 747
</span><span class="lnt"> 748
</span><span class="lnt"> 749
</span><span class="lnt"> 750
</span><span class="lnt"> 751
</span><span class="lnt"> 752
</span><span class="lnt"> 753
</span><span class="lnt"> 754
</span><span class="lnt"> 755
</span><span class="lnt"> 756
</span><span class="lnt"> 757
</span><span class="lnt"> 758
</span><span class="lnt"> 759
</span><span class="lnt"> 760
</span><span class="lnt"> 761
</span><span class="lnt"> 762
</span><span class="lnt"> 763
</span><span class="lnt"> 764
</span><span class="lnt"> 765
</span><span class="lnt"> 766
</span><span class="lnt"> 767
</span><span class="lnt"> 768
</span><span class="lnt"> 769
</span><span class="lnt"> 770
</span><span class="lnt"> 771
</span><span class="lnt"> 772
</span><span class="lnt"> 773
</span><span class="lnt"> 774
</span><span class="lnt"> 775
</span><span class="lnt"> 776
</span><span class="lnt"> 777
</span><span class="lnt"> 778
</span><span class="lnt"> 779
</span><span class="lnt"> 780
</span><span class="lnt"> 781
</span><span class="lnt"> 782
</span><span class="lnt"> 783
</span><span class="lnt"> 784
</span><span class="lnt"> 785
</span><span class="lnt"> 786
</span><span class="lnt"> 787
</span><span class="lnt"> 788
</span><span class="lnt"> 789
</span><span class="lnt"> 790
</span><span class="lnt"> 791
</span><span class="lnt"> 792
</span><span class="lnt"> 793
</span><span class="lnt"> 794
</span><span class="lnt"> 795
</span><span class="lnt"> 796
</span><span class="lnt"> 797
</span><span class="lnt"> 798
</span><span class="lnt"> 799
</span><span class="lnt"> 800
</span><span class="lnt"> 801
</span><span class="lnt"> 802
</span><span class="lnt"> 803
</span><span class="lnt"> 804
</span><span class="lnt"> 805
</span><span class="lnt"> 806
</span><span class="lnt"> 807
</span><span class="lnt"> 808
</span><span class="lnt"> 809
</span><span class="lnt"> 810
</span><span class="lnt"> 811
</span><span class="lnt"> 812
</span><span class="lnt"> 813
</span><span class="lnt"> 814
</span><span class="lnt"> 815
</span><span class="lnt"> 816
</span><span class="lnt"> 817
</span><span class="lnt"> 818
</span><span class="lnt"> 819
</span><span class="lnt"> 820
</span><span class="lnt"> 821
</span><span class="lnt"> 822
</span><span class="lnt"> 823
</span><span class="lnt"> 824
</span><span class="lnt"> 825
</span><span class="lnt"> 826
</span><span class="lnt"> 827
</span><span class="lnt"> 828
</span><span class="lnt"> 829
</span><span class="lnt"> 830
</span><span class="lnt"> 831
</span><span class="lnt"> 832
</span><span class="lnt"> 833
</span><span class="lnt"> 834
</span><span class="lnt"> 835
</span><span class="lnt"> 836
</span><span class="lnt"> 837
</span><span class="lnt"> 838
</span><span class="lnt"> 839
</span><span class="lnt"> 840
</span><span class="lnt"> 841
</span><span class="lnt"> 842
</span><span class="lnt"> 843
</span><span class="lnt"> 844
</span><span class="lnt"> 845
</span><span class="lnt"> 846
</span><span class="lnt"> 847
</span><span class="lnt"> 848
</span><span class="lnt"> 849
</span><span class="lnt"> 850
</span><span class="lnt"> 851
</span><span class="lnt"> 852
</span><span class="lnt"> 853
</span><span class="lnt"> 854
</span><span class="lnt"> 855
</span><span class="lnt"> 856
</span><span class="lnt"> 857
</span><span class="lnt"> 858
</span><span class="lnt"> 859
</span><span class="lnt"> 860
</span><span class="lnt"> 861
</span><span class="lnt"> 862
</span><span class="lnt"> 863
</span><span class="lnt"> 864
</span><span class="lnt"> 865
</span><span class="lnt"> 866
</span><span class="lnt"> 867
</span><span class="lnt"> 868
</span><span class="lnt"> 869
</span><span class="lnt"> 870
</span><span class="lnt"> 871
</span><span class="lnt"> 872
</span><span class="lnt"> 873
</span><span class="lnt"> 874
</span><span class="lnt"> 875
</span><span class="lnt"> 876
</span><span class="lnt"> 877
</span><span class="lnt"> 878
</span><span class="lnt"> 879
</span><span class="lnt"> 880
</span><span class="lnt"> 881
</span><span class="lnt"> 882
</span><span class="lnt"> 883
</span><span class="lnt"> 884
</span><span class="lnt"> 885
</span><span class="lnt"> 886
</span><span class="lnt"> 887
</span><span class="lnt"> 888
</span><span class="lnt"> 889
</span><span class="lnt"> 890
</span><span class="lnt"> 891
</span><span class="lnt"> 892
</span><span class="lnt"> 893
</span><span class="lnt"> 894
</span><span class="lnt"> 895
</span><span class="lnt"> 896
</span><span class="lnt"> 897
</span><span class="lnt"> 898
</span><span class="lnt"> 899
</span><span class="lnt"> 900
</span><span class="lnt"> 901
</span><span class="lnt"> 902
</span><span class="lnt"> 903
</span><span class="lnt"> 904
</span><span class="lnt"> 905
</span><span class="lnt"> 906
</span><span class="lnt"> 907
</span><span class="lnt"> 908
</span><span class="lnt"> 909
</span><span class="lnt"> 910
</span><span class="lnt"> 911
</span><span class="lnt"> 912
</span><span class="lnt"> 913
</span><span class="lnt"> 914
</span><span class="lnt"> 915
</span><span class="lnt"> 916
</span><span class="lnt"> 917
</span><span class="lnt"> 918
</span><span class="lnt"> 919
</span><span class="lnt"> 920
</span><span class="lnt"> 921
</span><span class="lnt"> 922
</span><span class="lnt"> 923
</span><span class="lnt"> 924
</span><span class="lnt"> 925
</span><span class="lnt"> 926
</span><span class="lnt"> 927
</span><span class="lnt"> 928
</span><span class="lnt"> 929
</span><span class="lnt"> 930
</span><span class="lnt"> 931
</span><span class="lnt"> 932
</span><span class="lnt"> 933
</span><span class="lnt"> 934
</span><span class="lnt"> 935
</span><span class="lnt"> 936
</span><span class="lnt"> 937
</span><span class="lnt"> 938
</span><span class="lnt"> 939
</span><span class="lnt"> 940
</span><span class="lnt"> 941
</span><span class="lnt"> 942
</span><span class="lnt"> 943
</span><span class="lnt"> 944
</span><span class="lnt"> 945
</span><span class="lnt"> 946
</span><span class="lnt"> 947
</span><span class="lnt"> 948
</span><span class="lnt"> 949
</span><span class="lnt"> 950
</span><span class="lnt"> 951
</span><span class="lnt"> 952
</span><span class="lnt"> 953
</span><span class="lnt"> 954
</span><span class="lnt"> 955
</span><span class="lnt"> 956
</span><span class="lnt"> 957
</span><span class="lnt"> 958
</span><span class="lnt"> 959
</span><span class="lnt"> 960
</span><span class="lnt"> 961
</span><span class="lnt"> 962
</span><span class="lnt"> 963
</span><span class="lnt"> 964
</span><span class="lnt"> 965
</span><span class="lnt"> 966
</span><span class="lnt"> 967
</span><span class="lnt"> 968
</span><span class="lnt"> 969
</span><span class="lnt"> 970
</span><span class="lnt"> 971
</span><span class="lnt"> 972
</span><span class="lnt"> 973
</span><span class="lnt"> 974
</span><span class="lnt"> 975
</span><span class="lnt"> 976
</span><span class="lnt"> 977
</span><span class="lnt"> 978
</span><span class="lnt"> 979
</span><span class="lnt"> 980
</span><span class="lnt"> 981
</span><span class="lnt"> 982
</span><span class="lnt"> 983
</span><span class="lnt"> 984
</span><span class="lnt"> 985
</span><span class="lnt"> 986
</span><span class="lnt"> 987
</span><span class="lnt"> 988
</span><span class="lnt"> 989
</span><span class="lnt"> 990
</span><span class="lnt"> 991
</span><span class="lnt"> 992
</span><span class="lnt"> 993
</span><span class="lnt"> 994
</span><span class="lnt"> 995
</span><span class="lnt"> 996
</span><span class="lnt"> 997
</span><span class="lnt"> 998
</span><span class="lnt"> 999
</span><span class="lnt">1000
</span><span class="lnt">1001
</span><span class="lnt">1002
</span><span class="lnt">1003
</span><span class="lnt">1004
</span><span class="lnt">1005
</span><span class="lnt">1006
</span><span class="lnt">1007
</span><span class="lnt">1008
</span><span class="lnt">1009
</span><span class="lnt">1010
</span><span class="lnt">1011
</span><span class="lnt">1012
</span><span class="lnt">1013
</span><span class="lnt">1014
</span><span class="lnt">1015
</span><span class="lnt">1016
</span><span class="lnt">1017
</span><span class="lnt">1018
</span><span class="lnt">1019
</span><span class="lnt">1020
</span><span class="lnt">1021
</span><span class="lnt">1022
</span><span class="lnt">1023
</span><span class="lnt">1024
</span><span class="lnt">1025
</span><span class="lnt">1026
</span><span class="lnt">1027
</span><span class="lnt">1028
</span><span class="lnt">1029
</span><span class="lnt">1030
</span><span class="lnt">1031
</span><span class="lnt">1032
</span><span class="lnt">1033
</span><span class="lnt">1034
</span><span class="lnt">1035
</span><span class="lnt">1036
</span><span class="lnt">1037
</span><span class="lnt">1038
</span><span class="lnt">1039
</span><span class="lnt">1040
</span><span class="lnt">1041
</span><span class="lnt">1042
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">container</span> <span class="n">list2Con</span> <span class="p">(</span><span class="n">List</span> <span class="n">_list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span> <span class="n">con</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListEnumerator</span> <span class="n">listEnum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">listEnum</span> <span class="p">=</span> <span class="n">_list</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">listEnum</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">con</span> <span class="p">+=</span> <span class="n">listEnum</span><span class="p">.</span><span class="n">current</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">con</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">///Creates a file named _file with the content specified in _content parameter.</span>
</span></span><span class="line"><span class="cl"><span class="c1">//See the class SysImportUtil class for file related functions like get temfolder,tempfilename..etc.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">createFile</span><span class="p">(</span><span class="n">str</span> <span class="n">_file</span><span class="p">,</span> <span class="n">str</span> <span class="n">_content</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">File</span>
</span></span><span class="line"><span class="cl">    <span class="n">TextIo</span> <span class="n">file</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">new</span> <span class="n">FileIOPermission</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="err">#</span><span class="n">io_write</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// BP Deviation Documented</span>
</span></span><span class="line"><span class="cl">    <span class="n">file</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TextIo</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="err">#</span><span class="n">io_write</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">file</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">_content</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">file</span><span class="p">.</span><span class="n">finalize</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">///Creates an XML file named _file with the content specified in _content parameter. If the XML file</span>
</span></span><span class="line"><span class="cl"><span class="cs">///can&#39;t be created then it will try to create a normal file by calling createFile method.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">createXmlFile</span><span class="p">(</span><span class="n">str</span> <span class="n">_file</span><span class="p">,</span> <span class="n">str</span> <span class="n">_content</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">File</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">XmlDocument</span> <span class="n">document</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">document</span> <span class="p">=</span> <span class="n">XmlDocument</span><span class="p">::</span><span class="n">newXml</span><span class="p">(</span><span class="n">_content</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">new</span> <span class="n">FileIOPermission</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="err">#</span><span class="n">io_write</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// BP Deviation Documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">document</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="n">_file</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">SysImportUtil</span><span class="p">::</span><span class="n">createFile</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="n">_content</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">///Reads an XML file specified by _file parameter.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">readXmlFile</span><span class="p">(</span><span class="n">str</span> <span class="n">_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">File</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">XmlDocument</span> <span class="n">file</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">new</span> <span class="n">FileIOPermission</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="err">#</span><span class="n">io_read</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// BP Deviation Documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">file</span> <span class="p">=</span> <span class="n">XmlDocument</span><span class="p">::</span><span class="n">newFile</span><span class="p">(</span><span class="n">_file</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">file</span><span class="p">.</span><span class="n">xml</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Opens Bing maps with the address.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;_address&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// The address to map.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">mapIt</span><span class="p">(</span><span class="n">LogisticsPostalAddress</span> <span class="n">_address</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">DEFINE</span><span class="p">.</span><span class="n">MapURL</span><span class="p">(</span><span class="err">&#39;</span><span class="n">http</span><span class="p">:</span><span class="c1">//maps.bing.com/default.aspx?where1=\%1&#39;)</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">DEFINE</span><span class="p">.</span><span class="n">comma</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">DEFINE</span><span class="p">.</span><span class="n">newLine</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">str</span>     <span class="n">address</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">_address</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">address</span> <span class="p">=</span> <span class="n">_address</span><span class="p">.</span><span class="n">Street</span> <span class="p">+</span> <span class="err">#</span><span class="n">comma</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">                  <span class="n">_address</span><span class="p">.</span><span class="n">City</span> <span class="p">+</span> <span class="err">#</span><span class="n">comma</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">                  <span class="n">_address</span><span class="p">.</span><span class="n">State</span> <span class="p">+</span> <span class="err">#</span><span class="n">comma</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">                  <span class="n">_address</span><span class="p">.</span><span class="n">ZipCode</span> <span class="p">+</span> <span class="err">#</span><span class="n">comma</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">                  <span class="n">_address</span><span class="p">.</span><span class="n">CountryRegionId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// Replace the newline with comma</span>
</span></span><span class="line"><span class="cl">        <span class="n">address</span> <span class="p">=</span> <span class="n">strReplace</span><span class="p">(</span><span class="n">address</span><span class="p">,</span> <span class="err">#</span><span class="n">newline</span><span class="p">,</span> <span class="err">#</span><span class="n">comma</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// URL encode</span>
</span></span><span class="line"><span class="cl">        <span class="n">address</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">HttpUtility</span><span class="p">::</span><span class="n">UrlEncode</span><span class="p">(</span><span class="n">address</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Add the address to the URL</span>
</span></span><span class="line"><span class="cl">        <span class="n">infolog</span><span class="p">.</span><span class="n">urlLookup</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="err">#</span><span class="n">MapURL</span><span class="p">,</span> <span class="n">address</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Function to get the list of Tables in AOT</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// In case the table is derived its parent i.e. base table is appended to it delimited by comma (,)</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Output example</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// :Table1,Table1&#39;s Base Table : Table2 : Table3 : Table4 , Table4&#39;s Base Table</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">str</span> <span class="n">getAOTTables</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span>            <span class="n">node</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span>            <span class="n">childNode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNodeIterator</span>    <span class="n">nodeIt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">FilePath</span>            <span class="n">path</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TableId</span>             <span class="n">tableId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Dictionary</span>      <span class="n">dict</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">parentName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">fieldArr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">path</span>        <span class="p">=</span> <span class="err">@&#39;\</span><span class="n">Data</span> <span class="n">dictionary</span><span class="err">\</span><span class="n">Tables</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">node</span>        <span class="p">=</span> <span class="n">TreeNode</span><span class="p">::</span><span class="n">findNode</span><span class="p">(</span><span class="n">path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">nodeIt</span>      <span class="p">=</span> <span class="n">node</span><span class="p">.</span><span class="n">AOTiterator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">childNode</span>   <span class="p">=</span> <span class="n">nodeIt</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldArr</span> <span class="p">=</span><span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">childNode</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">tableId</span> <span class="p">=</span> <span class="n">tableName2id</span><span class="p">(</span><span class="n">childNode</span><span class="p">.</span><span class="n">treeNodeName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span> <span class="p">!</span><span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableId</span><span class="p">).</span><span class="n">isTmp</span><span class="p">()</span>  <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableId</span><span class="p">).</span><span class="n">isMap</span><span class="p">()</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableId</span><span class="p">).</span><span class="n">isView</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">parentName</span> <span class="p">=</span> <span class="n">RetailUtils</span><span class="p">::</span><span class="n">getAOTTableParentName</span><span class="p">(</span><span class="n">tableId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">parentName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//Creating formated output , refer explaination and example on header</span>
</span></span><span class="line"><span class="cl">                <span class="n">fieldArr</span> <span class="p">=</span> <span class="n">fieldArr</span> <span class="p">+</span> <span class="sc">&#39;:&#39;</span> <span class="p">+</span> <span class="n">strUpr</span><span class="p">(</span><span class="n">childNode</span><span class="p">.</span><span class="n">treeNodeName</span><span class="p">())</span> <span class="p">+</span> <span class="s">&#34;,&#34;</span> <span class="p">+</span> <span class="n">strUpr</span><span class="p">(</span><span class="n">parentName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">fieldArr</span> <span class="p">=</span> <span class="n">fieldArr</span> <span class="p">+</span> <span class="sc">&#39;:&#39;</span> <span class="p">+</span> <span class="n">strUpr</span><span class="p">(</span><span class="n">childNode</span><span class="p">.</span><span class="n">treeNodeName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">childNode</span> <span class="p">=</span> <span class="n">nodeIt</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fieldArr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// This method receives a table id and find the corresponding Base Table from AOT</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// This method takes care of Multilevel inheritence</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;tableid&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// tableid of derived table.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Name of parent table.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">str</span> <span class="n">getAOTTableParentName</span><span class="p">(</span><span class="n">TableId</span> <span class="n">tableid</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Dictionary</span>  <span class="n">dict</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">TableId</span> <span class="n">parentId</span><span class="p">,</span> <span class="n">temp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">parentId</span> <span class="p">=</span> <span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableid</span><span class="p">).</span><span class="n">extends</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Loop until reached to the table for whcih Extends property is not defined</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">parentId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">temp</span> <span class="p">=</span> <span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">parentId</span><span class="p">).</span><span class="n">extends</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">parentId</span> <span class="p">=</span> <span class="n">temp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">parentId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">result</span> <span class="p">=</span> <span class="n">tableId2name</span><span class="p">(</span><span class="n">parentId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">result</span> <span class="p">=</span> <span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Function to accepts a table name and returns all its field</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;tableName&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Table name for which field are to be retreived.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Field are arranged in a : delimited string and passed back</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Fields are read from AOT structure and defaults field are manually added</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// as those are not present in the tree structure</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Example =  :Field1:Field2:Field3:Field4</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">str</span> <span class="n">getAOTTableFields</span><span class="p">(</span><span class="n">str</span> <span class="n">tableName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span>            <span class="n">node</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span>            <span class="n">childNode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNodeIterator</span>    <span class="n">nodeIt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">FilePath</span>            <span class="n">path</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TableId</span>             <span class="n">tableId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">fieldArr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Dictionary</span>      <span class="n">dict</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldArr</span> <span class="p">=</span> <span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">tableName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">fieldArr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Construct the path till table fields node</span>
</span></span><span class="line"><span class="cl">    <span class="n">path</span>        <span class="p">=</span> <span class="err">@&#39;\</span><span class="n">Data</span> <span class="n">dictionary</span><span class="err">\</span><span class="n">Tables</span><span class="err">\\&#39;</span> <span class="p">+</span> <span class="n">tableName</span> <span class="p">+</span> <span class="err">&#39;\\</span><span class="n">Fields</span><span class="err">&#39;</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">node</span>        <span class="p">=</span> <span class="n">TreeNode</span><span class="p">::</span><span class="n">findNode</span><span class="p">(</span><span class="n">path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">nodeIt</span>      <span class="p">=</span> <span class="n">node</span><span class="p">.</span><span class="n">AOTiterator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">childNode</span>   <span class="p">=</span> <span class="n">nodeIt</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">childNode</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">fieldArr</span> <span class="p">=</span>  <span class="n">fieldArr</span> <span class="p">+</span> <span class="sc">&#39;:&#39;</span> <span class="p">+</span> <span class="n">strUpr</span><span class="p">(</span><span class="n">childNode</span><span class="p">.</span><span class="n">treeNodeName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">childNode</span> <span class="p">=</span> <span class="n">nodeIt</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">tableId</span> <span class="p">=</span> <span class="n">tableName2id</span><span class="p">(</span><span class="n">tableName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableId</span><span class="p">).</span><span class="n">dataPrCompany</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//Append the default Fields</span>
</span></span><span class="line"><span class="cl">        <span class="n">fieldArr</span> <span class="p">=</span>  <span class="n">fieldArr</span> <span class="p">+</span> <span class="sc">&#39;:&#39;</span> <span class="p">+</span> <span class="err">&#39;</span><span class="n">DATAAREAID</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">dict</span><span class="p">.</span><span class="n">tableObject</span><span class="p">(</span><span class="n">tableId</span><span class="p">).</span><span class="n">dataPerPartition</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">fieldArr</span> <span class="p">=</span>  <span class="n">fieldArr</span> <span class="p">+</span> <span class="sc">&#39;:&#39;</span> <span class="p">+</span> <span class="err">&#39;</span><span class="n">PARTITION</span><span class="err">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fieldArr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// get enum values to container</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">Enum2container</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>         <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DictEnum</span>    <span class="n">dimCode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span>   <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dimCode</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DictEnum</span><span class="p">(</span><span class="n">enumnum</span><span class="p">(</span><span class="n">SysDimension</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="n">dimCode</span><span class="p">.</span><span class="n">values</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ret</span> <span class="p">+=</span> <span class="n">dimCode</span><span class="p">.</span><span class="n">index2Name</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">i</span><span class="p">++;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;%1&#34;</span><span class="p">,</span><span class="n">con2Str</span><span class="p">(</span><span class="n">ret</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">checkDateIsInPeriod</span><span class="p">(</span><span class="n">TransDate</span> <span class="n">_transDate</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                            <span class="n">PeriodCode</span>  <span class="n">_periodCode</span> <span class="p">=</span> <span class="n">PeriodCode</span><span class="p">::</span><span class="n">Regular</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">BudgetTransactionManager</span><span class="p">::</span><span class="n">validateTransactionDate</span><span class="p">(</span><span class="n">_transDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// New method for returning ledgerperiod last date</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">transDate</span> <span class="n">findLastOpenPeriod</span><span class="p">(</span><span class="n">transdate</span> <span class="n">_ledgerTransDate</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">FiscalCalendarRecId</span>     <span class="n">fiscalCalendarRecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">fiscalCalendarRecId</span> <span class="p">=</span> <span class="n">Ledger</span><span class="p">::</span><span class="n">fiscalCalendar</span><span class="p">(</span><span class="n">CompanyInfo</span><span class="p">::</span><span class="n">find</span><span class="p">().</span><span class="n">RecId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">FiscalCalendars</span><span class="p">::</span><span class="n">findLastDayofPeriod</span><span class="p">(</span> <span class="n">fiscalCalendarRecId</span><span class="p">,</span> <span class="n">_ledgerTransDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// New method for returning first open ledgerperiod first date</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">transDate</span> <span class="n">findFirstOpenPeriod</span><span class="p">(</span><span class="n">transdate</span> <span class="n">_ledgerTransDate</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">FiscalCalendarRecId</span>     <span class="n">fiscalCalendarRecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">fiscalCalendarRecId</span> <span class="p">=</span> <span class="n">Ledger</span><span class="p">::</span><span class="n">fiscalCalendar</span><span class="p">(</span><span class="n">CompanyInfo</span><span class="p">::</span><span class="n">find</span><span class="p">().</span><span class="n">RecId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">FiscalCalendars</span><span class="p">::</span><span class="n">findFirstDayofPeriod</span><span class="p">(</span> <span class="n">fiscalCalendarRecId</span><span class="p">,</span> <span class="n">_ledgerTransDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Calculate Hash for the string.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">CalculateHash</span><span class="p">(</span><span class="n">str</span> <span class="n">tb</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">s</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">obj</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">md5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">StringBuilder</span> <span class="n">sBuilder</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">clrStr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">clrStrObject</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Exception</span> <span class="n">clrException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Array</span> <span class="n">resultByteArray</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">arrayLength</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">InteropPermission</span> <span class="n">perm</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">perm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">perm</span><span class="p">.</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">obj</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">Encoding</span><span class="p">::</span><span class="n">get_ASCII</span><span class="p">().</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">tb</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">md5</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Security</span><span class="p">.</span><span class="n">Cryptography</span><span class="p">.</span><span class="n">MD5</span><span class="p">::</span><span class="n">Create</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">resultByteArray</span> <span class="p">=</span> <span class="n">md5</span><span class="p">.</span><span class="n">ComputeHash</span><span class="p">(</span><span class="n">obj</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//BP deviation documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">sBuilder</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">StringBuilder</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">arrayLength</span> <span class="p">=</span> <span class="n">resultByteArray</span><span class="p">.</span><span class="n">get_Length</span><span class="p">()</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Loop through each byte of the hashed data</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// and format each one as a hexadecimal string.</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span><span class="n">arrayLength</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">clrStrObject</span> <span class="p">=</span> <span class="n">resultByteArray</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">clrStr</span> <span class="p">=</span> <span class="n">clrStrObject</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="err">&#39;</span><span class="n">x2</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">sBuilder</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">clrStr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// Return the hexadecimal string.</span>
</span></span><span class="line"><span class="cl">        <span class="n">s</span> <span class="p">=</span> <span class="n">sBuilder</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">CLRError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//BP deviation documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">clrException</span> <span class="p">=</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getLastException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">s</span> <span class="p">=</span> <span class="n">clrException</span><span class="p">.</span><span class="n">get_Message</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">error</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="s">&#34;@SYS106158&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">s</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Transforms xml to another format of xml using xslt.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">transform</span><span class="p">(</span><span class="n">str</span> <span class="n">aifXml</span><span class="p">,</span> <span class="n">str</span> <span class="n">xsltResourceName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#define.XsltArgumentList(&#34;System.Xml.Xsl.XsltArgumentList&#34;)</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">AOT</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ResourceNode</span> <span class="n">resourceNode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span> <span class="n">resourcesNode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span> <span class="n">data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">xsltString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">doXml</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">Xsl</span><span class="p">.</span><span class="n">XslCompiledTransform</span> <span class="n">transform</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">StringBuilder</span>           <span class="n">stringBuilder</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringWriter</span>              <span class="n">stringWriter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringReader</span>              <span class="n">stringReader</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlTextReader</span>            <span class="n">xmlTextReader</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringReader</span>              <span class="n">stringReaderForXslt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlTextReader</span>            <span class="n">xmlTextReaderForXslt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">Xsl</span><span class="p">.</span><span class="n">XsltArgumentList</span>     <span class="n">xsltArguments</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IDisposable</span>                  <span class="n">disposableObj</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Get the top Resource node in the AOT</span>
</span></span><span class="line"><span class="cl">    <span class="n">resourcesNode</span> <span class="p">=</span> <span class="n">infolog</span><span class="p">.</span><span class="n">findNode</span><span class="p">(</span><span class="err">#</span><span class="n">ResourcesPath</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">resourcesNode</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Get the XML string holding the data from the resource item</span>
</span></span><span class="line"><span class="cl">        <span class="n">resourceNode</span> <span class="p">=</span> <span class="n">resourcesNode</span><span class="p">.</span><span class="n">AOTfindChild</span><span class="p">(</span><span class="n">xsltResourceName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">resourceNode</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">resourceNode</span><span class="p">.</span><span class="n">AOTload</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span> <span class="p">=</span> <span class="n">SysResource</span><span class="p">::</span><span class="n">getResourceNodeData</span><span class="p">(</span><span class="n">resourceNode</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">xsltString</span> <span class="p">=</span> <span class="n">conpeek</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//Local XSLT</span>
</span></span><span class="line"><span class="cl">        <span class="n">transform</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">Xsl</span><span class="p">.</span><span class="n">XslCompiledTransform</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">stringReaderForXslt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringReader</span><span class="p">(</span><span class="n">xsltString</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">xmlTextReaderForXslt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlTextReader</span><span class="p">(</span><span class="n">stringReaderForXslt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">transform</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">xmlTextReaderForXslt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//Transform the input AIF XML</span>
</span></span><span class="line"><span class="cl">        <span class="n">stringReader</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringReader</span><span class="p">(</span><span class="n">aifXml</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">xmlTextReader</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlTextReader</span><span class="p">(</span><span class="n">stringReader</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">stringBuilder</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">StringBuilder</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">stringWriter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">StringWriter</span><span class="p">(</span><span class="n">stringBuilder</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">xsltArguments</span> <span class="p">=</span> <span class="n">ClrInterop</span><span class="p">::</span><span class="n">Null</span><span class="p">(</span><span class="err">#</span><span class="n">XsltArgumentList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">transform</span><span class="p">.</span><span class="n">Transform</span><span class="p">(</span><span class="n">xmlTextReader</span><span class="p">,</span> <span class="n">xsltArguments</span><span class="p">,</span> <span class="n">stringWriter</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">doXml</span> <span class="p">=</span> <span class="n">stringBuilder</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">CLRError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">Global</span><span class="p">::</span><span class="n">error</span><span class="p">(</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">getLastException</span><span class="p">().</span><span class="n">toString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">xmlTextReaderForXslt</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span> <span class="p">=</span> <span class="n">xmlTextReaderForXslt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">stringReaderForXslt</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span> <span class="p">=</span> <span class="n">stringReaderForXslt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">xmlTextReader</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span> <span class="p">=</span> <span class="n">xmlTextReader</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">stringReader</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span> <span class="p">=</span> <span class="n">stringReader</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">ClrInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">stringWriter</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span> <span class="p">=</span> <span class="n">stringWriter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">disposableObj</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">doXml</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Converts from string to Time.</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="n">str2Time</span><span class="p">(</span><span class="n">str</span> <span class="m">8</span> <span class="n">_timeStr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>     <span class="n">time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">))</span> <span class="p">*</span> <span class="m">3600</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">))</span> <span class="p">*</span> <span class="m">60</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">2</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//This function is used to get xml string from xml file.</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">public</span> <span class="n">str</span> <span class="n">getXMLstringFromFile</span><span class="p">(</span><span class="n">str</span> <span class="n">_filepath</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">xmlstring</span><span class="p">=</span><span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">XmlDocument</span> <span class="n">document</span><span class="p">=</span><span class="k">new</span> <span class="n">XmlDocument</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">document</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">_filepath</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlstring</span><span class="p">=</span><span class="n">document</span><span class="p">.</span><span class="n">innerXml</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">xmlstring</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// this function is used to convert string to array.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">Array</span> <span class="n">str2array</span><span class="p">(</span><span class="n">str</span> <span class="n">_inputString</span><span class="p">,</span> <span class="n">str</span> <span class="n">_delimiter</span> <span class="p">=</span> <span class="err">&#39;</span><span class="s">&#34;,&#34;</span><span class="err">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span>            <span class="n">list</span>        <span class="p">=</span> <span class="n">AmcBankFunctions</span><span class="p">::</span><span class="n">strSplit</span><span class="p">(</span><span class="n">_inputString</span><span class="p">,</span> <span class="n">_delimiter</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListEnumerator</span>  <span class="n">enumerator</span>  <span class="p">=</span> <span class="n">list</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">Array</span>           <span class="n">a</span>           <span class="p">=</span> <span class="k">new</span> <span class="n">Array</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">String</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>             <span class="n">i</span>           <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>             <span class="n">tmpString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">strLen</span><span class="p">(</span><span class="n">_inputString</span><span class="p">)</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">strScan</span><span class="p">(</span><span class="n">_inputString</span><span class="p">,</span> <span class="n">_delimiter</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="n">strLen</span><span class="p">(</span><span class="n">_inputString</span><span class="p">))</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">a</span><span class="p">;</span> <span class="c1">// this is not a XTL record</span>
</span></span><span class="line"><span class="cl">    <span class="n">enumerator</span><span class="p">.</span><span class="n">reset</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">enumerator</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">tmpString</span> <span class="p">=</span> <span class="n">enumerator</span><span class="p">.</span><span class="n">current</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// Removes first substring&#39;s preceding &#34; and last substring&#39;s succeeding &#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">strLen</span><span class="p">(</span><span class="n">tmpString</span><span class="p">)</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">tmpString</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">tmpString</span> <span class="p">=</span> <span class="n">subStr</span><span class="p">(</span><span class="n">tmpString</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="n">strLen</span><span class="p">(</span><span class="n">tmpString</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">list</span><span class="p">.</span><span class="n">elements</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">                <span class="n">tmpString</span> <span class="p">=</span> <span class="n">subStr</span><span class="p">(</span><span class="n">tmpString</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="n">strLen</span><span class="p">(</span><span class="n">tmpString</span><span class="p">)-</span><span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">a</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">tmpString</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">i</span><span class="p">++;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">a</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///     Prefixes a string with a parameter provided character</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;inputString&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///     The integer that is to be converted into a string</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;outputStringLength&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///     The length of the final string being returned</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;prefixWithChar&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///     The character which to prefix the output string with</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///     The converted integer as a string with the parameter provided length (possible prefixed with provided</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">char</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">prefixString</span><span class="p">(</span><span class="n">str</span> <span class="n">inputString</span><span class="p">,</span> <span class="kt">int</span> <span class="n">outputStringLength</span><span class="p">,</span> <span class="n">str</span> <span class="m">1</span> <span class="n">prefixWithChar</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">outputString</span> <span class="p">=</span> <span class="n">inputString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">prefixWithChar</span> <span class="p">==</span> <span class="err">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">outputString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">strLen</span><span class="p">(</span><span class="n">outputString</span><span class="p">)</span> <span class="p">&lt;</span> <span class="n">outputStringLength</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">outputString</span> <span class="p">=</span> <span class="n">prefixWithChar</span> <span class="p">+</span> <span class="n">outputString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">outputString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// to test that we have access right for the the file or folder.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">client</span> <span class="n">IO_Status</span> <span class="n">writeFileAndClose</span><span class="p">(</span><span class="n">Filename</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">TextIo</span> <span class="n">textIo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">new</span> <span class="n">FileIOPermission</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="err">&#39;</span><span class="n">rw</span><span class="err">&#39;</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">textIo</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TextIo</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="sc">&#39;w&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">textIo</span><span class="p">!=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">textIo</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="err">&#39;</span><span class="n">This</span> <span class="k">is</span> <span class="n">a</span> <span class="n">test</span> <span class="n">file</span> <span class="k">for</span> <span class="n">checking</span> <span class="n">the</span> <span class="n">access</span> <span class="n">rights</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">textIo</span><span class="p">!=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">textIo</span><span class="p">.</span><span class="n">status</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">IO_Status</span><span class="p">::</span><span class="n">WriteError</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// send email using smtp</span>
</span></span><span class="line"><span class="cl"><span class="c1">//Please change the parameters accordingly for your client</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">emailSmtpSend</span><span class="p">(</span><span class="n">str</span>         <span class="n">_receiver</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                    <span class="n">str</span>         <span class="n">_subject</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                    <span class="n">str</span>         <span class="n">_body</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                    <span class="n">Filename</span>    <span class="n">_attachment</span> <span class="p">=</span> <span class="err">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">AmcBankParameters</span>                       <span class="n">amcBankParameters</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">Attachment</span>              <span class="n">attachment</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">AttachmentCollection</span>    <span class="n">attachmentCollection</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span>             <span class="n">mailFrom</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span>             <span class="n">mailTo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailMessage</span>             <span class="n">mailMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">SmtpClient</span>              <span class="n">smtpClient</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">_receiver</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">checkFailed</span><span class="p">(</span><span class="s">&#34;@ABA32081&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">amcBankParameters</span> <span class="p">=</span> <span class="n">AmcBankParameters</span><span class="p">::</span><span class="n">find</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailFrom</span>    <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span><span class="p">(</span><span class="n">amcBankParameters</span><span class="p">.</span><span class="n">SmtpSenderAddress</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailTo</span>      <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailAddress</span><span class="p">(</span><span class="n">_receiver</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailMessage</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">MailMessage</span><span class="p">(</span><span class="n">mailFrom</span><span class="p">,</span> <span class="n">mailTo</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailmessage</span><span class="p">.</span><span class="n">set_Subject</span><span class="p">(</span><span class="n">_subject</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">mailmessage</span><span class="p">.</span><span class="n">set_Body</span><span class="p">(</span><span class="n">_body</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// Adding attachment</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">_attachment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">attachment</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">Attachment</span><span class="p">(</span><span class="n">_attachment</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">attachmentCollection</span> <span class="p">=</span> <span class="n">mailMessage</span><span class="p">.</span><span class="n">get_Attachments</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">attachmentCollection</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">attachment</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">smtpClient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Mail</span><span class="p">.</span><span class="n">SmtpClient</span><span class="p">(</span><span class="n">amcBankParameters</span><span class="p">.</span><span class="n">SmtpServerName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">amcBankParameters</span><span class="p">.</span><span class="n">SmtpPortNumber</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">smtpClient</span><span class="p">.</span><span class="n">Send</span><span class="p">(</span><span class="n">mailmessage</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;@SYS80635&#34;</span><span class="p">,</span> <span class="n">_receiver</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">attachmentCollection</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span> <span class="c1">// Releases attachement resources (files)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">CLRError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// If a CLR exception occurs it is important that the exceptions is shown (which it is not per default)</span>
</span></span><span class="line"><span class="cl">        <span class="n">error</span><span class="p">(</span><span class="n">CLRInterop</span><span class="p">::</span><span class="n">getLastException</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">attachmentCollection</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span> <span class="c1">// Releases attachement resources (files)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">checkFailed</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;@ABA32082&#34;</span><span class="p">,</span>  <span class="n">_receiver</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">attachmentCollection</span><span class="p">.</span><span class="n">Dispose</span><span class="p">();</span> <span class="c1">// Releases attachement resources (files)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">checkFailed</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;@ABA32082&#34;</span><span class="p">,</span>  <span class="n">_receiver</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// archive the files.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">fileArchive</span><span class="p">(</span><span class="n">Filename</span> <span class="n">_file</span><span class="p">,</span> <span class="n">FilePath</span> <span class="n">_archivePath</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Filename</span>            <span class="n">filenameArchive</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">InteropPermission</span>   <span class="n">interopPermission</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">Set</span>                 <span class="n">interopPermissionSet</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Set</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">_archivePath</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Granting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">interopPermissionSet</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="n">interopPermission</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">assertMultiple</span><span class="p">(</span><span class="n">interopPermissionSet</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">filenameArchive</span> <span class="p">=</span> <span class="n">_archivePath</span> <span class="p">+</span> <span class="n">AmcBankFile</span><span class="p">::</span><span class="n">getFileNameAndExtension</span><span class="p">(</span><span class="n">_file</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">File</span><span class="p">::</span><span class="n">Delete</span><span class="p">(</span><span class="n">filenameArchive</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">File</span><span class="p">::</span><span class="n">Move</span><span class="p">(</span><span class="n">_file</span><span class="p">,</span> <span class="n">filenameArchive</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Reverting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// getting the filename and extesion in container.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">Filename</span> <span class="n">getFileNameAndExtension</span><span class="p">(</span><span class="n">Filename</span> <span class="n">_filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">_filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="err">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">strFmt</span><span class="p">(</span><span class="err">&#39;</span><span class="p">%</span><span class="m">1</span><span class="p">%</span><span class="m">2</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">conPeek</span><span class="p">(</span><span class="n">Global</span><span class="p">::</span><span class="n">fileNameSplit</span><span class="p">(</span><span class="n">_filename</span><span class="p">),</span> <span class="m">2</span><span class="p">),</span>     <span class="c1">// Filename</span>
</span></span><span class="line"><span class="cl">                          <span class="n">conPeek</span><span class="p">(</span><span class="n">Global</span><span class="p">::</span><span class="n">fileNameSplit</span><span class="p">(</span><span class="n">_filename</span><span class="p">),</span> <span class="m">3</span><span class="p">));</span>    <span class="c1">// File extension (including</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">prefixed</span> <span class="n">dot</span> <span class="p">(.))</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//FolderExists</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">folderExists</span><span class="p">(</span><span class="n">FilePath</span> <span class="n">_directory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">boolean</span>             <span class="n">dirExists</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">InteropPermission</span>   <span class="n">interopPermission</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">Set</span>                 <span class="n">interopPermissionSet</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Set</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Granting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">interopPermissionSet</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="n">interopPermission</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">assertMultiple</span><span class="p">(</span><span class="n">interopPermissionSet</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dirExists</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Directory</span><span class="p">::</span><span class="n">Exists</span><span class="p">(</span><span class="n">_directory</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Reverting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">dirExists</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///  internal use only.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;text&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// A String value.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// A String value.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="n">str</span> <span class="n">trimLeadingTabs</span><span class="p">(</span><span class="n">str</span> <span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">len</span> <span class="p">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">start</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">((</span><span class="n">start</span> <span class="p">&lt;=</span> <span class="n">len</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span> <span class="p">==</span> <span class="sc">&#39;\t&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="n">start</span><span class="p">++;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">text</span> <span class="p">=</span> <span class="n">substr</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">len</span> <span class="p">-</span> <span class="n">start</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">text</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///  internal use only.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// A String value.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">getClrErrorMessage</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">File</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">exceptionMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Exception</span> <span class="n">exObject</span><span class="p">,</span> <span class="n">innerException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// BP deviation documented</span>
</span></span><span class="line"><span class="cl">    <span class="n">exObject</span> <span class="p">=</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getLastException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">exObject</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// We will ignore the first message since it is always a fixed message of</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// &#34;Exception has been thrown from target of invocation&#34;, this is from the reflection API being used</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// &#34;ClrObject could not be created.&#34; - This is also of no use in most cases</span>
</span></span><span class="line"><span class="cl">        <span class="n">innerException</span> <span class="p">=</span> <span class="n">exObject</span><span class="p">.</span><span class="n">get_InnerException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span><span class="p">(</span><span class="n">innerException</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// BP deviation documented</span>
</span></span><span class="line"><span class="cl">            <span class="n">exceptionMessage</span> <span class="p">=</span> <span class="n">exceptionMessage</span> <span class="p">+</span> <span class="err">#</span><span class="n">delimiterSpace</span> <span class="p">+</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getAnyTypeForObject</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">innerException</span><span class="p">.</span><span class="n">get_Message</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            <span class="n">innerException</span> <span class="p">=</span> <span class="n">innerException</span><span class="p">.</span><span class="n">get_InnerException</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">exceptionMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Parse date from string</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">date</span> <span class="n">parseDate</span><span class="p">(</span><span class="n">str</span> <span class="n">dateText</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">dateTimeText</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">dateTimeObject</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">utcdatetime</span> <span class="n">dateTimeValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">date</span> <span class="n">dateValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dateTimeText</span> <span class="p">=</span> <span class="n">strFmt</span><span class="p">(</span><span class="err">&#39;</span><span class="p">%</span><span class="m">1</span><span class="n">T00</span><span class="p">:</span><span class="m">00</span><span class="p">:</span><span class="m">00</span><span class="n">Z</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">dateText</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// BP Deviation Documented</span>
</span></span><span class="line"><span class="cl">    <span class="n">dateTimeObject</span> <span class="p">=</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Dynamics</span><span class="p">.</span><span class="n">IntegrationFramework</span><span class="p">.</span><span class="n">Util</span><span class="p">::</span><span class="n">ParseXmlDateTime</span><span class="p">(</span><span class="n">dateTimeText</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// If the returned object is null, then deserialization failed</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">CLRInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;@SYS112380&#34;</span><span class="p">,</span> <span class="n">dateText</span><span class="p">,</span> <span class="n">enum2str</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Date</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dateTimeValue</span> <span class="p">=</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getAnyTypeForObject</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// If the utcdatetime value is null, then the value is outside the valid range</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// unless the input was a null datetime</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">dateTimeValue</span> <span class="p">==</span> <span class="n">utcDateTimeNull</span><span class="p">()</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">AifUtil</span><span class="p">::</span><span class="n">isNullDateTime</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;@SYS112380&#34;</span><span class="p">,</span> <span class="n">dateText</span><span class="p">,</span> <span class="n">enum2str</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Date</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dateValue</span> <span class="p">=</span> <span class="n">DateTimeUtil</span><span class="p">::</span><span class="n">date</span><span class="p">(</span><span class="n">dateTimeValue</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">dateValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Parse DateTime from string</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">utcdatetime</span> <span class="n">parseDateTime</span><span class="p">(</span><span class="n">str</span> <span class="n">dateTimeText</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">DateTimeKind</span> <span class="n">expectedDateTimeKind</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">ClrObject</span> <span class="n">dateTimeObject</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">utcdatetime</span> <span class="n">dateTimeValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">DateTime</span> <span class="n">systemDateTimeValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// BP Deviation Documented</span>
</span></span><span class="line"><span class="cl">    <span class="n">dateTimeObject</span> <span class="p">=</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Dynamics</span><span class="p">.</span><span class="n">IntegrationFramework</span><span class="p">.</span><span class="n">Util</span><span class="p">::</span><span class="n">ParseXmlDateTime</span><span class="p">(</span><span class="n">dateTimeText</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// If the returned object is null, then deserialization failed</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">CLRInterop</span><span class="p">::</span><span class="n">isNull</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;@SYS112380&#34;</span><span class="p">,</span> <span class="n">dateTimeText</span><span class="p">,</span> <span class="n">enum2str</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">UtcDateTime</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">dateTimeValue</span> <span class="p">=</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getAnyTypeForObject</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// If the utcdatetime value is null, then the value is outside the valid range</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// unless the input was a null datetime</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">dateTimeValue</span> <span class="p">==</span> <span class="n">utcDateTimeNull</span><span class="p">()</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">AifUtil</span><span class="p">::</span><span class="n">isNullDateTime</span><span class="p">(</span><span class="n">dateTimeObject</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;@SYS112380&#34;</span><span class="p">,</span> <span class="n">dateTimeText</span><span class="p">,</span> <span class="n">enum2str</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">UtcDateTime</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// If the value is of unexpected kind, throw an error.</span>
</span></span><span class="line"><span class="cl">    <span class="n">systemDateTimeValue</span> <span class="p">=</span> <span class="n">dateTimeObject</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">systemDateTimeValue</span><span class="p">.</span><span class="n">get_Kind</span><span class="p">()</span> <span class="p">!=</span> <span class="n">expectedDateTimeKind</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;@SYS112380&#34;</span><span class="p">,</span> <span class="n">dateTimeText</span><span class="p">,</span> <span class="n">enum2str</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">UtcDateTime</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">dateTimeValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// get the sequence number for the dateformat.</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">getSequenceForDateFormat</span><span class="p">(</span> <span class="n">DateFormat</span> <span class="n">_dateFormat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">switch</span> <span class="p">(</span><span class="n">_dateFormat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">YMD</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">321</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">DMY</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">123</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">DYM</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">132</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">MDY</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">213</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">MYD</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">231</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">DateFormat</span><span class="p">::</span><span class="n">YDM</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">312</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">default</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="m">123</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// returns time from str.</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="n">str2Time</span><span class="p">(</span><span class="n">str</span> <span class="m">8</span> <span class="n">_timeStr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>     <span class="n">time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">))</span> <span class="p">*</span> <span class="m">3600</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">))</span> <span class="p">*</span> <span class="m">60</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">time</span> <span class="p">+=</span> <span class="n">str2int</span><span class="p">(</span><span class="n">substr</span><span class="p">(</span><span class="n">_timeStr</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">2</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// &lt;CostCenter:Department&gt; _dimaatributesString,</span>
</span></span><span class="line"><span class="cl"><span class="c1">// &lt;1010:MBS&gt; dimValueString</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">RecId</span> <span class="n">generateDefaultDimension</span><span class="p">(</span><span class="n">Str</span>                        <span class="n">_dimValueString</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                             <span class="n">str</span>                        <span class="n">_dimaatributesString</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                             <span class="n">str</span>                        <span class="n">_delimeter</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span>                           <span class="n">dimAttributeList</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                        <span class="n">dimValueList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>                                 <span class="n">j</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">RecId</span>                               <span class="n">defDimRecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttributeValueSetStorage</span>   <span class="n">storage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">_dimaatributesString</span> <span class="p">&amp;&amp;</span> <span class="n">_dimValueString</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">dimAttributeList</span> <span class="p">=</span> <span class="n">str2con</span><span class="p">(</span><span class="n">_sourceProperties</span><span class="p">,</span> <span class="n">_delimeter</span><span class="p">,</span><span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">dimValueList</span>     <span class="p">=</span> <span class="n">str2con</span><span class="p">(</span><span class="n">_dimValueString</span><span class="p">,</span> <span class="n">_delimeter</span><span class="p">,</span><span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(!</span><span class="n">dimValueList</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">throw</span> <span class="n">error</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;This dimvalue string was not available&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">storage</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionAttributeValueSetStorage</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">j</span><span class="p">=</span><span class="m">1</span><span class="p">;</span><span class="n">j</span><span class="p">&lt;=</span><span class="n">conLen</span><span class="p">(</span><span class="n">dimValueList</span><span class="p">);</span><span class="n">j</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span><span class="p">(</span><span class="n">conPeek</span><span class="p">(</span><span class="n">dimValueList</span><span class="p">,</span><span class="n">j</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">DMFDimensionHelper</span><span class="p">::</span><span class="n">dynamicDimensionCreation</span><span class="p">(</span><span class="n">dimAttributeList</span><span class="p">,</span> <span class="n">dimValueList</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="n">storage</span><span class="p">.</span><span class="n">addItem</span><span class="p">(</span><span class="n">DimensionAttributeValue</span><span class="p">::</span><span class="n">findByDimensionAttributeAndValue</span><span class="p">(</span><span class="n">DimensionAttribute</span><span class="p">::</span><span class="n">findByName</span><span class="p">(</span><span class="n">conPeek</span><span class="p">(</span><span class="n">dimAttributeList</span><span class="p">,</span><span class="n">j</span><span class="p">)),</span> <span class="n">conPeek</span><span class="p">(</span><span class="n">dimValueList</span><span class="p">,</span><span class="n">j</span><span class="p">),</span> <span class="k">false</span><span class="p">,</span> <span class="k">true</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">defDimRecId</span> <span class="p">=</span> <span class="n">storage</span><span class="p">.</span><span class="n">save</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">defDimRecId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Generate the Dimension String from default dimension</span>
</span></span><span class="line"><span class="cl"><span class="c1">// &lt;CostCenter:Department&gt; dimAttributeString</span>
</span></span><span class="line"><span class="cl"><span class="c1">// &lt;1010:MBS&gt; dimValueString</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">generateDefaultDimensionStr</span><span class="p">(</span><span class="n">RefRecId</span>  <span class="n">_defaultDimension</span><span class="p">,</span><span class="n">str</span> <span class="n">_dimattrString</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                                  <span class="n">str</span> <span class="n">_delimeter</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">DMFDefaultDimensionStr</span>              <span class="n">defaultDimensionStr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttributeValueSetItem</span>      <span class="n">setItem</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttributeValue</span>             <span class="n">dimAttrValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttribute</span>                  <span class="n">dimAttr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span>                           <span class="n">con</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Int</span>                                 <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionValue</span>                      <span class="n">displayValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">con</span> <span class="p">=</span> <span class="n">str2con</span><span class="p">(</span><span class="n">_dimattrString</span><span class="p">,</span><span class="n">_delimeter</span><span class="p">,</span><span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">_dimattrString</span> <span class="p">&amp;&amp;</span> <span class="n">_defaultDimension</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">conLen</span><span class="p">(</span><span class="n">con</span><span class="p">);</span> <span class="n">i</span> <span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">displayValue</span> <span class="p">=</span> <span class="n">conPeek</span><span class="p">(</span><span class="n">con</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">select</span> <span class="n">RecId</span><span class="p">,</span> <span class="n">DisplayValue</span> <span class="k">from</span> <span class="n">setItem</span> <span class="k">where</span> <span class="n">setItem</span><span class="p">.</span><span class="n">DimensionAttributeValueSet</span> <span class="p">==</span> <span class="n">_defaultDimension</span>
</span></span><span class="line"><span class="cl">                <span class="k">join</span> <span class="n">RecId</span> <span class="k">from</span> <span class="n">dimAttrValue</span> <span class="k">where</span>
</span></span><span class="line"><span class="cl">                     <span class="n">dimAttrValue</span><span class="p">.</span><span class="n">RecId</span> <span class="p">==</span> <span class="n">setItem</span><span class="p">.</span><span class="n">DimensionAttributeValue</span> <span class="p">&amp;&amp;</span>
</span></span><span class="line"><span class="cl">                     <span class="n">dimAttrValue</span><span class="p">.</span><span class="n">IsDeleted</span> <span class="p">==</span> <span class="k">false</span>
</span></span><span class="line"><span class="cl">                 <span class="k">join</span> <span class="n">RecId</span> <span class="k">from</span> <span class="n">dimAttr</span>
</span></span><span class="line"><span class="cl">                    <span class="k">where</span>  <span class="n">dimAttr</span><span class="p">.</span><span class="n">RecId</span> <span class="p">==</span> <span class="n">dimAttrValue</span><span class="p">.</span><span class="n">DimensionAttribute</span>
</span></span><span class="line"><span class="cl">                       <span class="p">&amp;&amp;</span>  <span class="n">dimAttr</span><span class="p">.</span><span class="n">Name</span>  <span class="p">==</span> <span class="n">displayValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="n">defaultDimensionStr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">defaultDimensionStr</span> <span class="p">+=</span> <span class="n">_delimeter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="n">defaultDimensionStr</span> <span class="p">+=</span> <span class="n">setItem</span><span class="p">.</span><span class="n">DisplayValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">defaultDimensionStr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="n">strLineCount</span><span class="p">(</span><span class="n">str</span> <span class="n">freeTxt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>  <span class="n">start</span>  <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>  <span class="n">end</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>  <span class="n">length</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>  <span class="n">lines</span>  <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">length</span><span class="p">=</span><span class="n">strLen</span><span class="p">(</span><span class="n">freeTxt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">end</span> <span class="p">=</span> <span class="n">strScan</span><span class="p">(</span><span class="n">freeTxt</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">start</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">lines</span><span class="p">+=</span><span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">start</span><span class="p">=</span><span class="n">end</span><span class="p">+</span><span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">end</span> <span class="p">=</span> <span class="n">strScan</span><span class="p">(</span><span class="n">freeTxt</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">            <span class="n">start</span><span class="p">=</span><span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(!</span><span class="n">lines</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">lines</span><span class="p">=</span><span class="m">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">lines</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Determines whether the specified string is a date time string.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;_value&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// The string to check.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// true if it is date time; otherwise, false.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;remarks&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Input can have a format like &#34;5/7/2010 12:00:00 AM&#34; or &#34;2010-05-07T00:00:00”. Both cases will be</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// handled.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/remarks&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">boolean</span> <span class="n">isDateTimeStr</span><span class="p">(</span><span class="n">str</span> <span class="n">_value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">boolean</span> <span class="n">isDateTime</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">RegularExpressions</span><span class="p">.</span><span class="n">Regex</span> <span class="n">regex</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">RegularExpressions</span><span class="p">.</span><span class="n">Match</span> <span class="n">regexMatch</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#define.MatchTimeRegex(@&#34;[\sT]\d{1,2}:\d{1,2}:\d{1,2}&#34;)</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#define.ISODateTimeIdentifier(&#34;T&#34;)</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#define.ZeroTime(&#34;00:00:00&#34;)</span>
</span></span><span class="line"><span class="cl">    <span class="cp">#define.DefaultLCID(1033)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// check if in ISO format.</span>
</span></span><span class="line"><span class="cl">    <span class="n">isDateTime</span> <span class="p">=</span> <span class="n">strFind</span><span class="p">(</span><span class="n">_value</span><span class="p">,</span> <span class="err">#</span><span class="n">ISODateTimeIdentifier</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">strLen</span><span class="p">(</span><span class="n">_value</span><span class="p">))</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="n">isDateTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// search for a time on the value</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// BP deviation documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">regex</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">RegularExpressions</span><span class="p">.</span><span class="n">Regex</span><span class="p">(</span><span class="err">#</span><span class="n">MatchTimeRegex</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// BP deviation documented</span>
</span></span><span class="line"><span class="cl">        <span class="n">regexMatch</span> <span class="p">=</span> <span class="n">regex</span><span class="p">.</span><span class="n">Match</span><span class="p">(</span><span class="n">_value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">isDateTime</span> <span class="p">=</span> <span class="n">regexMatch</span><span class="p">.</span><span class="n">get_Success</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">isDateTime</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Swapping the key value from map</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Creates a &lt;c&gt;Map&lt;/c&gt; class with the value and key swapped.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;_key2ValueMap&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// Map that has the keys and values swapped.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// A map that has the value switched with the keys.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">Map</span> <span class="n">getValue2KeyMap</span><span class="p">(</span><span class="n">Map</span> <span class="n">_key2ValueMap</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// reverses the valid values map. The original map contains &lt;key, label&gt;, we will create a &lt;label, key&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Map</span> <span class="n">value2KeyMap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MapEnumerator</span> <span class="n">mapEnum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">_key2ValueMap</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">value2KeyMap</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Map</span><span class="p">(</span><span class="n">_key2ValueMap</span><span class="p">.</span><span class="n">valueType</span><span class="p">(),</span> <span class="n">_key2ValueMap</span><span class="p">.</span><span class="n">keyType</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="n">mapEnum</span> <span class="p">=</span> <span class="n">_key2ValueMap</span><span class="p">.</span><span class="n">getEnumerator</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span><span class="p">(</span><span class="n">mapEnum</span><span class="p">.</span><span class="n">moveNext</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">value2KeyMap</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">mapEnum</span><span class="p">.</span><span class="n">currentValue</span><span class="p">(),</span> <span class="n">mapEnum</span><span class="p">.</span><span class="n">currentKey</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">value2KeyMap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="c1">//Show viewhistory on form datasources if you have ValidaTimeState Enabled DateTime enabled on the tables of that form. </span>
</span></span><span class="line"><span class="cl"><span class="c1">//create this method in Global class so you can call whereever you want in form button click as below.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">void</span> <span class="n">clicked</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">buttonHistoryClick</span><span class="p">(</span><span class="n">element</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">Super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">public</span> <span class="k">void</span> <span class="n">buttonHistoryClick</span><span class="p">(</span><span class="n">FormRun</span> <span class="n">_formRun</span><span class="p">,</span> <span class="n">FormButtonControl</span> <span class="n">_fbc</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">void</span> <span class="n">changeDataSources</span><span class="p">(</span><span class="n">ValidTimeStateAutoQuery</span> <span class="n">_from</span><span class="p">,</span> <span class="n">ValidTimeStateAutoQuery</span> <span class="n">_to</span><span class="p">,</span> <span class="n">boolean</span> <span class="n">_allowDelete</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Counter</span>         <span class="n">dataSourceNo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">FormDataSource</span>  <span class="n">formDataSource</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">dataSourceNo</span><span class="p">=</span><span class="m">1</span><span class="p">;</span><span class="n">_formRun</span><span class="p">.</span><span class="n">dataSourceCount</span><span class="p">()&gt;=</span><span class="n">dataSourceNo</span><span class="p">;</span><span class="n">dataSourceNo</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">formDataSource</span> <span class="p">=</span> <span class="n">_formRun</span><span class="p">.</span><span class="n">dataSource</span><span class="p">(</span><span class="n">dataSourceNo</span><span class="p">)</span> <span class="k">as</span> <span class="n">FormDataSource</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">formDataSource</span><span class="p">.</span><span class="n">validTimeStateAutoQuery</span><span class="p">()</span> <span class="p">==</span> <span class="n">_from</span> <span class="p">&amp;&amp;</span> <span class="k">new</span> <span class="n">DictTable</span><span class="p">(</span><span class="n">formDataSource</span><span class="p">.</span><span class="n">table</span><span class="p">()).</span><span class="n">isValidTimeStateTable</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">formDataSource</span><span class="p">.</span><span class="n">validTimeStateAutoQuery</span><span class="p">(</span><span class="n">_to</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="k">switch</span> <span class="p">(</span><span class="n">_to</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="k">case</span> <span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">AsOfDate</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">validTimeStateAutoQuery</span><span class="p">(</span><span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">AsOfDate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">query</span><span class="p">().</span><span class="n">resetValidTimeStateQueryType</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">allowDelete</span><span class="p">(</span><span class="n">_allowDelete</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                        <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">case</span> <span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">DateRange</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">validTimeStateAutoQuery</span><span class="p">(</span><span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">DateRange</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">query</span><span class="p">().</span><span class="n">validTimeStateDateTimeRange</span><span class="p">(</span><span class="n">DateTimeUtil</span><span class="p">::</span><span class="n">minValue</span><span class="p">(),</span> <span class="n">DateTimeUtil</span><span class="p">::</span><span class="n">maxValue</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                        <span class="n">formDataSource</span><span class="p">.</span><span class="n">allowDelete</span><span class="p">(</span><span class="n">_allowDelete</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                        <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="n">formDataSource</span><span class="p">.</span><span class="n">executeQuery</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">_fbc</span><span class="p">.</span><span class="n">labelText</span><span class="p">()</span> <span class="p">==</span> <span class="s">&#34;@SYS110266&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">changeDataSources</span><span class="p">(</span><span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">AsOfDate</span><span class="p">,</span> <span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">DateRange</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">_fbc</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="s">&#34;Stoping History&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">_fbc</span><span class="p">.</span><span class="n">normalImage</span><span class="p">(</span><span class="s">&#34;10006&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">changeDataSources</span><span class="p">(</span><span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">DateRange</span><span class="p">,</span> <span class="n">ValidTimeStateAutoQuery</span><span class="p">::</span><span class="n">AsOfDate</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">_fbc</span><span class="p">.</span><span class="n">Text</span><span class="p">(</span><span class="s">&#34;@SYS110266
</span></span></span><span class="line"><span class="cl"><span class="s"></span>        <span class="n">_fbc</span><span class="p">.</span><span class="n">normalImage</span><span class="p">(</span><span class="s">&#34;10007&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">// this method is used to create filenameTimeStamp.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="n">FileName</span> <span class="n">createFilenameTimeStamp</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">FileName</span>    <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Microsoft</span><span class="p">.</span><span class="n">Dynamics</span><span class="p">.</span><span class="n">IntegrationFramework</span><span class="p">.</span><span class="n">Adapter</span><span class="p">.</span><span class="n">FileSystem</span>       <span class="n">fileSystem</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">Aif</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">fileSystem</span>      <span class="p">=</span> <span class="n">AifUtil</span><span class="p">::</span><span class="n">getClrObject</span><span class="p">(</span><span class="err">#</span><span class="n">FileSystemProgId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ret</span> <span class="p">=</span> <span class="n">fileSystem</span><span class="p">.</span><span class="n">GetCurrentTimestamp</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// This method is used to split the string, and returns the conatiner with the position defined in the parameter</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">rsaStrSplit</span><span class="p">(</span><span class="n">str</span> <span class="n">_splitString</span><span class="p">,</span><span class="n">str</span> <span class="n">_splitchar</span><span class="p">,</span><span class="kt">int</span> <span class="n">_pos</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span> <span class="n">strlist</span><span class="p">=</span><span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">String</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListIterator</span>    <span class="n">iterator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span>       <span class="n">packedList</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">strlist</span><span class="p">=</span><span class="n">strSplit</span><span class="p">(</span><span class="n">_splitString</span><span class="p">,</span><span class="n">_splitchar</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">iterator</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ListIterator</span><span class="p">(</span><span class="n">strlist</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">iterator</span><span class="p">.</span><span class="n">more</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">packedList</span> <span class="p">+=</span> <span class="n">iterator</span><span class="p">.</span><span class="k">value</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="n">iterator</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">conPeek</span><span class="p">(</span><span class="n">packedList</span><span class="p">,</span><span class="n">_pos</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">encrypt</span><span class="p">(</span><span class="n">str</span> <span class="n">_input</span><span class="p">,</span> <span class="n">str</span> <span class="n">_salt</span> <span class="p">=</span> <span class="err">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Security</span><span class="p">.</span><span class="n">Cryptography</span><span class="p">.</span><span class="n">SHA512Managed</span>  <span class="n">sha512managed</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Security</span><span class="p">.</span><span class="n">Cryptography</span><span class="p">.</span><span class="n">SHA512Managed</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">Encoding</span>                        <span class="n">encoding</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Text</span><span class="p">.</span><span class="n">Encoding</span><span class="p">::</span><span class="n">get_UTF8</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Byte</span><span class="p">[]</span>                               <span class="n">inputBytes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Byte</span><span class="p">[]</span>                               <span class="n">resultBytes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>                                         <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span>                                         <span class="n">returnString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">).</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">inputBytes</span> <span class="p">=</span> <span class="n">encoding</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">strLwr</span><span class="p">(</span><span class="n">_salt</span><span class="p">)</span> <span class="p">+</span> <span class="n">_input</span><span class="p">);</span> <span class="c1">// Convert lower case salt + input into byte array</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// The input is hashed 1024 times for attack resiliency</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">1024</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">resultBytes</span> <span class="p">=</span> <span class="n">resultBytes</span> <span class="p">?</span> <span class="n">resultBytes</span> <span class="p">:</span> <span class="n">inputBytes</span><span class="p">;</span> <span class="c1">// First loop uses input for hashing</span>
</span></span><span class="line"><span class="cl">        <span class="n">resultBytes</span> <span class="p">=</span> <span class="n">sha512managed</span><span class="p">.</span><span class="n">ComputeHash</span><span class="p">(</span><span class="n">resultBytes</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">returnString</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Convert</span><span class="p">::</span><span class="n">ToBase64String</span><span class="p">(</span><span class="n">resultBytes</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">returnString</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">static</span> <span class="n">Map</span> <span class="n">fileGetList</span><span class="p">(</span><span class="n">FilePath</span>            <span class="n">_filePathArchive</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="n">Map</span>                 <span class="n">mapFiles</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">InteropPermission</span>   <span class="n">interopPermission</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InteropPermission</span><span class="p">(</span><span class="n">InteropKind</span><span class="p">::</span><span class="n">ClrInterop</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">Set</span>                 <span class="n">interopPermissionSet</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Set</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">System</span><span class="p">.</span><span class="n">Array</span>        <span class="n">arrayFiles</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">int</span>                 <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Granting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">interopPermissionSet</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="n">interopPermission</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">assertMultiple</span><span class="p">(</span><span class="n">interopPermissionSet</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">mapFiles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Map</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">String</span><span class="p">,</span> <span class="n">Types</span><span class="p">::</span><span class="n">String</span><span class="p">);</span> <span class="c1">// Key = return file | Value = archive path</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(!</span><span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Directory</span><span class="p">::</span><span class="n">Exists</span><span class="p">(</span><span class="n">_filePathArchive</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">             <span class="k">throw</span>  <span class="n">error</span><span class="p">(</span><span class="s">&#34;Path doesnt exist&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">arrayFiles</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Directory</span><span class="p">::</span><span class="n">GetFiles</span><span class="p">(</span><span class="n">_filePathArchive</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// CLRInterop::getAnyTypeForObject method is used to handle difference in AX and System types (e.g. System.Int32 != int)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">CLRInterop</span><span class="p">::</span><span class="n">getAnyTypeForObject</span><span class="p">(</span><span class="n">arrayFiles</span><span class="p">.</span><span class="n">get_Length</span><span class="p">());</span> <span class="n">i</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="n">mapFiles</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">CLRInterop</span><span class="p">::</span><span class="n">getAnyTypeForObject</span><span class="p">(</span><span class="n">arrayFiles</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="n">i</span><span class="p">)),</span> <span class="n">_filePathArchive</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Reverting file permission rights</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">mapFiles</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">///  Gets the SenderID from AIF xml .</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/summary&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;param name=&#34;messagePartsXml&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// An &lt;c&gt;AifXml&lt;/c&gt; value.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/param&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// An instance of the &lt;c&gt;str document Namespace&lt;/c&gt; class.</span>
</span></span><span class="line"><span class="cl"><span class="cs">/// &lt;/returns&gt;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="n">str</span> <span class="n">getSenderIDValue</span><span class="p">(</span><span class="n">AifXml</span> <span class="n">messagePartsXml</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="n">XmlTextReader</span>               <span class="n">xmlReader</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="k">value</span><span class="p">,</span><span class="n">currentElement</span><span class="p">,</span><span class="n">pureElement</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="err">#</span><span class="n">Aif</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlReader</span> <span class="p">=</span> <span class="n">XmlTextReader</span><span class="p">::</span><span class="n">newXml</span><span class="p">(</span><span class="n">messagePartsXml</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">xmlReader</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">switch</span> <span class="p">(</span><span class="n">xmlReader</span><span class="p">.</span><span class="n">nodeType</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">             <span class="k">case</span> <span class="n">XmlNodeType</span><span class="p">::</span><span class="n">Element</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                  <span class="n">currentElement</span> <span class="p">=</span> <span class="n">xmlReader</span><span class="p">.</span><span class="n">name</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                 <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">             <span class="k">case</span> <span class="n">XmlNodeType</span><span class="p">::</span><span class="n">Text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                  <span class="n">pureElement</span> <span class="p">=</span> <span class="n">subStr</span><span class="p">(</span><span class="n">currentElement</span><span class="p">,</span><span class="n">strFind</span><span class="p">(</span><span class="n">currentElement</span><span class="p">,</span><span class="sc">&#39;:&#39;</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">256</span><span class="p">)+</span><span class="m">1</span><span class="p">,</span><span class="m">256</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                    <span class="k">switch</span> <span class="p">(</span><span class="n">pureElement</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="p">{</span>
</span></span><span class="line"><span class="cl">                       <span class="k">case</span> <span class="s">&#34;SenderId&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="k">value</span><span class="p">=</span><span class="n">xmlReader</span><span class="p">.</span><span class="k">value</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                            <span class="k">return</span> <span class="k">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                        <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="cl">              <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Thu, 29 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>The workflow process moves purchase requisitions through the review process, from an initial status of <strong>Draft</strong> to a final status of <strong>Approved</strong>. When a purchase requisition is submitted for review, the workflow process is started. After a purchase requisition is approved, a purchase order can be generated for the purchase requisition lines and submitted to the vendor for order fulfillment.</p>
<p>We will use AIF standard service for import PR from outside, service name <code>PurchReqImportService</code>.</p>
<p>in <code>AxPurchReqTable</code> class and <code>setPurchReqId()</code> method</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">void</span> <span class="n">setPurchReqId</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">NumberSequenceReference</span> <span class="n">numberSequenceReference</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isMethodExecuted</span><span class="p">(</span><span class="n">funcName</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isFieldSetExternally</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchReqTable</span><span class="p">,</span> <span class="n">PurchReqId</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isSetMethodsCalledFromSave</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(!</span><span class="k">this</span><span class="p">.</span><span class="n">purchReqTable</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">numberSequenceReference</span> <span class="p">=</span> <span class="n">PurchReqTable</span><span class="p">::</span><span class="n">numRefPurchReqId</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="k">this</span><span class="p">.</span><span class="n">checkNumber</span><span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">.</span><span class="n">numberSequenceTable</span><span class="p">(),</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchReqTable</span><span class="p">,</span><span class="n">PurchReqId</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="n">parmPurchReqId</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">.</span><span class="n">NumberSequenceId</span> <span class="p">&amp;&amp;</span> <span class="n">numberSequenceReference</span><span class="p">.</span><span class="n">numberSequenceTable</span><span class="p">().</span><span class="n">Continuous</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">NumberSeq</span><span class="p">::</span><span class="n">newReserveNum</span><span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">).</span><span class="n">reserve</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">parmPurchReqId</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isFieldSet</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchReqTable</span><span class="p">,</span> <span class="n">PurchReqId</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(!</span><span class="k">this</span><span class="p">.</span><span class="n">parmPurchReqId</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isSetMethodsCalledFromSave</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//this.parmPurchReqId(NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num());</span>
</span></span><span class="line"><span class="cl">                <span class="n">numberSequenceReference</span> <span class="p">=</span> <span class="n">PurchReqTable</span><span class="p">::</span><span class="n">numRefPurchReqId</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span><span class="p">(</span><span class="n">numberSequenceReference</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="k">this</span><span class="p">.</span><span class="n">setField</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchReqTable</span><span class="p">,</span> <span class="n">PurchReqId</span><span class="p">),</span> <span class="n">NumberSeq</span><span class="p">::</span><span class="n">newGetNum</span><span class="p">(</span><span class="n">PurchParameters</span><span class="p">::</span><span class="n">numRefPurchReqId</span><span class="p">()).</span><span class="n">num</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="k">this</span><span class="p">.</span><span class="n">setField</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">PurchReqTable</span><span class="p">,</span> <span class="n">PurchReqId</span><span class="p">),</span> <span class="k">this</span><span class="p">.</span><span class="n">parmExternalSourceID</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Base on this method, you could know how System get PurchReqId.</p>
<h3 id="how-to-do">How to do</h3>
<p>Go to Inbound ports form to create new service with <code>NETTCP</code> adapter, choose service operations likes below:</p>
<p></p>
<p>Then <code>active</code> AIF inbound service</p>
<h3 id="consume-pruchase-requisition-service">Consume Pruchase requisition service</h3>
<p>Open visual studio and create new console project.</p>
<p></p>
<p>Add service reference</p>
<p><code>http://DEV-ERP:8101/DynamicsAx/Services/MavPurchaseRequisition</code></p>
<p></p>
<p></p>
<p>This one just for demo, so I just create code base on required fields of AIF.</p>
<p></p>
<p>Here is the code in <code>main</code> method</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">PurchReqImportServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">PurchReqImportServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;BGR&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;En-us&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchReqLine</span> <span class="n">purchReqLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchReqLine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Requisitioner</span> <span class="p">=</span> <span class="s">&#34;000007&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">BuyingLegalEntity</span> <span class="p">=</span> <span class="s">&#34;BGR&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;110329&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchUnitOfMeasure</span> <span class="p">=</span> <span class="s">&#34;Box&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">CurrencyCode</span> <span class="p">=</span> <span class="s">&#34;KRW&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchQty</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchQtySpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PriceUnit</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PriceUnitSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Create an instance of the document class.</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchReqTable</span> <span class="n">purchReqTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchReqTable</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchReqId</span> <span class="p">=</span> <span class="s">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchReqName</span> <span class="p">=</span> <span class="s">&#34;Purch Req by Max&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">ExternalSourceID</span> <span class="p">=</span> <span class="s">&#34;PR002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">ExternalSourceName</span> <span class="p">=</span> <span class="s">&#34;PR002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">AutoSubmitToWorkflowRequired</span> <span class="p">=</span> <span class="n">AxdEnum_NoYes</span><span class="p">.</span><span class="n">No</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">StatusToBeSaved</span> <span class="p">=</span> <span class="n">AxdEnum_PurchReqCreationStatus</span><span class="p">.</span><span class="n">Draft</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">RequisitionStatus</span> <span class="p">=</span> <span class="n">AxdEnum_PurchReqRequisitionStatus</span><span class="p">.</span><span class="n">Draft</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">RequisitionStatusSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">RequiredDate</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="p">(</span><span class="m">2016</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">30</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="n">RequiredDateSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">TransDate</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="p">(</span><span class="m">2016</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">30</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="n">TransDateSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchReqLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchReqLine</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">purchReqLine</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Create instances of the entities that are used in the service and</span>
</span></span><span class="line"><span class="cl"><span class="c1">// set the needed fields on those entities.</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdPurchReqImport</span> <span class="n">purchReq</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdPurchReqImport</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchReqTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchReqTable</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">purchReqTable</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">client</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">purchReq</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Run it and check result in AX</p>
<p></p>
<p>Please prefer previous <a href="https://dynamics365.github.io/ax2012/integration/CRUD-Purchase-order-using-AIF-in-Dynamics-AX-2012-R3/" target="_blank" rel="noopener noreffer ">post</a> for another operations</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>CRUD Purchase order using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Wed, 28 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>Due to Purchase order doesn’t have Standard document service so we have to create new Document service for that using AIF wizards.</p>
<p>I’m using AIF document service with <code>NETTCP</code> or <code>HTTP</code> Adapter to Create Purchase order service, here is steps</p>
<h2 id="create-query">Create Query</h2>
<p>with three <strong>datasouce</strong> (<code>PurchTable, PurchLine, InventDim</code>) likes below</p>
<p></p>
<blockquote>
<p>As best practice for Document service, name of query should be start with Axd* prefix.</p>
</blockquote>
<h2 id="using-aif-wizards">Using AIF Wizards</h2>
<p>In AX development environment, go to <em>Tools &gt; Wizards &gt; AIF document service wizards</em></p>
<p></p>
<p>Choose recent created query and click <strong>next</strong>.</p>
<h2 id="create-service-operation-and-axbc-class">Create Service operation and <code>AxBC class</code></h2>
<p></p>
<p>Click <code>next</code> and then <code>Generate</code>.</p>
<p>You will get service project in <strong>Private</strong> project</p>
<h2 id="deploy-and-create-service">Deploy and create service</h2>
<p>•	Right click on <code>PurchOrderService</code> &gt; Add-Ins &gt; Register service</p>
<p>•	System administration &gt; Setup &gt; Services and AIF &gt; Inbound ports</p>
<p>•	Click <code>New</code> on <code>Inbound ports form</code> and name the Service.</p>
<p>•	Adapter: NETTCP (it also works with HTTP adapter)</p>
<p>•	In <em>Service contract customizations</em> fast tab click <code>Service operations</code></p>
<p></p>
<p><code>Active</code> recent created Service</p>
<h2 id="consume-service-using-cnet">Consume service using C#.NET</h2>
<p>After service is activated, you can get <strong>WSDL URI</strong> likes</p>
<p><code> http://servername:port/DynamicsAx/Services/PurchaseOrder</code></p>
<p>Create console project and Add Service References, the code below
</p>
<p>In Class, I will write method to return list of <code>EnityKey</code> PurchId</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">private</span> <span class="k">static</span> <span class="n">EntityKey</span><span class="p">[]</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="kt">string</span> <span class="n">purchId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">KeyField</span> <span class="n">field</span> <span class="p">=</span> <span class="k">new</span> <span class="n">KeyField</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Field</span> <span class="p">=</span> <span class="s">&#34;PurchId&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Value</span> <span class="p">=</span> <span class="n">purchId</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span> <span class="n">key</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EntityKey</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">KeyData</span> <span class="p">=</span> <span class="k">new</span><span class="p">[]</span> <span class="p">{</span> <span class="n">field</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="k">new</span><span class="p">[]</span> <span class="p">{</span> <span class="n">key</span> <span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>Code for create purchase order </code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">dim</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventDim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">InventSiteId</span> <span class="p">=</span> <span class="s">&#34;DN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">InventLocationId</span> <span class="p">=</span> <span class="s">&#34;F10-S120&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">InventBatchId</span> <span class="p">=</span> <span class="s">&#34;BATCH001&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">purchLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchLine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;220067&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchQty</span> <span class="p">=</span> <span class="m">15</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchUnit</span><span class="p">=</span>  <span class="s">&#34;ea&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">InventDim</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventDim</span><span class="p">[]</span> <span class="p">{</span> <span class="n">dim</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">purchTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchTable</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">OrderAccount</span> <span class="p">=</span> <span class="s">&#34;101-01-75441&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">LanguageId</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">CurrencyCode</span> <span class="p">=</span> <span class="s">&#34;KRW&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchName</span> <span class="p">=</span> <span class="s">&#34;AIF PO Test&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchLine</span><span class="p">[]</span> <span class="p">{</span> <span class="n">purchLine</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">AxdMav_PurchOrderService</span> <span class="n">purchOrder</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdMav_PurchOrderService</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">purchOrder</span><span class="p">.</span><span class="n">PurchTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchTable</span><span class="p">[]</span> <span class="p">{</span> <span class="n">purchTable</span> <span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">callContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Mav_PurchOrderServiceServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Mav_PurchOrderServiceServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span><span class="p">[]</span> <span class="n">purchOrderCreatedEntity</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">purchOrder</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span> <span class="n">purchOrderCreated</span> <span class="p">=</span> <span class="p">(</span><span class="n">EntityKey</span><span class="p">)</span><span class="n">purchOrderCreatedEntity</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;The purch order created has a Purch ID of &#34;</span> <span class="p">+</span> <span class="n">purchOrderCreated</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>Code for read purchase order </code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">EntityKey</span><span class="p">[]</span> <span class="n">entityKeyList</span> <span class="p">=</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="s">&#34;BGR-000054&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">callContext</span>      <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">callContext</span><span class="p">.</span><span class="n">Company</span>          <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">Mav_PurchOrderServiceServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Mav_PurchOrderServiceServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">AxdMav_PurchOrderService</span> <span class="n">purchOrders</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">read</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchTable</span><span class="p">[]</span> <span class="n">purchTables</span> <span class="p">=</span> <span class="n">purchOrders</span><span class="p">.</span><span class="n">PurchTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchTable</span>    <span class="n">purchTable</span> <span class="p">=</span> <span class="n">purchTables</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchLine</span> <span class="n">purchLine</span> <span class="p">=</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchLine</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Purch Name: &#34;</span> <span class="p">+</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchName</span><span class="p">);</span>            
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Order Account: &#34;</span> <span class="p">+</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">OrderAccount</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Language Id: &#34;</span> <span class="p">+</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">LanguageId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Qty: &#34;</span> <span class="p">+</span> <span class="n">purchLine</span><span class="p">.</span><span class="n">PurchQty</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Item Id: &#34;</span> <span class="p">+</span> <span class="n">purchLine</span><span class="p">.</span><span class="n">ItemId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">client</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">			
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>Code for update purchase order </code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">Mav_PurchOrderServiceServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Mav_PurchOrderServiceServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">callContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">callContext</span><span class="p">.</span><span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">EntityKey</span><span class="p">[]</span> <span class="n">entityKeyList</span> <span class="p">=</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="s">&#34;BGR-000078&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdMav_PurchOrderService</span> <span class="n">purchOrders</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">read</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//salesOrders.GetHashCode();</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchTable</span><span class="p">[]</span> <span class="n">purchTables</span> <span class="p">=</span> <span class="n">purchOrders</span><span class="p">.</span><span class="n">PurchTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchTable</span> <span class="n">purchTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchTable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">purchTable</span> <span class="p">=</span> <span class="n">purchTables</span><span class="p">.</span><span class="n">First</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//salesTable.GetHashCode();</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdEntity_PurchLine</span> <span class="n">purchLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">purchLine</span> <span class="p">=</span> <span class="n">purchTable</span><span class="p">.</span><span class="n">PurchLine</span><span class="p">.</span><span class="n">First</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">decimal</span> <span class="n">purchQty</span> <span class="p">=</span> <span class="m">20</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">purchLine</span><span class="p">.</span><span class="n">PurchQty</span> <span class="p">=</span> <span class="n">purchQty</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">client</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">,</span> <span class="n">purchOrders</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span> <span class="n">purchOrdersUpdated</span> <span class="p">=</span> <span class="p">(</span><span class="n">EntityKey</span><span class="p">)</span><span class="n">entityKeyList</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;The purchase order has been updated has a Purch ID of &#34;</span> <span class="p">+</span> <span class="n">purchOrdersUpdated</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Value</span> <span class="p">+</span> <span class="s">&#34; with Qty &#34;</span> <span class="p">+</span> <span class="n">purchQty</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&#34;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>Code for delete purchase order </code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">Mav_PurchOrderServiceServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Mav_PurchOrderServiceServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">callContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">callContext</span><span class="p">.</span><span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">EntityKey</span><span class="p">[]</span> <span class="n">entityKeyList</span> <span class="p">=</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="s">&#34;BGR-000054&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">client</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span> <span class="n">purchOrdersDeleted</span> <span class="p">=</span> <span class="p">(</span><span class="n">EntityKey</span><span class="p">)</span><span class="n">entityKeyList</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;The purch order has been deleted has a purch ID of &#34;</span> <span class="p">+</span> <span class="n">purchOrdersDeleted</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">	<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Insert, update, Delete order line through AIF In AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</link>
    <pubDate>Wed, 28 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</guid>
    <description><![CDATA[<p>In previous <a href="https://dynamics365.github.io/ax2012/integration/CRUD-Purchase-order-using-AIF-in-Dynamics-AX-2012-R3/" target="_blank" rel="noopener noreffer ">post</a>, I already show how to create purchase order through AIF with <code>NETTCP</code> or <code>HTTP adapter</code>. In this post, we will get little deep more about action on line of order.</p>
<p>The following code sample shows how to <code>insert</code>, <code>update</code>, <code>delete</code> a line of an existing purchase order through AIF, currently I’m using C#.NET console project for demo.</p>
<p>As Partial update, we must include just the fields to change and any fields required by the document (you can check <code>Data policies</code> in AIF Service ports form for that).</p>
<p>Also, notice how action properties are specified – no matter we do with the line, which means updating the order.</p>
<p>I’m giving you an idea how it looks like, here is the code</p>
<p><code>The first method will handle the key of AIF Service</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">private</span> <span class="k">static</span> <span class="n">EntityKey</span><span class="p">[]</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="kt">string</span> <span class="n">purchId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">KeyField</span> <span class="n">field</span> <span class="p">=</span> <span class="k">new</span> <span class="n">KeyField</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Field</span> <span class="p">=</span> <span class="s">&#34;PurchId&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Value</span> <span class="p">=</span> <span class="n">purchId</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EntityKey</span> <span class="n">key</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EntityKey</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">KeyData</span> <span class="p">=</span> <span class="k">new</span><span class="p">[]</span> <span class="p">{</span> <span class="n">field</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="k">new</span><span class="p">[]</span> <span class="p">{</span> <span class="n">key</span> <span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>create Line, delete Line, update line in Purchase order</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">EntityKey</span><span class="p">[]</span> <span class="n">entityKeyList</span> <span class="p">=</span> <span class="n">EntityForPurchId</span><span class="p">(</span><span class="s">&#34;BGR-000054&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">CallContext</span> <span class="n">callContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">callContext</span><span class="p">.</span><span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Mav_PurchOrderServiceServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Mav_PurchOrderServiceServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">AxdMav_PurchOrderService</span> <span class="n">purchOrders</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">read</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Define which line need to be update or delete</span>
</span></span><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">lastLine</span> <span class="p">=</span> <span class="n">purchOrders</span><span class="p">.</span><span class="n">PurchTable</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">PurchLine</span><span class="p">.</span><span class="n">Last</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">purchLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchLine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;110329&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchQty</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">CurrencyCode</span> <span class="p">=</span> <span class="s">&#34;KRW&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">RecIdSpecified</span>      <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">LineNumberSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">action</span>              <span class="p">=</span> <span class="n">AxdEnum_AxdEntityAction</span><span class="p">.</span><span class="n">create</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">actionSpecified</span>     <span class="p">=</span> <span class="k">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//for delete</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//RecId               = lastLine.RecId,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//RecIdSpecified      = true,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//action              = AxdEnum_AxdEntityAction.delete,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//actionSpecified     = true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//for Update</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//RecId               = lastLine.RecId,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//RecIdSpecified      = true,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//action              = AxdEnum_AxdEntityAction.update,</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//actionSpecified     = true</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">var</span> <span class="n">purchTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchTable</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">_DocumentHash</span> <span class="p">=</span> <span class="n">purchOrders</span><span class="p">.</span><span class="n">PurchTable</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">_DocumentHash</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">OrderAccount</span> <span class="p">=</span> <span class="s">&#34;101-01-75441&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">LanguageId</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">CurrencyCode</span> <span class="p">=</span> <span class="s">&#34;KRW&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchName</span> <span class="p">=</span> <span class="s">&#34;AIF PO Test&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">action</span> <span class="p">=</span> <span class="n">AxdEnum_AxdEntityAction</span><span class="p">.</span><span class="n">update</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">actionSpecified</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchLine</span> <span class="p">=</span> <span class="k">new</span><span class="p">[]</span> <span class="p">{</span> <span class="n">purchLine</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">AxdMav_PurchOrderService</span> <span class="n">purchOrder</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdMav_PurchOrderService</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">PurchTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_PurchTable</span><span class="p">[]</span> <span class="p">{</span><span class="n">purchTable</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">client</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">entityKeyList</span><span class="p">,</span> <span class="n">purchOrder</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Tue, 27 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<h2 id="scenarios">Scenarios:</h2>
<p>I’m trying to create <strong>product/master product</strong> in Dynamics AX using AIF inbound port, the AIF services consume by C#.NET.</p>
<p>From AX 2012 R2, Item is replaced with Product. Item master was in Inventory Management Module, now there is a separate module for item/product creation <code>Product information Management</code>.</p>
<p>Some definitions you should know
There are two types of Products in 2012 they are:</p>
<ol>
<li>
<p><strong>Product</strong></p>
<p><em>Product information management/Common/Products/Products</em></p>
</li>
<li>
<p><strong>Product Master</strong></p>
<p><em>Product information management/Common/Products/Products master</em></p>
<p>a. <strong>Variants:</strong></p>
</li>
</ol>
<p>To create a product variant, you must define at least one product dimension for a product master. You can also rename dimensions.
To create product variants, you must complete the following tasks:</p>
<ul>
<li>
<p>Set up dimensions, such as size, color, and style.</p>
</li>
<li>
<p>Set up variant groups.</p>
</li>
<li>
<p>Assign variant groups to a retail hierarchy.</p>
</li>
<li>
<p>Create a product master and variants.</p>
</li>
</ul>
<p>b. <strong>Product dimensions</strong></p>
<p>Product dimensions are characteristics that serve to identify a product variant. You can use combinations of product dimensions to define product variants. You must define at least one product dimension for a product master to create a product variant.</p>
<h2 id="process">Process:</h2>
<p>Normally in AX, we create items master follow process:</p>
<ul>
<li>
<p>Create product/product master.</p>
</li>
<li>
<p>Assigning Dimensions Groups to a Product Master.</p>
</li>
<li>
<p>Create Product dimension combinations (Product Variants)</p>
</li>
<li>
<p>Release product to legal entities</p>
</li>
<li>
<p>Assigning Item Model Group &amp; Item Groups to a Product Master</p>
</li>
</ul>
<h2 id="how-to-do">How to do:</h2>
<p>Ax provides us standard services for this purpose, so we don’t need to create any custom services for this. I will use 4 services for this purpose, descriptions below</p>
<table>
<thead>
<tr>
<th style="text-align:left">Service</th>
<th style="text-align:center">Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>EcoResProductService</code></td>
<td style="text-align:center">Create products (all types). The service can also be used to                            retrieve data that has already been created (Create Product details in The EcoRes tables).</td>
</tr>
<tr>
<td style="text-align:left">&mdash;-</td>
<td></td>
</tr>
<tr>
<td style="text-align:left"><code>EcoResProductMasterDimValueService</code></td>
<td style="text-align:center">Specify values of product dimensions for a product master. These values become available for the creation of product variants. The service can also be used to retrieve data that has already been created.</td>
</tr>
<tr>
<td style="text-align:left">&mdash;-</td>
<td></td>
</tr>
<tr>
<td style="text-align:left"><code>ItemService</code></td>
<td style="text-align:center">Release distinct products and product masters. The service can also be used to retrieve data that has already been created.</td>
</tr>
<tr>
<td style="text-align:left">&mdash;-</td>
<td></td>
</tr>
<tr>
<td style="text-align:left"><code>InventDimCombinationService</code></td>
<td style="text-align:center">Release product variants. The service can also be used to retrieve data that has already been created.</td>
</tr>
<tr>
<td style="text-align:left">{: rules=&ldquo;groups&rdquo;}</td>
<td></td>
</tr>
</tbody>
</table>
<p>we have 4 steps</p>
<ol>
<li>
<p>Create 4 AIF inbound services against Services operation above and active it
<code>http://DEV-ERP:8103/DynamicsAx/Services/BCEcoResProduct</code>
<code>http://DEV-ERP:8103/DynamicsAx/Services/BCEcoResProductMasterDimValue</code>
<code>http://DEV-ERP:8103/DynamicsAx/Services/BCItemsMaster</code>
<code>http://DEV-ERP:8103/DynamicsAx/Services/BCInventDimCombination</code></p>
</li>
<li>
<p>After services creation, open visual studio then creates new Console project and add service References for that, you will get somethings like pic below:</p>
<p></p>
</li>
<li>
<p>Using C#.Net to consume service</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">ItemsMaster.ItemsRef</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">ItemsMaster.EcoResProductRef</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">ItemsMaster.EcoResProductMasterRef</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">ItemsMaster.InventDimRef</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Program</span> <span class="n">master</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Program</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">master</span><span class="p">.</span><span class="n">createDistinctProduct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">Program</span><span class="p">.</span><span class="n">releaseProduct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>EcoResProductServiceClient</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">createDistinctProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_Product_EcoResDistinctProduct</span> <span class="n">distinctProduct</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResDistinctProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">DisplayProductNumber</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductType</span> <span class="p">=</span> <span class="n">AxdEnum_EcoResProductType</span><span class="p">.</span><span class="n">Item</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">SearchName</span> <span class="p">=</span> <span class="s">&#34;Max&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	   
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">Translation</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">Translation</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">LanguageId</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;Max Nguyen&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">Identifier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Identifier</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">Identifier</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Identifier</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductNumber</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">StorageDimGroup</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_StorageDimGroup</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">StorageDimGroup</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_StorageDimGroup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">StorageDimensionGroup</span> <span class="p">=</span> <span class="s">&#34;SW_P&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">TrackingDimGroup</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_TrackingDimGroup</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">distinctProduct</span><span class="p">.</span><span class="n">TrackingDimGroup</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_TrackingDimGroup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">TrackingDimensionGroup</span> <span class="p">=</span> <span class="s">&#34;Batch Only&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">AxdEcoResProduct</span> <span class="n">product</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEcoResProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResProduct</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">distinctProduct</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">EcoResProductSctx</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">EcoResProductServiceClient</span> <span class="n">ecoResProductSClient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">EcoResProductServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	<span class="n">ecoResProductSClient</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">EcoResProductSctx</span><span class="p">,</span> <span class="n">product</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>EcoResProductServiceClient</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">createMaster</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_Product_EcoResProductMaster</span> <span class="n">productMaster</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResProductMaster</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">DisplayProductNumber</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductType</span> <span class="p">=</span> <span class="n">AxdEnum_EcoResProductType</span><span class="p">.</span><span class="n">Item</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">SearchName</span> <span class="p">=</span> <span class="s">&#34;Max Nguyen&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">Translation</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">Translation</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">LanguageId</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;Max Nguyen&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">Identifier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Identifier</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">Identifier</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Identifier</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductNumber</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">ProductDimGroup</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_ProductDimGroup</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">ProductDimGroup</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_ProductDimGroup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductDimensionGroup</span> <span class="p">=</span> <span class="s">&#34;MAX10&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">productMaster</span><span class="p">.</span><span class="n">VariantConfigurationTechnology</span> <span class="p">=</span> <span class="n">AxdEnum_EcoResVariantConfigurationTechnologyType</span><span class="p">.</span><span class="n">PredefinedVariants</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">AxdEcoResProduct</span> <span class="n">axdProduct</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEcoResProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResProduct</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">productMaster</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">EcoResProductSctx</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">EcoResProductServiceClient</span> <span class="n">ecoResProductSClient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">EcoResProductServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	<span class="n">ecoResProductSClient</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">EcoResProductSctx</span><span class="p">,</span> <span class="n">axdProduct</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>EcoResProductMasterDimValueServiceClient</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">createMasterDimensions</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span> <span class="n">ecoResSizeL</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;L&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span> <span class="n">ecoResSizeM</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;M&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//master dimensions definition (two sizes, L and M)</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_MasterDim_EcoResProductMasterSize</span> <span class="n">sizeDimensionL</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_MasterDim_EcoResProductMasterSize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">SizeProductMaster</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Size</span> <span class="p">=</span> <span class="s">&#34;L&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">EcoResSize</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">ecoResSizeL</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_MasterDim_EcoResProductMasterSize</span> <span class="n">sizeDimensionM</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_MasterDim_EcoResProductMasterSize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">SizeProductMaster</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Size</span> <span class="p">=</span> <span class="s">&#34;M&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">EcoResSize</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">ecoResSizeM</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">AxdEcoResProductMasterDimValue</span> <span class="n">axdDimValue</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEcoResProductMasterDimValue</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">MasterDim</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_MasterDim_EcoResProductMasterDimensionValue</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="p">{</span> <span class="n">sizeDimensionL</span><span class="p">,</span> <span class="n">sizeDimensionM</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">masterDimctx</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductMasterDimValueServiceClient</span> <span class="n">masterDimensionService</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductMasterDimValueServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">masterDimensionService</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">masterDimctx</span><span class="p">,</span> <span class="n">axdDimValue</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>EcoResProductServiceClient</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">createVariant</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//product variant definition</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_Product_EcoResDistinctProductVariant</span> <span class="n">productVariant</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResDistinctProductVariant</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">DisplayProductNumber</span> <span class="p">=</span> <span class="s">&#34;MAXL&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductType</span> <span class="p">=</span> <span class="n">AxdEnum_EcoResProductType</span><span class="p">.</span><span class="n">Item</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">SearchName</span> <span class="p">=</span> <span class="s">&#34;MAXL&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductMaster</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">productVariant</span><span class="p">.</span><span class="n">Translation</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">productVariant</span><span class="p">.</span><span class="n">Translation</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Translation</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">LanguageId</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;Max L size&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">productVariant</span><span class="p">.</span><span class="n">VariantDimValue</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_VariantDimValue_EcoResProductVariantDimensionValue</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">productVariant</span><span class="p">.</span><span class="n">VariantDimValue</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_VariantDimValue_EcoResProductVariantSize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">DistinctProductVariant</span> <span class="p">=</span> <span class="s">&#34;MAXL&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ProductDimensionAttribute</span> <span class="p">=</span> <span class="m">3173</span><span class="p">,</span><span class="c1">//The ID of the EcoResSize table</span>
</span></span><span class="line"><span class="cl">		<span class="n">Size</span> <span class="p">=</span> <span class="s">&#34;L&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">EcoResSize</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">[</span><span class="m">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">AxdEntity_EcoResSize</span><span class="p">()</span> <span class="p">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;L&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">AxdEcoResProduct</span> <span class="n">axdProduct</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEcoResProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Product_EcoResProduct</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">productVariant</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">inventDimctx</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">EcoResProductServiceClient</span> <span class="n">productService</span> <span class="p">=</span> <span class="k">new</span> <span class="n">EcoResProductServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">productService</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">inventDimctx</span><span class="p">,</span> <span class="n">axdProduct</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>this method can use to release a distinct product or a product master</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">releaseProduct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">var</span> <span class="n">invent</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Invent</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">UnitId</span> <span class="p">=</span> <span class="s">&#34;box&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">var</span> <span class="n">purch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Purch</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">UnitId</span> <span class="p">=</span> <span class="s">&#34;box&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">var</span> <span class="n">sales</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Sales</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">UnitId</span> <span class="p">=</span> <span class="s">&#34;box&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">var</span> <span class="n">inventTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventTable</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">PmfProductType</span> <span class="p">=</span> <span class="n">AxdEnum_PmfProductType</span><span class="p">.</span><span class="n">MainItem</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Product</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Invent</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Invent</span><span class="p">[]</span> <span class="p">{</span> <span class="n">invent</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="n">Purch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Purch</span><span class="p">[]</span> <span class="p">{</span> <span class="n">purch</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="n">Sales</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_Sales</span><span class="p">[]</span> <span class="p">{</span> <span class="n">sales</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">		
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">var</span> <span class="n">item</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdItem</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">InventTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventTable</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">inventTable</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">ItemsRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">callContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemsRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="n">ItemsRef</span><span class="p">.</span><span class="n">ItemServiceClient</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemsRef</span><span class="p">.</span><span class="n">ItemServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">callContext</span><span class="p">.</span><span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">callContext</span><span class="p">.</span><span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">try</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemsRef</span><span class="p">.</span><span class="n">EntityKey</span><span class="p">[]</span> <span class="n">itemCreatedEntity</span> <span class="p">=</span> <span class="n">client</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">callContext</span><span class="p">,</span> <span class="n">item</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemsRef</span><span class="p">.</span><span class="n">EntityKey</span> <span class="n">itemCreated</span> <span class="p">=</span> <span class="p">(</span><span class="n">ItemsRef</span><span class="p">.</span><span class="n">EntityKey</span><span class="p">)</span><span class="n">itemCreatedEntity</span><span class="p">.</span><span class="n">GetValue</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;AxdEntity_Invent &#34;</span> <span class="p">+</span> <span class="n">itemCreated</span><span class="p">.</span><span class="n">KeyData</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>Release product Variants</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">releaseProductVariants</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">AxdEntity_InventDimCombination</span> <span class="n">releasedVariant</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventDimCombination</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">DistinctProductVariant</span> <span class="p">=</span> <span class="s">&#34;MAX00002&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">ItemId</span> <span class="p">=</span> <span class="s">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">AxdInventDimCombination</span> <span class="n">inventDimCombination</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdInventDimCombination</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">InventDimCombination</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AxdEntity_InventDimCombination</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">{</span> <span class="n">releasedVariant</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">InventDimRef</span><span class="p">.</span><span class="n">CallContext</span> <span class="n">itemsctx</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InventDimRef</span><span class="p">.</span><span class="n">CallContext</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Company</span> <span class="p">=</span> <span class="s">&#34;bgr&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="n">Language</span> <span class="p">=</span> <span class="s">&#34;en-us&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl">	<span class="n">InventDimCombinationServiceClient</span> <span class="n">inventDimCombinationService</span> <span class="p">=</span> <span class="k">new</span> <span class="n">InventDimCombinationServiceClient</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">inventDimCombinationService</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">itemsctx</span><span class="p">,</span> <span class="n">inventDimCombination</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Just for example, in <code>main</code> I only create Distinct product and release it, but you can use another method to create master, variant, masterDim and so on.</p>
<pre><code>4. Try to run it and here is a result
</code></pre>
<p></p>
<p>Thank you for reading and feel free to give me a question.</p>]]></description>
</item>
<item>
    <title>Posting cust payment journal using X&#43;&#43;</title>
    <link>https://nuxulu.com/2016-12-26-posting-cust-payment-journal-using-x-/</link>
    <pubDate>Mon, 26 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-12-26-posting-cust-payment-journal-using-x-/</guid>
    <description><![CDATA[<p>Base on <code>JournalId</code> on <code>LedgerJournalTable</code> you can use code below to <span style="color: red">post the transactions</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="c1">//Contract class</span>
</span></span><span class="line"><span class="cl"><span class="na">[
</span></span></span><span class="line"><span class="cl"><span class="na">    DataMemberAttribute(&#39;gJournalId&#39;),
</span></span></span><span class="line"><span class="cl"><span class="na">    SysOperationDisplayOrderAttribute(&#39;1&#39;)
</span></span></span><span class="line"><span class="cl"><span class="na">]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="n">LedgerJournalId</span> <span class="n">parmJournalNum</span><span class="p">(</span><span class="n">LedgerJournalId</span> <span class="n">_journalId</span> <span class="p">=</span> <span class="n">gJournalId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">gJournalId</span> <span class="p">=</span> <span class="n">_journalId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">gJournalId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Processing class</span>
</span></span><span class="line"><span class="cl"><span class="na">[SysEntryPointAttribute]</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">process</span><span class="p">(</span><span class="n">MAV_PostCustPaymentJourContract</span> <span class="n">_contract</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">LedgerJournalTable</span>      <span class="n">ledgerJournalTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">LedgerJournalCheckPost</span>  <span class="n">postCustPaymentJournal</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ledgerJournalTable</span> <span class="p">=</span> <span class="n">LedgerJournalTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">_contract</span><span class="p">.</span><span class="n">parmJournalNum</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">ledgerJournalTable</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">postCustPaymentJournal</span> <span class="p">=</span> <span class="n">LedgerJournalCheckPost</span><span class="p">::</span><span class="n">newLedgerJournalTable</span><span class="p">(</span><span class="n">ledgerJournalTable</span><span class="p">,</span> <span class="n">NoYes</span><span class="p">::</span><span class="n">Yes</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">postCustPaymentJournal</span><span class="p">.</span><span class="n">run</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>The Type system of Dynamics AX 2012</title>
    <link>https://nuxulu.com/2016-11-25-the-type-system-of-dynamics-ax-2012/</link>
    <pubDate>Thu, 24 Nov 2016 08:22:39 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-25-the-type-system-of-dynamics-ax-2012/</guid>
    <description><![CDATA[<p>The Microsoft Dynamics AX runtime manages the storage of <em>value type</em> data on the <strong>call stack</strong> and <em>reference type objects</em> on the <strong>memory heap</strong>.</p>
<p><strong>The call stack</strong> is the memory structure that holds data about the active methods called during program execution. <strong>The memory heap</strong> is the memory area that allocates storage for objects that are destroyed automatically by the Microsoft Dynamics AX run-time.</p>
<h2 id="value-types">Value types</h2>
<p>Value types include the built-in <code>primitive types, extended data types, enumeration types, and built-in collection types</code>.</p>
<ul>
<li><strong>The primitive types</strong> are boolean, int, int64, real, date, utcDateTime, timeofday, str, and guid.</li>
<li><strong>The extended data types</strong> are specialized primitive types and specialized base enumerations.</li>
<li><strong>The enumeration types</strong> are base enumerations and extended data types.</li>
<li><strong>The collection types</strong> are the built-in array and container types.</li>
</ul>
<blockquote>
<p>By default, variables declared as <strong>value types</strong> are assigned their zero value by the Microsoft Dynamics AX runtime. These variables can’t be set to null. Variable values are copied when variables are used to invoke methods and when they are used in assignment statements. Therefore, two value type variables can’t reference the same value.</p>
</blockquote>
<p></p>
<h2 id="reference-types">Reference types</h2>
<p>Reference types include <code>the record types, class types, and interface types</code>.</p>
<ul>
<li><strong>The record types</strong> are table, map, and view. User-defined record types are dynamically composed from application model layers. Microsoft Dynamics AX runtime record types are exposed in the system application programming interface (API). Although the methods are not visible in the AOT, all record types implement the methods that are members of the system xRecord type, a Microsoft Dynamics AX runtime class type.</li>
<li><strong>User-defined class types</strong> are dynamically composed from application model layers and Microsoft Dynamics AX runtime class types exposed in the system API.</li>
<li><strong>Interface types</strong> are type specifications and can’t be instantiated in the Microsoft Dynamics AX  runtime. Class types can, however, implement interfaces. Variables declared as reference types contain references to objects that the Microsoft Dynamics AX runtime instantiates from dynamically composed types defined in the application model layering system and from types exposed in the system API. The Microsoft Dynamics AX runtime also performs memory deallocation (garbage collection) for these objects when they are no longer referenced.</li>
</ul>
<blockquote>
<p>Reference variables declared as record types reference objects that the Microsoft Dynamics AX runtime instantiates automatically. Class type objects are programmatically instantiated using the new operator. Copies of object references are passed as reference parameters in method calls and are assigned to reference variables, so two variables can reference the same object.</p>
</blockquote>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Copy data between Microsoft Dynamics AX companies using DIXF In AX 2012 R3</title>
    <link>https://nuxulu.com/2016-11-23-copy-data-between-microsoft-dynamics-ax-companies-using-dixf-in-ax-2012-r3/</link>
    <pubDate>Thu, 17 Nov 2016 09:11:11 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-23-copy-data-between-microsoft-dynamics-ax-companies-using-dixf-in-ax-2012-r3/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>Step by Step to build SSRS Report - Advanced RDP Class</title>
    <link>https://nuxulu.com/2016-11-23-step-by-step-how-to-build-ssrs-report---advanced-rdp-class/</link>
    <pubDate>Thu, 17 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-23-step-by-step-how-to-build-ssrs-report---advanced-rdp-class/</guid>
    <description><![CDATA[<h3 id="choosing-rdp-for-a-report">Choosing RDP for a report</h3>
<ul>
<li>Data to be rendered cannot be constructed as a query.</li>
<li>Business logic to be processed depends on the parameters.</li>
<li>Data can be rendered using existing business logic.</li>
<li>More filters are to be added at runtime</li>
</ul>
<h3 id="rdp-comlex">RDP Comlex</h3>
<p>When a dataset does not provide the complexity needs of your report, you can use the default SrsReportRunController class. A controller class runs the report by creating the user interface (UI), calling SQL Server Reporting Services, and pre-processing the parameters for the report. The following list describes scenarios that require that you extend the SrsReportRunController class to create a custom controller for the report.</p>
<p>Report requires input data to be pre-processed.
Report requires input data to be manipulated or modified.
Multiple reports should be run from the same dialog box.
Report requires that it be run from a form.</p>
<h3 id="report-programming-model">Report programming model</h3>
<h4 id="model">Model</h4>
<p>A model for an SSRS report can be an AOT query/RDP/business logic.(RDPs class need to be extends SRSReportDataProvider)</p>
<h4 id="controller">Controller</h4>
<ol>
<li>
<p>Report data contract: Implemented by SRSReportDataContract
holds the different contracts used in a report</p>
</li>
<li>
<p>Report controller: Implemented by  SRSReportRunController
starting from parsing the report rdl, binding the contracts, UI builder classes to the report, rendering the UI, invoking the report viewer, and post processing actions after the report is rendered.</p>
</li>
<li>
<p>Report UI builder:  Implemented by SRSReportDataContractUIBuilder
building the UI based on related contracts.</p>
</li>
</ol>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/6B5cqeeNvH4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></description>
</item>
<item>
    <title>Types of services in Microsoft Dynamics AX 2012</title>
    <link>https://nuxulu.com/2016-11-10-types-services-microsoft-dynamics-ax-2012/</link>
    <pubDate>Thu, 10 Nov 2016 18:47:00 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-10-types-services-microsoft-dynamics-ax-2012/</guid>
    <description><![CDATA[<h1 id="document-services">Document services</h1>
<p>Document services use documents to represent business objects such as purchase and sales orders, customers, vendors, and so on.</p>
<p>A document service is composed of the following components:</p>
<ul>
<li><strong>Document query</strong> : This is a query that is created in the <strong>Application Object Tree (AOT)</strong> and contains all the tables that are related to the business object that you want to expose. Based on this query, the Document Service Generation Wizard can be used to generate the other artifacts that make up the document service.</li>
<li><strong>Table AxBC classes</strong> : An <code>AxBC</code> class is a wrapper for a table and contains business logic that is needed for <strong>Create, Read, Update, Delete (CRUD)</strong> operations.</li>
<li><strong>Document class</strong> : The purpose of the document class is to contain business logic that is associated with the creation and modification of the business entity itself. For example, the <code>AxdCustomer</code> class could contain logic to handle party information of a customer.</li>
<li><strong>Document service class</strong> : This is the actual service implementation class and extends the <code>AifDocumentService</code> class. This class implements the service operations that are published through the service contract.</li>
</ul>
<p>When creating document services, developers need to make sure <strong>that the business object is mapped correctly to the document query</strong>. The document services framework will handle all other things such as the serialization and deserialization of XML, date effectiveness, and so on.</p>
<p>Document services can be deployed using the integration ports and all available adapters can be used.</p>
<h1 id="custom-services">Custom services</h1>
<p>Custom services were already available in Microsoft Dynamics AX 2009, but support for <strong>Extended Data Types(EDTs)</strong> was limited, which resulted in developers having to provide custom serialization and deserialization logic.</p>
<p>Microsoft Dynamics AX 2012 introduces the concept of attributes.  <strong>Attributes</strong>  provide a way to specify metadata about classes and methods. Two of these attributes are used when creating data contracts: the <code>DataContractAttribute</code> and <code>DataMemberAttribute</code> attributes.</p>
<p>The &lsquo;DataContractAttribute&rsquo; attribute is used to define that a class is a data contract. The&rsquo;DataMemberAttribute&rsquo; attribute is added to methods of data contracts that represent data members that have to be exposed. This way of defining data contracts is very similar to other programming languages such as C#.</p>
<p>Support for more complex data types such as collections and tables has been added so that these types can be serialized and deserialized without developers having to provide the logic themselves.</p>
<p>In a typical custom service you will find the following components:</p>
<ul>
<li><strong>Service contract</strong> : A service contract is an X++ class that contains methods with the <em>SysEntryPointAttribute</em> attribute. This identifies methods that will result in a service operation contract when the service is exposed.</li>
<li><strong>Data contracts</strong> : A data contract is an X++ class that is attributed with the  <strong>DataContractAttribute</strong>  attribute. It contains parameter methods that will be attributed as data members for each member variable that needs to be part of the data contract.</li>
</ul>
<p>Custom services can be deployed using the integration ports and any available adapter can be used.</p>
<h1 id="system-services">System services</h1>
<p>These services are new since the release of Microsoft Dynamics AX 2012. The main difference between these services and the previous two types is that they are not customizable and are not mapped to a query or X++ code. They are not customizable because they are written by Microsoft in managed code. One exception is the user session service, which is written in X++ code but is generally considered as a system service.</p>
<p>There are three system services available for use in Microsoft Dynamics AX 2012: the query service, the metadata service, and the user session service.</p>
<h1 id="query-service">Query service</h1>
<p>The query service provides the means to run queries of the following three types:</p>
<ul>
<li>Static queries defined in the AOT.</li>
<li>User-defined queries by using the <em>QueryMetaData</em> class in the service.</li>
<li>Dynamic queries that are written in X++ classes. These classes need to extend the &lsquo;AIFQueryBuilder&rsquo; class.</li>
</ul>
<p>When queries are called by a service, the AOS authorization ensures that the caller has the correct permissions to retrieve the information. This means that unpermitted fields will be omitted from the query result. Furthermore, when joined data sources are not allowed to be used, the query call will result in an error that can be caught by the calling application.</p>
<p>The resulting rows will be returned as an ADO.NET DataSet object. This can be very useful when you make use of controls in your application that can be bound to a DataSet object.</p>
<p>The query service can be found at the following address:</p>
<p><code>net.tcp://hostname:port/DynamicsAX/Services/QueryService</code></p>
<h1 id="metadata-service">Metadata service</h1>
<p>This system service can be used to retrieve metadata information about the AOT. Consumers of this service can get information such as which tables, classes, forms, and menu items are available in the system. An example usage of this service could be retrieving information about the AOT and using it in a dashboard application running on the Microsoft .NET Framework.</p>
<p>The metadata service can be found at the following address:</p>
<p><code>net.tcp://hostname:port/DynamicsAX/Services/MetaDataService</code></p>
<h1 id="user-session-service">User session service</h1>
<p>The third system service is the user session service. With this service you can retrieve information about the caller&rsquo;s user session. This information includes the user&rsquo;s default company, language, preferred calendar, time zone, and currency.</p>
<p>The user session service can be found at the following address:</p>
<p><code>net.tcp://hostname:port/DynamicsAX/Services/UserSessionService</code></p>
<h1 id="the-right-service-for-the-right-job">The right service for the right job</h1>
<p>Now that it is clear what types of services Microsoft Dynamics AX 2012 has to offer, the question arises as to when each type of service should be used. There is no simple answer for this due to the fact that every type has its strengths and weaknesses. Let us take a look at two factors that may help you make the right decision.</p>
<h1 id="complexity">Complexity</h1>
<p>Both document services and custom services can handle any business entity complexity. The document services framework parses the incoming XML and validates it against an <strong>XML Schema Definition(XSD)</strong> document. After validation, the framework calls the appropriate service action. Custom services on the other hand use the .NET XML Serializer and no validation of data is done. This means that any validations of the data in the data contract need to be written in code. Another advantage of document services over custom services is that the AxBC classes already contain a lot of the logic that is needed for CRUD operations.</p>
<h1 id="flexibility">Flexibility</h1>
<p>Document services have service contracts that are tightly coupled with the AOT Query object. This means that when the query changes, the schema also changes. Data policies allow you to control which fields are exposed. When using custom services, this cannot be done by setup, but has to be done by attributing at design time.</p>
<p>Custom services have the flexibility towards the service contract that the document services are lacking. Here the developer is in full control about what is in the contract and what is not. The operations, input parameters, and return types are all the responsibility of the developer.</p>
<p>Another benefit in using custom services is the ability to use shared data contracts as parameters for your operations. Think of a company-wide software solution that involves the use of Microsoft Dynamics AX 2012 together with SharePoint and .NET applications that are all linked through BizTalk. You could opt to share data contracts to make sure that entities are the same for all of the components in the architecture.</p>
<p>In that scenario, you&rsquo;re able to create a data contract in managed code and reference it in Microsoft Dynamics AX 2012. Then you can use that .NET data contract in your service operations as a parameter.</p>
<p>There will probably be more factors that you will take into consideration to choose between the service types. But we can come to the following conclusion about when to use what type of service:</p>
<ul>
<li><strong>Custom services</strong> : Custom services should be used when exposing entities that have a low complexity or data contracts that need to be shared between other applications.</li>
</ul>
<p>They are also ideal when custom logic needs to be exposed that may have nothing to do with data structures within Microsoft Dynamics AX.</p>
<ul>
<li><strong>Document services</strong> : Document services should be used when exposing entities that have a high complexity and when validation of the data and structure would require a lot of work for developers to implement on their own.</li>
<li><strong>Query service</strong> : The query service should be used when only read operations are needed and there is no need for updates, inserts, or delete actions.</li>
</ul>
<p>It can be used when writing .NET Framework applications that leverage the data from Microsoft Dynamics AX returned as an ADO.NET DataSet.</p>
<ul>
<li><strong>Metadata service</strong> : Use the metadata service when metadata information about objects in the AOT is required.</li>
<li><strong>User session service</strong> : The user session service should be used when user session-related information is required.</li>
</ul>]]></description>
</item>
<item>
    <title>Microsoft AX 2012 Test Data Transfer Tool</title>
    <link>https://nuxulu.com/2016-11-08-microsoft_dyanmics_ax_2012_test_data_transfer_tool/</link>
    <pubDate>Tue, 08 Nov 2016 18:47:00 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-08-microsoft_dyanmics_ax_2012_test_data_transfer_tool/</guid>
    <description><![CDATA[<h2 id="summary">SUMMARY</h2>
<p>Tool can be used for two different purposes. One is to install <strong>demo data</strong> and other one is elaborated as below. Customers often need to have a production dataset to use when building and validating customizations in <strong>non-production</strong> environments.</p>
<p><code>The Microsoft Dynamics AX 2012 Test Data Transfer Tool (beta)</code> is a tool that helps move data between from production to non-production environments or from non-production environments to production environments to make a new production environment. But you must be careful becasue the tool imports data table by table and deletes the data in the table before importing. Hence it is highly advised against running the tool for import in production environments.</p>
<h2 id="benefits">BENEFITS</h2>
<ul>
<li>
<p>Export and import data outside AX, without running an AOS instance.</p>
</li>
<li>
<p>Export and import processing are faster compared to other tools because this tool is based on SQL Server bcp.</p>
</li>
<li>
<p>The tool can work around the table/field metadata changes between builds and environments and hence can be used to move data from build to build, and environment to environment even when there are customizations, and metadata changes.</p>
</li>
<li>
<p>The tool minimally changes data during the import process. The only data the tool changes are the entity IDs (IDs related to table, field, etc.) that are stored as data and that could change with each deployment. The tool recognizes the changes and patches the data with the AXIDs of the system that the data is being imported into.</p>
</li>
<li>
<p>The data file format is the standard format produced by SQL Server bcp. The output is text based and can be stored and compared against other versions in a version control system.</p>
</li>
</ul>
<h3 id="how-to">How to</h3>
<ol>
<li>Download <strong>AX2012TestDataTransferTool.zip</strong> file from <a href="https://lcs.dynamics.com/" target="_blank" rel="noopener noreffer ">LCS</a></li>
</ol>
<p><figure><a class="lightgallery" href="/imagesposts/Microsoft_Dyanmics_AX_2012_Test_Data_Transfer_Tool.png" title="Image of Microsoft AX 2012 Test Data Transfer Tool" data-thumbnail="/imagesposts/Microsoft_Dyanmics_AX_2012_Test_Data_Transfer_Tool.png" data-sub-html="<h2>ahihi</h2><p>Image of Microsoft AX 2012 Test Data Transfer Tool</p>">
        
    </a><figcaption class="image-caption">ahihi</figcaption>
    </figure></p>
<p><strong><em>PROD Environment</em></strong></p>
<ol start="2">
<li>
<p>Run the setup file in SQL SERVER environment and complete the installation.</p>
</li>
<li>
<p><em>&ldquo;C:\Program Files (x86)\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)&rdquo;</em> file appears automatically. Find the <code>MetadataXMLGenerator.xpo</code> file and import it into AX.</p>
</li>
<li>
<p>A job named <code>MetadataXMLGenrator</code> appears among <code>AOT/jobs</code>. Find and run the job.</p>
</li>
<li>
<p>Job generates a file named <code>MetaData.Xml</code> and gives you a file path via infolog.</p>
</li>
<li>
<p>Copy <code>MetaData.Xml</code> file and paste in <em>&ldquo;C:\Program Files (x86)\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)[Lists]&rdquo;</em> file in Prod(Golden) SQL SERVER. Overwrite the existing <code>MetaData.Xml</code> file.</p>
</li>
</ol>
<p><strong><em>DEV or TEST Environment</em></strong></p>
<ol start="7">
<li>
<p>Repeat the steps 2-6 for DEV environment.</p>
</li>
<li>
<p>The windows user who is going to execute the process should have access MicrosoftDynamicsAx ve Model database in DEV and Prod SQL servers. &ldquo;Read&rdquo; is enough for (Prod) exporting. &ldquo;Full&rdquo; right is enough for importing (DEV).</p>
</li>
<li>
<p>The windows user who is going to execute the process should have &ldquo;full&rdquo; access <em>&ldquo;C:\Program Files (x86)\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)&rdquo;</em> in both DEV and Prod SQL servers. System generates logs here.</p>
</li>
<li>
<p>Now, Live (Golden) environment&rsquo;s data will be exported. Prepare a file to export live(Golden) data on Live SQL Server. For instance <code>C:\DC_EXPORT</code></p>
</li>
<li>
<p>Type the following command in command line and initiate the exportation process:
<code>DP.exe EXPORT Directory&gt;&gt; Database name&gt;&gt; Server&gt;&gt;</code><br>
<code>DP.exe EXPORT C:\DC_EXPORT &quot;MicrosoftDynamicsAX&quot; &quot;ServerName&quot;</code></p>
</li>
<li>
<p>Copy the exported file <code>(C:\DC_EXPORT)</code> to DEV environment</p>
</li>
<li>
<p>Stop DEV AOS service</p>
</li>
<li>
<p>Type the following command in command line and initiate the importation process:<br>
<code>DP.exe IMPORT Directory&gt;&gt; Database name&gt;&gt; Server&gt;&gt;</code></p>
</li>
<li>
<p>Start DEV AOS service.</p>
</li>
</ol>
<p><em>Note</em>: DP.exe EXPORT/IMPORT commands must be run from the related directories</p>
]]></description>
</item>
<item>
    <title>Understanding modifedField() Table method in DAX 2012</title>
    <link>https://nuxulu.com/2016-11-08-understanding_modifedfield_table_method_in_dax_2012/</link>
    <pubDate>Tue, 08 Nov 2016 15:47:00 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-11-08-understanding_modifedfield_table_method_in_dax_2012/</guid>
    <description><![CDATA[<p>Dear all,</p>
<p>We use <code>modifiedField()</code> method to perform any actions  after the field is modifed</p>
<p><em>Ex:</em></p>
<p>Create new table with 2 fields <strong>ItemId</strong> and <strong>ItemNameDisplay</strong>  from Extended Data Types node in AOT then Override <code>modifiedField()</code> in Table&rsquo;s method node, something likes:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="n">public</span> <span class="kt">void</span> <span class="nf">modifiedField</span><span class="p">(</span><span class="n">FieldId</span> <span class="n">_fieldId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">InventTable</span> <span class="n">inventTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">(</span><span class="n">_fieldId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">switch</span> <span class="p">(</span><span class="n">_fieldId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="n">fieldNum</span><span class="p">(</span><span class="n">IBD_Invent</span><span class="p">,</span><span class="n">itemid</span><span class="p">)</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">this</span><span class="p">.</span><span class="n">ItemNameDisplay</span> <span class="o">=</span> <span class="n">inventTable</span><span class="o">::</span><span class="n">find</span><span class="p">(</span><span class="n">this</span><span class="p">.</span><span class="n">itemid</span><span class="p">).</span><span class="n">NameAlias</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>the <code>modifiedField()</code> method is located on tables and it is called by a form (or a dataset) when any field is changed. It has field ID as a parameter and therefore it is very easy to write code reacting to a change of a particular field. It is so easy that the <code>modifiedField()</code> method is often used even in such cases, when it really shouldn’t be used.</p>
<p>If you want to get previous field value in the <code>modifiedField()</code> for comparative purpose, you can use <code>this.orig()</code> method:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="n">public</span> <span class="kt">void</span> <span class="nf">modifiedField</span><span class="p">(</span><span class="n">fieldId</span> <span class="n">_fieldId</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">(</span><span class="n">_fieldId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="s">&#34;Field number %1 changed from %2 to %3&#34;</span><span class="p">,</span><span class="n">_fieldId</span><span class="p">,</span><span class="n">this</span><span class="p">.</span><span class="n">orig</span><span class="p">().(</span><span class="n">_fieldId</span><span class="p">),</span><span class="n">this</span><span class="p">.(</span><span class="n">_fieldId</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Expressions or Functions used in SSRS</title>
    <link>https://nuxulu.com/2016-10-07-ssrs-sql-server-reporting-services-expressions-or-functions-used-in-ssrs/</link>
    <pubDate>Fri, 07 Oct 2016 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-10-07-ssrs-sql-server-reporting-services-expressions-or-functions-used-in-ssrs/</guid>
    <description><![CDATA[<p>Expressions are usually used for appearance of the data in a report, change properties of the fields, calculate some values and display them in a proper way, compares values between data of fields and then display them.</p>
<h1 id="types-of-expressions">Types of Expressions</h1>
<p>We have 3 types:</p>
<ul>
<li>Globals</li>
<li>Operators - Arithmetic, Comparison,Concatenation, Logical</li>
<li>Common Functions - Text, Date &amp; Time, Math, Inspection, Program Flow, Aggregate, Financial, Conversion, Miscellaneous</li>
</ul>
<p>We can see each and every one very deataily</p>
<h2 id="1-globals">1. Globals</h2>
<p>Global expressions executes/works in Page Header and Footer parts only.</p>
<p><strong>ExecutionTime</strong>  Shows date and time at when report executes<br>
<strong>PageNumber</strong> shows page number of each and every page but allowed only in page header and footer<br>
<strong>ReportName</strong>  displays name of the active report what name we have assigned to the active report<br>
<strong>UserId</strong> shows current user name like <strong><em>company/userID</em></strong><br>
<strong>Language</strong> displays language like US-English…</p>
<h2 id="2-operators">2. Operators</h2>
<h3 id="arithmetic">Arithmetic</h3>
<p><code>^</code> power of<br>
<code>*</code>multiplication<br>
<code>/</code> divides two numbers and returns a floating point result<br>
<code>:</code> divides two numbers and returns a integer result<br>
<code>Mod</code> divides two numbers and returns remainder only<br>
<code>adds</code> two numbers and concatenation for two strings<br>
<code>-</code> subtraction and indicates negative value for numeric values</p>
<!--more-->
<h3 id="comparison">Comparison</h3>
<p>Known operators : <code>&lt; &lt;= &gt; &gt;= &lt;&gt;</code><br>
<code>Like</code> compares two strings and return true if matched or else returns False.<br>
<em>Ex:</em> <code>=Fields!Title.Value Like Fields!LoginID.Value</code></p>
<p><code>Is</code> compare two object reference variables<br>
<em>Ex:</em> <code>=Fields!Title.Value Is Null</code></p>
<h3 id="concatenation">Concatenation</h3>
<p><code>+</code> and <code>&amp;</code> symbols uses for concatenation</p>
<h3 id="logical">Logical</h3>
<p>Known: <code>And, Not, Or, Xor</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">users</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">firstname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Larry&#39;</span><span class="w"> </span><span class="n">XOR</span><span class="w"> </span><span class="n">lastname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Smith&#39;</span><span class="o">`</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><code>AndAlso</code> First condition will check first and if it is true only, goes to next or else it won&rsquo;t need to check. Because our execution time is saving in a logical operation in which more conditions is combined using <code>AndAlso</code> function.<br>
<code>OrElse</code> same like above</p>
<h2 id="3-common-functions">3. Common Functions</h2>
<h3 id="text"><strong>Text</strong></h3>
<p><code>Asc, AscW</code> returns an integer value represents character code corresponding to a character.<br>
<code>Chr, chrw</code> returns the character associated with the specified character code<br>
<code>Filter</code> =Filter(Fields!Title.Value,&ldquo;Pr&rdquo;,true,0)<br>
<code>Format</code>=Format(Fields!Price.Value, &ldquo;#,##0.00&rdquo;), Format(Fields!Date.Value, &ldquo;yyyy-MM-dd&rdquo;)<br>
<code>FormatCurrency</code> =formatcurrency(Fields!SickLeaveHours.Value,3)<br>
<code>FormatDateTime</code> =FormatDateTime(Fields!BirthDate.Value,Integer)<br>
<strong>Ex</strong>:<br>
<em>0 returns 6/3/1977<br>
1 returns Friday, June 03, 1977<br>
2 returns 6/3/1977<br>
3 returns 12:00:00AM<br>
4 returns 00:00</em></p>
<p><code>FormatNumber</code> =FormatNumber(Fields!EmployeeID.Value,2), then result is 2.00<br>
<code>FormatPercent</code> =&ldquo;Percentage : &quot; &amp; formatpercent(Fields!SickLeaveHours.Value)<br>
<code>GetChar</code> =GetChar(Fields!Title.Value,5)<br>
<code>InStr</code> =InStr(Fields!Title.Value,&ldquo;a&rdquo;)<br>
<code>InStrRev</code> =Instrrev(Fields!Title.Value,&ldquo;a&rdquo;)<br>
<code>LCase</code> =Lcase(Fields!Title.Value), Change strings into lower case<br>
<code>Left</code> =Left(Fields!Title.Value,4), Returns left side characters from a string<br>
<code>Len</code> =Len(Fields!Title.Value), Finds length of a string<br>
<code>LSet</code> =Lset(Fields!Title.Value,5), Returns some length of a string from left<br>
<code>LTrim</code> =Ltrim(&rdquo; &ldquo;&amp;Fields!Title.Value), Trim left side of a string<br>
<code>Mid</code> =Mid(Fields!Title.Value,InSTrRev(Fields!Title.Value,&ldquo;T&rdquo;)), Returns characters from the   mentioned starting position<br>
<code>Replace</code> =Replace(Fields!Title.Value,&ldquo;a&rdquo;,&ldquo;A&rdquo;), Replaces one string with another<br>
<code>Right</code> =Right(Fields!Title.Value,10), Returns right side characters from a string<br>
<code>RSet</code> =Rset(Fields!Title.Value,5),Returns some length of a string from left<br>
<code>RTrim</code> =Rtrim(Fields!Title.Value &amp; &quot; &ldquo;), Trim left side of a string<br>
<code>Space</code> =Fields!Title.Value &amp; Space(5) &amp; Fields!Title.Value, Specifies some spaces within strings<br>
<code>StrComp</code> Returns a value indicating the result of a string comparison<br>
<code>vbBinaryCompare 0</code> Perform a binary comparison.<br>
<code>vbTextCompare 1</code> Perform a textual comparison.<br>
<code>string1</code> is less than <code>string2</code> -1<br>
<code>string1</code> is equal to <code>string2</code> 0<br>
<code>string1</code> is greater than <code>string2</code> 1<br>
<code>string1</code> or <code>string2</code> is Null Null<br>
<code>StrConv</code><br>
=Strconv(Fields!Title.Value,vbProperCase)<br>
=Strconv(Fields!Title.Value,vbLowerCase)<br>
=Strconv(Fields!Title.Value,vbUpperCase)<br>
<code>StrDup</code> =StrDup(3,&ldquo;M&rdquo;), Returns a string or object consisting of the specified character repeated the specified number of times.<br>
<code>StrReverse</code> =StrReverse(Fields!Title.Value)<br>
<code>Trim</code> =Trim(&rdquo; &ldquo;&amp; Fields!Title.Value &amp; &quot; &ldquo;)<br>
<code>UCase</code> =Ucase(Fields!Title.Value)</p>
<h3 id="date--time"><strong>Date &amp; Time</strong></h3>
<p><code>CDate</code> Converts a object into date format<br>
=Format(CDate(Fields!BirthDate.Value),&ldquo;MMMM yyyy&rdquo;)<br>
<code>DateAdd</code> Returns a datetime that is the result of adding the specified number of time interval units to the original datetime.<br>
=dateadd(&ldquo;m&rdquo;,12,Fields!BirthDate.Value)<br>
<code>DateDiff</code> Find number of days, months and years between two dates<br>
=datediff(&ldquo;d&rdquo;,Fields!BirthDate.Value,Now)<br>
<code>DatePart</code> DatePart(DateInterval.Weekday, CDate(&ldquo;2009/11/13&rdquo;), FirstDayOfWeek.Monday) returns 5 (Friday)<br>
<code>DateSerial</code> for first day of the month<br>
=DateSerial(Year(Now), Month(Now), 1)<br>
for the last day of the month<br>
=DateSerial(Year(Now), Month(Now)+1, 0) <br>
<code>DateString</code> Returns string value of system date<br>
=datestring()<br>
<code>DateValue</code> Returns current date<br>
<code>Day</code> Returns day value from date<br>
=day(Fields!BirthDate.Value)<br>
<code>FormatDateTime</code> =FormatDateTime(Fields!BirthDate.Value,Integer)
<em>Examples:</em>
0 returns 6/3/1977<br>
1 returns Friday, June 03, 1977<br>
2 returns 6/3/1977<br>
3 returns 12:00:00AM<br>
4 returns 00:00<br>
<code>Hour</code> =Hour(Fields!BirthDate.Value)<br>
<code>Minute</code> =Minute(Fields!BirthDate.Value)<br>
<code>Month</code> =Month(Fields!BirthDate.Value)<br>
<code>MonthName</code> =MonthName(Month(Fields!BirthDate.Value))<br>
<code>Now</code> Indicates current month<br>
=Now() or =Now<br>
<code>Second</code> =Second(Fields!BirthDate.Value)<br>
<code>TimeOfDay</code> =TimeOfDay()<br>
Returns a date value containing the current time of day according to your system<br>
<code>Timer</code> =Timer() <br>
Returns number of seconds elapsed since midnight<br>
<code>TimeSerial</code> =TimeSerial(24,60,60)<br>
Returns a date value representing a specified hour, minute and second<br>
<code>TimeString</code> =TimeString()<br>
Returns string value representing the current time of day according to your system<br>
<code>TimeValue</code> Returns a date value set to jan 1 of year 1<br>
=TimeValue(Fields!BirthDate.Value)<br>
<code>Today</code> Returns Current date<br>
<code>Weekday</code> Returns an integer value representing day of week<br>
=WeekDay(Fields!BirthDate.Value)<br>
<code>WeekdayName</code> =WeekdayName(Weekday(Fields!BirthDate.Value))<br>
Returns name of the day of week<br>
<code>Year</code> =year(Fields!BirthDate.Value)<br>
Returns year of specified date</p>
<h3 id="math">Math</h3>
<p><code>Abs=Abs(-2.36)</code></p>
<p>Returns the absolute value</p>
<p><code>BigMul =BigMul(2,3)</code></p>
<p>Returns multiplication value of two specified numbers</p>
<p><code>Ceiling =Ceiling(2.67)</code></p>
<p>Returns next highest value</p>
<p><code>Cos=Cos(2.33)</code></p>
<p>Returns cos value for specified number</p>
<p><code>Cosh=Cosh(2.33)</code>
Returns hyperbolic cos value</p>
<p><code>DivRem=DivRem(23,2,5)</code></p>
<p><code>Fix=Fix(23.89)</code></p>
<p>Returns integer portion</p>
<p><code>Floor=Floor(24.54)</code></p>
<p>Returns largest integer</p>
<p><code>Int=Int(24.78)</code></p>
<p>Returns integer portion of a number</p>
<p><code>Log=Log(24.78)</code></p>
<p>Returns logarithm value</p>
<p><code>Log10=Log10(24.78)</code></p>
<p>Returns the base 10 logaritm value</p>
<p><code>Max=Max(Fields!EmployeeID.Value)</code></p>
<p>Returns larger value in the specified values</p>
<p><code>Min=Min(Fields!EmployeeID.Value)</code></p>
<p>Returns smaller value in the specified values</p>
<p><code>Pow=Pow(Fields!EmployeeID.Value,2)</code></p>
<p>Returns power of value for specified number</p>
<p><code>Rnd=Rnd()</code></p>
<p>Returns a random number</p>
<p><code>Round=Round(43.16)</code></p>
<p>Returns rounded value to the nearest integer</p>
<p><code>Sign=Sign(-34534543)</code></p>
<p><code>Sin=Sin(Fields!EmployeeID.Value)</code>
Returns the sin value</p>
<p><code>Sinh=Sinh(Fields!EmployeeID.Value)</code>
Returns the hyperbolic sin value</p>
<h3 id="inspection">Inspection</h3>
<p><code>IsArray =IsArray(Fields!EmployeeID.Value)</code></p>
<p>Returns a boolean value indicating whether the specified object is array or not</p>
<p><code>IsDate =IsDate(Fields!BirthDate.Value)</code></p>
<p>Returns a boolean value indicating whether the specified object is Date or not</p>
<p><code>IsNothing =IsNothing(Fields!EmployeeID.Value)</code></p>
<p>Returns a boolean value depends on specified object is Nothing or not</p>
<p><code>IsNumeric =IsNumeric(Fields!EmployeeID.Value)</code></p>
<p>Returns a boolean value depends on specified object is Numeric value or not</p>
<h3 id="program-flow">Program Flow</h3>
<p><code>Choose =CHOOSE(3, &quot;Red&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;White&quot;)</code></p>
<p>Returns a specific value using index in a list of arguments</p>
<p><code>IIf =IIF(Fields!EmployeeID.Value&gt;10,&quot;Yes&quot;,&quot;No&quot;)</code></p>
<p>Returns any one value depends on condition</p>
<p><code>Switch =Switch(Fields!EmployeeID.Value&lt;10,&quot;Red&quot;,Fields!EmployeeID.Value&gt;10,&quot;Green&quot;)</code></p>
<p>Evaluates list of expressions</p>
<h3 id="aggregate">Aggregate</h3>
<p><code>Avg =Avg(Fields!EmployeeID.Value)</code></p>
<p>Returns average value for all specified values</p>
<p><code>Count =Count(Fields!EmployeeID.Value)</code></p>
<p>Returns count of all specified values</p>
<p><code>CountDistinct =CountDistinct(Fields!EmployeeID.Value)</code></p>
<p>Returns count of all distinct values</p>
<p><code>CountRows =CountRows()</code></p>
<p>Returns count of rows</p>
<p><code>First =First(Fields!EmployeeID.Value)</code></p>
<p>Returns first for all specified values</p>
<p><code>Last =Last(Fields!EmployeeID.Value)</code></p>
<p>Returns last for all specified values</p>
<p><code>Max =Max(Fields!EmployeeID.Value)</code></p>
<p>Returns max for all specified values</p>
<p><code>Min =Min(Fields!EmployeeID.Value)</code></p>
<p>Returns min for all specified values</p>
<p><code>StDev =StDev(Fields!EmployeeID.Value)</code></p>
<p>Returns standard deviation value</p>
<p><code>StDevP =StDevP(Fields!EmployeeID.Value)</code></p>
<p>Returns Population standard deviation value</p>
<p><code>Sum =Sum(Fields!EmployeeID.Value)</code></p>
<p>Returns sum of all values</p>
<p><code>Var =Var(Fields!EmployeeID.Value)</code></p>
<p>Returns variance of all values</p>
<p><code>VarP =Var(Fields!EmployeeID.Value)</code></p>
<p>Returns population variance of all values</p>
<p><code>RunningValue =RunningValue(Fields!EmployeeID.Value,sum,nothing)</code></p>
<p>Returns running aggregate of the specified
expression</p>
<h3 id="financial">Financial</h3>
<p><code>DDB DDB</code> (Double Declining Balance) method computes depreciation of an asset for a specified period.</p>
<p>Syntax: <code>DDB (Cost, Salvage, life, period, factor)</code></p>
<p><code>FV FV</code> (Future Value) of an investment based on periodic, constant payments and a constant interest rate.</p>
<p>Syntax: <code>FV (rate, nper, pmt, pv, type)</code></p>
<p><code>IPmt IPmt</code> (Interest Payment) for a given period for an investment based on periodic, constant payment and a constant interest rate</p>
<p><code>IPMT (rate, per, nper, pv, fv, type)</code></p>
<p><code>IRR IRR</code> (Interest Rate of Return) for a series of cash flows represented by the numbers in values.</p>
<p><code>IRR(values,guess)</code></p>
<p><code>MIRR MIRR</code> ( Modified internal rate of return ) for a series of periodic cash flows</p>
<p><code>MIRR(values,finance_rate,reinvest_rate)</code></p>
<p><code>NPer</code> Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.</p>
<p><code>NPER (rate, pmt, pv, fv, type)</code></p>
<p><code>NPV</code> Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).</p>
<p>Syntax: <code>NPV(rate,value1,value2, ...)</code></p>
<p><code>Pmt</code> Calculates the payment for a loan based on constant payments and a constant interest rate.</p>
<p><code>PMT(rate,nper,pv,fv,type)</code></p>
<p>PPmt Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.</p>
<p><code>PPMT(rate,per,nper,pv,fv,type)</code></p>
<p>PV Returns the present value of an investment. The present value is the total amount that a series of future payments is worth now. For example, when you borrow money, the loan amount is the present value to the lender.</p>
<p><code>PV(rate,nper,pmt,fv,type)</code></p>
<p>Rate Returns the interest rate per period of an annuity. RATE is calculated by iteration and can have zero or more solutions.</p>
<p><code>RATE(nper,pmt,pv,fv,type,guess)</code></p>
<p>SLN Returns the straight-line depreciation of an asset for one period.</p>
<p><code>SLN(cost,salvage,life)</code></p>
<p>SYD Returns the sum-of-years&rsquo; digits depreciation of an asset for a specified period.
<code>SYD(cost,salvage,life,per)</code></p>
<h3 id="conversion">Conversion</h3>
<p><code>CBool</code> Convert to boolean</p>
<p><code>CByte</code> Convert to byte</p>
<p><code>CChar</code> Convert to char</p>
<p><code>CDate</code> Convert to date</p>
<p><code>CDbl</code> Convert to double</p>
<p><code>CDec</code> Convert to decimal</p>
<p><code>CInt</code> Convert to integer</p>
<p><code>CLng</code> Convert to long</p>
<p><code>CObj</code> Convert to object</p>
<p><code>CShort</code> Convert to short</p>
<p><code>CSng</code> Convert to single</p>
<p><code>CStr</code> Convert to string</p>
<p><code>Hex =Hex(Fields!EmployeeID.Value)</code></p>
<p>Returns a hexadecimal value of a number</p>
<p><code>Int =Int(43.44)</code></p>
<p>Returns integer portion of a number</p>
<p><code>Oct =Oct(Fields!EmployeeID.Value)</code></p>
<p>Returns a octal value of a number</p>
<p><code>Str =Str(Fields!EmployeeID.Value)</code></p>
<p>Returns string value of a number</p>
<p><code>Val =Val(&quot;32.43&quot;)</code></p>
<p>Returns numeric value in string format</p>
<h3 id="miscellaneous">Miscellaneous</h3>
<p><code>Previous =Previous(Fields!EmployeeID.Value)</code></p>
<p>Returns the previous value</p>]]></description>
</item>
<item>
    <title>Evolution of programming languages</title>
    <link>https://nuxulu.com/2016-09-06-evolution-of-programming-languages/</link>
    <pubDate>Tue, 06 Sep 2016 18:47:00 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-09-06-evolution-of-programming-languages/</guid>
    <description><![CDATA[<p></p>
<p></p>
]]></description>
</item>
<item>
    <title>Create record in DimensionAttributeValueCombination table manually.</title>
    <link>https://nuxulu.com/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</link>
    <pubDate>Tue, 05 Jul 2016 18:47:00 &#43;0900</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</guid>
    <description><![CDATA[<p>Sometime we need this <code>RecId</code> value in <code>DimansionAttributeValueCombination</code> Table for some reasons likes putting new dimension in <code>LedgerDimension</code> field in <code>LedgerJournalTrans</code> Table, or somewhere else.</p>
<p>Suppose my Account structure likes: <em><strong>MainAcct - Dept - Woker - SubAcct - Item</strong></em>,
you can custom base on your struture.</p>
<p>This code is for creating a record into <code>DimansionAttributeValueCombination</code> in code and then get <code>RecID</code> of this.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">createDimensionAttributeValueCombination</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttributeValueContract</span>     <span class="n">ValueContract</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionAttributeValueCombination</span>  <span class="n">davc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">MainAccount</span>                         <span class="n">valueMainAccount</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DimensionStorage</span>                    <span class="n">dimStorage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">DimensionServiceProvider</span> <span class="n">DimensionServiceProvider</span>   <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionServiceProvider</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">LedgerAccountContract</span> <span class="n">LedgerAccountContract</span>         <span class="p">=</span> <span class="k">new</span> <span class="n">LedgerAccountContract</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">List</span> <span class="n">ListValueContract</span>                              <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">(</span><span class="n">Types</span><span class="p">::</span><span class="n">Class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// Get main account with structure : Mainacct - DE - woker - subacct - item</span>
</span></span><span class="line"><span class="cl">    <span class="n">valueMainAccount</span> <span class="p">=</span> <span class="n">MainAccount</span><span class="p">::</span><span class="n">findByMainAccountId</span><span class="p">(</span><span class="err">&#39;</span><span class="m">910001</span><span class="err">&#39;</span><span class="p">);</span> <span class="c1">//Get main account</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionAttributeValueContract</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmName</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Department</span><span class="err">&#39;</span><span class="p">)</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmValue</span><span class="p">(</span><span class="err">&#39;</span><span class="m">6020</span><span class="err">&#39;</span><span class="p">);</span> <span class="c1">//Value for dimension Department</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListValueContract</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">ValueContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionAttributeValueContract</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmName</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Worker</span><span class="err">&#39;</span><span class="p">)</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmValue</span><span class="p">(</span><span class="err">&#39;</span><span class="m">000001</span><span class="err">&#39;</span><span class="p">);</span> <span class="c1">//Value for dimension ExpenseCode</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListValueContract</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">ValueContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionAttributeValueContract</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmName</span><span class="p">(</span><span class="err">&#39;</span><span class="n">SubAcct</span><span class="err">&#39;</span><span class="p">)</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmValue</span><span class="p">(</span><span class="err">&#39;교보생명&#39;</span><span class="p">);</span> <span class="c1">//Value for dimension Project</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListValueContract</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">ValueContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DimensionAttributeValueContract</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmName</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Item</span><span class="err">&#39;</span><span class="p">)</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ValueContract</span><span class="p">.</span><span class="n">parmValue</span><span class="p">(</span><span class="err">&#39;</span><span class="m">110329</span><span class="err">&#39;</span><span class="p">);</span> <span class="c1">//Value for dimension Project</span>
</span></span><span class="line"><span class="cl">    <span class="n">ListValueContract</span><span class="p">.</span><span class="n">addEnd</span><span class="p">(</span><span class="n">ValueContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">LedgerAccountContract</span><span class="p">.</span><span class="n">parmMainAccount</span><span class="p">(</span><span class="n">valueMainAccount</span><span class="p">.</span><span class="n">MainAccountId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">LedgerAccountContract</span><span class="p">.</span><span class="n">parmValues</span><span class="p">(</span><span class="n">ListValueContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//if combination is not exist then create new one</span>
</span></span><span class="line"><span class="cl">    <span class="n">dimStorage</span> <span class="p">=</span> <span class="n">DimensionServiceProvider</span><span class="p">::</span><span class="n">buildDimensionStorageForLedgerAccount</span><span class="p">(</span><span class="n">LedgerAccountContract</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">davc</span> <span class="p">=</span> <span class="n">DimensionAttributeValueCombination</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">dimStorage</span><span class="p">.</span><span class="n">save</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;RecId : %1 - DisplayValue : %2&#34;</span><span class="p">,</span> <span class="n">davc</span><span class="p">.</span><span class="n">RecId</span><span class="p">,</span> <span class="n">davc</span><span class="p">.</span><span class="n">DisplayValue</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>or you can use this way</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">createDimension</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Struct</span>      <span class="k">struct</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Struct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">container</span>   <span class="n">financialDimension</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">LedgerDimensionAccount</span> <span class="n">legder</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cs">//// Get main account with structure : Mainacct - DE - woker - subacct - item</span>
</span></span><span class="line"><span class="cl">    <span class="n">struct</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Department</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="m">6020</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">struct</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Item</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="m">220006</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">struct</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="err">&#39;</span><span class="n">SubAcct</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="n">Max</span> <span class="n">test</span> <span class="n">account</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">struct</span><span class="p">.</span><span class="k">add</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Worker</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="m">000002</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">fields</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">fieldName</span><span class="p">(</span><span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">valueIndex</span><span class="p">(</span><span class="m">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">fieldName</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">valueIndex</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">fieldName</span><span class="p">(</span><span class="m">3</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">valueIndex</span><span class="p">(</span><span class="m">3</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">fieldName</span><span class="p">(</span><span class="m">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">financialDimension</span> <span class="p">+=</span> <span class="n">struct</span><span class="p">.</span><span class="n">valueIndex</span><span class="p">(</span><span class="m">4</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">legder</span> <span class="p">=</span> <span class="n">DimensionDefaultingService</span><span class="p">::</span><span class="n">serviceCreateLedgerDimension</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                            <span class="n">DimensionStorage</span><span class="p">::</span><span class="n">getDefaultAccountForMainAccountNum</span><span class="p">(</span><span class="s">&#34;910001&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                            <span class="n">AxdDimensionUtil</span><span class="p">::</span><span class="n">getDimensionAttributeValueSetId</span><span class="p">(</span><span class="n">financialDimension</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;%1&#34;</span><span class="p">,</span><span class="n">legder</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>How to verify active inventory dimensions on an item</title>
    <link>https://nuxulu.com/2016-01-17-how-to-verify-active-inventory-dimensions-on-an-item/</link>
    <pubDate>Sun, 17 Jan 2016 16:22:50 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-01-17-how-to-verify-active-inventory-dimensions-on-an-item/</guid>
    <description><![CDATA[<p>If you want to list items come along with their Actvie Dimension, you can do it easily with this simple job</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="n">InventTable</span>     <span class="n">inventTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">InventDimParm</span>   <span class="n">inventDimParm</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">inventTable</span>   <span class="p">=</span> <span class="n">InventTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="err">&#39;</span><span class="m">110924</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">inventDimParm</span> <span class="p">=</span>  <span class="n">InventDimParm</span><span class="p">::</span><span class="n">activeDimFlag</span><span class="p">(</span><span class="n">InventDimGroupSetup</span><span class="p">::</span><span class="n">newInventTable</span><span class="p">(</span><span class="n">inventTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="n">inventDimParm</span><span class="p">.</span><span class="n">InventSiteIdFlag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">info</span><span class="p">(</span><span class="s">&#34;Site Actived&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Only integrated security is supported for AX queries</title>
    <link>https://nuxulu.com/2016-01-15-only-integrated-security-is-supported-for-ax-queries/</link>
    <pubDate>Sun, 17 Jan 2016 16:22:50 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-01-15-only-integrated-security-is-supported-for-ax-queries/</guid>
    <description><![CDATA[<p>I updated my dynamics Ax development Environment by restoring Database from <strong>Production Database</strong> . After the restoring the database, when I run any report form Dynamics Ax, all gave error  <code>“Only integrated security is supported for AX queries.”</code>
The reporting Services are still working fine.
For this, best way to redeploy them, create a new report folder, open Microsoft Dynamics Ax 2012 Management Shell (make sure you run Powershell as Administrator).</p>
<p><code>Publish-AXReport -ReportName *</code></p>
]]></description>
</item>
<item>
    <title>SSRS Report Server Settings Validation Error- AX 2012 R3 CU9</title>
    <link>https://nuxulu.com/2016-01-15-ssrs-report-server-settings-validation-error-ax-2012-r3-cu9/</link>
    <pubDate>Fri, 15 Jan 2016 16:22:50 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-01-15-ssrs-report-server-settings-validation-error-ax-2012-r3-cu9/</guid>
    <description><![CDATA[<p>Recently I updated my dynamics Ax development Environment by restoring Database from Production Dynamics AX DB and I got this problem</p>
<p><strong>Make sure that SQL Server Reporting Services is configured correctly. Verify the Web Service URL and Report Manager URL configuration in the SQL Reporting Services Configuration Manager.</strong></p>
<p>Anyway, The reporting Services are still working fine and i have already granted the AX Admin as System Administrator under site settings, Home folder settings and DynamicsAX folder with <code>“Browser, Content Manager, DynamicsAXBrowser, My Reports, Publisher, Report Builder”</code> roles.</p>
<p>Solution is we need disable UAC (I&rsquo;m using Windows Server 2012 R2) by <em>Regedit</em></p>
<p>go to Regedit: <code>“HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionpoliciessystem”</code> and changing the DWORD <code>“EnableLUA”</code> from 1 to 0.</p>
<p>After the reboot, UAC is disabled.</p>
<p>Happy AXsing</p>
]]></description>
</item>
<item>
    <title>Link Type and Join Types in ax 2012</title>
    <link>https://nuxulu.com/2016-01-07-link-type-and-join-types-in-ax-2012/</link>
    <pubDate>Thu, 07 Jan 2016 04:39:12 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2016-01-07-link-type-and-join-types-in-ax-2012/</guid>
    <description><![CDATA[<h2 id="link-type">Link Type</h2>
<p><strong>Active</strong>:
<code>Parent and child</code> data source is updated immediately when a new record in the parent data source is selected. Continuous updates consume lots of resources consuming.</p>
<p><strong>Delayed</strong>:
<code>Parent and child</code> A pause is inserted before linked child data sources are updated. This enables faster navigation in the parent data source because the records from child data sources are not updated immediately.</p>
<p>For example, you can scroll a list of orders where you do not want to review the lines associated with the order until you stop scrolling.</p>
<p><strong>Passive</strong>: <code>Parent and child</code> Linked child data sources are not updated automatically. Updates of the child data source must be programmed on the <code>active()</code> method of the master data source.</p>
<h2 id="join-types">Join Types</h2>
<p><strong>InnerJoin</strong> <code>Combined data source</code> select the record from the main table that matches records in the joined table and vice versa.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">//</span><span class="n">X</span><span class="o">++</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">AccountNum</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">custTable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">join</span><span class="w"> </span><span class="n">TaxGroupId</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">custGroup</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">where</span><span class="w"> </span><span class="n">custGroup</span><span class="p">.</span><span class="n">CustGroup</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">custTable</span><span class="p">.</span><span class="n">CustGroup</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="k">CROSS</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">T</span><span class="o">-</span><span class="k">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">ACCOUNTNUM</span><span class="p">,</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">RECID</span><span class="p">,</span><span class="w"> </span><span class="n">T2</span><span class="p">.</span><span class="n">TAXGROUPID</span><span class="p">,</span><span class="w"> </span><span class="n">T2</span><span class="p">.</span><span class="n">RECID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">CUSTTABLE</span><span class="w"> </span><span class="n">T1</span><span class="w"> </span><span class="k">CROSS</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="n">CUSTGROUP</span><span class="w"> </span><span class="n">T2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="p">((</span><span class="n">T1</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T1</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">AND</span><span class="w"> </span><span class="p">(((</span><span class="n">T2</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T2</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T2</span><span class="p">.</span><span class="n">CUSTGROUP</span><span class="o">=</span><span class="n">T1</span><span class="p">.</span><span class="n">CUSTGROUP</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>There is one record for each match. Records without related records in the other data source are eliminated from the result.</p>
<p><strong>Outer Join</strong>: <code>Combined data source</code> select the records from the main table. The records are retrieved whether they have matching records in the joined table</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">//</span><span class="n">X</span><span class="o">++</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">AccountNum</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">custTable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="n">AccountID</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">custBankAccount</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">where</span><span class="w"> </span><span class="n">custBankAccount</span><span class="p">.</span><span class="n">CustAccount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">custTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="k">LEFT</span><span class="w"> </span><span class="k">OUTER</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">T</span><span class="o">-</span><span class="k">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">ACCOUNTNUM</span><span class="p">,</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">RECID</span><span class="p">,</span><span class="w"> </span><span class="n">T2</span><span class="p">.</span><span class="n">ACCOUNTID</span><span class="p">,</span><span class="w"> </span><span class="n">T2</span><span class="p">.</span><span class="n">RECID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">CUSTTABLE</span><span class="w"> </span><span class="n">T1</span><span class="w"> </span><span class="k">LEFT</span><span class="w"> </span><span class="k">OUTER</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="n">CUSTBANKACCOUNT</span><span class="w"> </span><span class="n">T2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ON</span><span class="w"> </span><span class="p">(((</span><span class="n">T2</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T2</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T1</span><span class="p">.</span><span class="n">ACCOUNTNUM</span><span class="o">=</span><span class="n">T2</span><span class="p">.</span><span class="n">CUSTACCOUNT</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="p">((</span><span class="n">T1</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T1</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Exist Join</strong>: <code>Combined data source</code>The data source retrieves a record from the main table for each matching record in the joined table.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="o">//</span><span class="n">X</span><span class="o">++</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="n">AccountNum</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">custBankAccount</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">exists</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="n">custTable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">where</span><span class="w"> </span><span class="n">custBankAccount</span><span class="p">.</span><span class="n">CustAccount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">custTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">//</span><span class="k">EXISTS</span><span class="w"> </span><span class="p">(</span><span class="k">SELECT</span><span class="w"> </span><span class="s1">&#39;x&#39;</span><span class="p">...)</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">T</span><span class="o">-</span><span class="k">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">ACCOUNTNUM</span><span class="p">,</span><span class="w"> </span><span class="n">T1</span><span class="p">.</span><span class="n">RECID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">CUSTBANKACCOUNT</span><span class="w"> </span><span class="n">T1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="p">((</span><span class="n">T1</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T1</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">AND</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="p">(</span><span class="k">SELECT</span><span class="w"> </span><span class="s1">&#39;x&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">FROM</span><span class="w"> </span><span class="n">CUSTTABLE</span><span class="w"> </span><span class="n">T2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">WHERE</span><span class="w"> </span><span class="p">(((</span><span class="n">T2</span><span class="p">.</span><span class="n">PARTITION</span><span class="o">=?</span><span class="p">)</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">T2</span><span class="p">.</span><span class="n">DATAAREAID</span><span class="o">=?</span><span class="p">))</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="k">AND</span><span class="w">  </span><span class="p">(</span><span class="n">T1</span><span class="p">.</span><span class="n">CUSTACCOUNT</span><span class="o">=</span><span class="n">T2</span><span class="p">.</span><span class="n">ACCOUNTNUM</span><span class="p">)))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><em>The differences between InnerJoin and ExistJoin are as follows:</em></p>
<ul>
<li>
<p>When the join type is <strong><em>ExistJoin</em></strong>, the search ends after the first match has been found.</p>
</li>
<li>
<p>When the join type is <strong><em>InnerJoin</em></strong>, all matching records are searched for.</p>
</li>
<li>
<p><strong><em>NotExistJoin</em></strong>: <code>Combined data source</code> Select records from the main table that do not have a match in the joined table.</p>
</li>
</ul>
]]></description>
</item>
<item>
    <title>How to use operator &#34;or&#34; in QueryBuildRange</title>
    <link>https://nuxulu.com/2015-12-30-how-to-use-operator-in-querybuildrange/</link>
    <pubDate>Wed, 30 Dec 2015 04:23:09 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-12-30-how-to-use-operator-in-querybuildrange/</guid>
    <description><![CDATA[<p>This blog post is show how to apply OR conditions in query build ranges in a simple way on same field in a table. Let&rsquo;s see the simple query :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">CustTable</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">AccountNum</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">&#39;2001&#39;</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="n">AccountNum</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">&#39;2002&#39;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>We can find out solutions on <a href="https://msdn.microsoft.com/en-us/library/aa893981.aspx" target="_blank" rel="noopener noreffer ">MSDN</a>  by using expression in query ranges, but as it has lot of specifications which needs to be followed. However there is a simple way to do it :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">Job12</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">CustTable</span> <span class="n">cust</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Query</span> <span class="n">query</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Query</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildDataSource</span> <span class="n">qbds</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildRange</span> <span class="n">queryRange1</span><span class="p">,</span> <span class="n">queryRange2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">queryRange1</span> <span class="p">=</span> <span class="n">qbds</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">,</span> <span class="n">AccountNum</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">queryRange1</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="err">&#39;</span><span class="m">1168201</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">queryRange2</span> <span class="p">=</span> <span class="n">qbds</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">,</span> <span class="n">AccountNum</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">queryRange2</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="err">&#39;</span><span class="m">9034518</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">,</span> <span class="n">createdDateTime</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">queryRange1</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="n">queryValue</span><span class="p">(</span><span class="n">dateNull</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">,</span> <span class="n">createdDateTime</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">queryRange1</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="n">queryRange</span><span class="p">(</span><span class="n">today</span><span class="p">()+</span><span class="m">1</span><span class="p">,</span> <span class="n">dateMax</span><span class="p">()));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">qbds</span><span class="p">.</span><span class="n">toString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Result in string format as below image :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">CustTable</span><span class="p">(</span><span class="n">CustTable_1</span><span class="p">)</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="p">((</span><span class="n">AccountNum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">N</span><span class="s1">&#39;1168201&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">OR</span><span class="w"> </span><span class="p">(</span><span class="n">AccountNum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">N</span><span class="s1">&#39;9034518&#39;</span><span class="p">))</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Thanks for reading :). Happy New Year.</p>
<p>Ref: <a href="https://learn.microsoft.com/en-us/dynamicsax-2012/developer/using-expressions-in-query-ranges?redirectedfrom=MSDN" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamicsax-2012/developer/using-expressions-in-query-ranges?redirectedfrom=MSDN</a></p>
]]></description>
</item>
<item>
    <title>How to install two instances SSRS on one server</title>
    <link>https://nuxulu.com/2015-12-16-how-to-install-2-instances-ssrs-on-1-server/</link>
    <pubDate>Wed, 16 Dec 2015 09:01:11 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-12-16-how-to-install-2-instances-ssrs-on-1-server/</guid>
    <description><![CDATA[<h2 id="scenario">Scenario:</h2>
<p>I have 2 AOS AX (maybe same in one server or different servers), but only one server for reporting server (I will install and configure multiple SRS instances in this server). Thing is how can we install and configure 2 SSRS instances on same server and running for 2 AOS.</p>
<p>easierly, please take a look the picture below</p>
<p></p>
<p><em><strong>Figure 1</strong>: Two SSRS instance are running same server.</em></p>
<h2 id="problems">Problems:</h2>
<p>First you need to install 2 SSRS instance in same server, and install <code>reporting service component</code> for first AOS, this step is very simple. The problems come when we install second <code>reporting service component</code> for second AOS.</p>
<p>Reporting service component uses <strong>business connector</strong> to connect to AX, and it&rsquo;s saved on configuration in Registry. When we install second <code>reporting service component</code> it will through message that component already installed.</p>
<h2 id="how-to-do">How to do:</h2>
<ol>
<li>After installed second instance into <code>C:\Program Files\Microsoft SQL Server\MSRS12.InstanceName\Reporting Services\ReportServer\bin</code>, we need to create one <code>Dynamics.AX.ReportConfiguration.axc</code> file by <strong>AX configuration client</strong> with second AOS information.</li>
</ol>
<p></p>
<ol start="2">
<li>open <code>MS Dyanmics AX Management Shell</code>, run command below:</li>
</ol>
<p><code>Install-AXReportInstanceExtensions –ReportServerInstanceName [SSRSInstanceName] -Credential [DomainNameUserName]</code></p>
<p></p>
<ol start="3">
<li>goto <code>C:\Program Files\Microsoft SQL Server\MSRS12.SecondInstance\Reporting Services\ReportServer</code> fix <code>fileconfi</code> with value from <code>Execution</code> to <code>FullTrust</code></li>
</ol>
<p></p>
<p>After this, remember restart reporting services.</p>
<p></p>
<p>From now on, you can run 2 AX reporting instance in same server.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>AX 2012 R3 CU8 CU9 and TFS Online 2013 Error</title>
    <link>https://nuxulu.com/2015-11-20-ax-2012-r3-cu8-cu9-and-tfs-online-2013-error/</link>
    <pubDate>Fri, 20 Nov 2015 13:52:40 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-11-20-ax-2012-r3-cu8-cu9-and-tfs-online-2013-error/</guid>
    <description><![CDATA[<p>When you try connecting between TFS and Dynamics AX CU8, CU9 and you got error like this:</p>
<p><em>Error 1</em>
Team Foundation services are not available from server  <strong>****.visualstudio.com/defaultcollection.</strong></p>
<p>Technical information (for administrator):</p>
<p><code>TF400813: Resource not available for anonymous access. Client authentication required.</code></p>
<p><em>Error 2</em></p>
<p><em>Could not load file or assembly &lsquo;Microsoft.TeamFoundation.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&rsquo; or one of its dependencies. The system cannot find the file specified.</em></p>
<p>Client computers that are not running Visual Studio 2010 must have the <a href="https://visualstudiogallery.msdn.microsoft.com/a37e19fb-3052-4fc9-bef7-4a4682069a75" target="_blank" rel="noopener noreffer ">Team Foundation Server 2010 SP1 Object Model</a> installed to use TFS source control with Microsoft Dynamics AX.</p>
<p>TFS support TFS 2010, TFS 2012, TFS 2013 and TFS online, but to connect to these from AX you will need “TFS 2010 object model Sp1” which is client to connect to server.</p>
<p>After install Team Foundation Server 2010 SP1 Object Model above. Client computers that are not running Visual Studio 2010 must have hotfix KB <a href="http://support.microsoft.com/kb/2662296" target="_blank" rel="noopener noreffer ">2662296</a> installed to use TFS source control with Microsoft Dynamics AX.
Once you have installed the above , restart your AOS and open AX client again, then try to check-in some Jobs.</p>
]]></description>
</item>
<item>
    <title>Caching form into AOS to increase performance for Dynamics AX</title>
    <link>https://nuxulu.com/2015-11-17-caching-form-into-aos-to-increase-performance-for-dynamics-ax/</link>
    <pubDate>Tue, 17 Nov 2015 03:13:45 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-11-17-caching-form-into-aos-to-increase-performance-for-dynamics-ax/</guid>
    <description><![CDATA[<p><strong>Scenario:</strong></p>
<p>Normally when we open form for the first time in Dynamics AX, it will take sometimes to compilte and cache into AOS. That&rsquo;s why at second time always faster.
If we often restart AOS, how can we keep performance ?</p>
<p><strong>Solution:</strong></p>
<p>After restart AOS we can let some scripts run to open up some often used forms then cache to AOS, then close those forms.</p>
<p>Here is the code</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">WarmupRF</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">UtilElements</span> <span class="n">e</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">TreeNode</span> <span class="n">treeNode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">FormRun</span> <span class="n">formRun</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">Args</span> <span class="n">args</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Args</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">e</span>
</span></span><span class="line"><span class="cl">        <span class="k">where</span> <span class="n">e</span><span class="p">.</span><span class="n">utilLevel</span>  <span class="p">==</span> <span class="n">UtilEntryLevel</span><span class="p">::</span><span class="kt">var</span>    <span class="c1">//&lt;-- specify layer here</span>
</span></span><span class="line"><span class="cl">        <span class="p">&amp;&amp;</span>    <span class="n">e</span><span class="p">.</span><span class="n">recordType</span> <span class="p">==</span> <span class="n">UtilElementType</span><span class="p">::</span><span class="n">Form</span>  <span class="c1">//&lt;-- and only forms</span>
</span></span><span class="line"><span class="cl">        <span class="p">&amp;&amp;</span>    <span class="n">e</span><span class="p">.</span><span class="n">name</span> <span class="n">like</span> <span class="s">&#34;nameofformPrefix&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">try</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">treeNode</span> <span class="p">=</span> <span class="n">xUtilElements</span><span class="p">::</span><span class="n">getNodeInTree</span><span class="p">(</span><span class="n">xUtilElements</span><span class="p">::</span><span class="n">parentElement</span><span class="p">(</span><span class="n">e</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="n">args</span><span class="p">.</span><span class="n">name</span><span class="p">(</span><span class="n">treeNode</span><span class="p">.</span><span class="n">AOTname</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">                <span class="n">formRun</span> <span class="p">=</span> <span class="n">ClassFactory</span><span class="p">.</span><span class="n">formRunClass</span><span class="p">(</span><span class="n">args</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">formRun</span><span class="p">.</span><span class="k">init</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//formRun.run();   //&lt;-- No need to run the form, but sometimes it can load the data</span>
</span></span><span class="line"><span class="cl">                <span class="n">formRun</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">catch</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">Infolog</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">                <span class="k">continue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>HOW TO USE &#34;LIKE&#34; OPERATOR IN QueryBuildRange</title>
    <link>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</link>
    <pubDate>Fri, 13 Nov 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</guid>
    <description><![CDATA[<p>To make something as the <code>LIKE</code> operator in a query, just assign a value to the QueryRange including a wildcard.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">QueryBuildRange_Sample</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Query</span>                       <span class="n">query</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Query</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryRun</span>                    <span class="n">queryRun</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildDataSource</span>        <span class="n">qbds</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">QueryBuildRange</span>             <span class="n">queryRange</span><span class="p">;</span>   
</span></span><span class="line"><span class="cl">    <span class="n">CustTable</span>                   <span class="n">custTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">qbds</span><span class="p">.</span><span class="n">addDataSource</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">queryRange</span> <span class="p">=</span> <span class="n">qbds</span><span class="p">.</span><span class="n">addRange</span><span class="p">(</span><span class="n">fieldNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">,</span> <span class="n">AccountNum</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">queryRange</span><span class="p">.</span><span class="k">value</span><span class="p">(</span><span class="s">&#34;axd*&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">queryRun</span> <span class="p">=</span> <span class="k">new</span> <span class="n">QueryRun</span><span class="p">(</span><span class="n">query</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">while</span><span class="p">(</span><span class="n">queryRun</span><span class="p">.</span><span class="n">next</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">custTable</span> <span class="p">=</span> <span class="n">queryRun</span><span class="p">.</span><span class="k">get</span><span class="p">(</span><span class="n">tableNum</span><span class="p">(</span><span class="n">CustTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">print</span> <span class="n">custTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">pause</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>DefaultValue ComboBox in Dynamics AX with X&#43;&#43;</title>
    <link>https://nuxulu.com/2015-11-03-defaultvale-combobox-in-x/</link>
    <pubDate>Fri, 13 Nov 2015 06:57:46 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-11-03-defaultvale-combobox-in-x/</guid>
    <description><![CDATA[<p>Beside modify metadata on form properties, as best practice we can use code like below to assign default value for combobox.</p>
<ul>
<li>You can use this code in the form&rsquo;s init method after <code>super()</code>:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">ComboBoxName</span><span class="p">.</span><span class="n">selection</span><span class="p">(</span><span class="n">ComboBoxName</span><span class="p">::</span><span class="n">DefaultValue</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>If this is a table field we should you best practice overriding the <code>initValue</code> method in the table:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">ComboBoxName</span> <span class="p">=</span> <span class="n">ComboBoxName</span><span class="p">::</span><span class="n">DefaultValue</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Override <code>initValue</code> in the form&rsquo;s datasource only if it should be a specific behaviour in this form only.</li>
</ul>
]]></description>
</item>
<item>
    <title>Rename a Database in SQL Server</title>
    <link>https://nuxulu.com/2015-11-03-rename-a-database-in-sql-server/</link>
    <pubDate>Tue, 03 Nov 2015 03:45:13 &#43;0700</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-11-03-rename-a-database-in-sql-server/</guid>
    <description><![CDATA[<ol>
<li>
<p>Open <code>Microsoft SQL Server Management Studio</code>.</p>
</li>
<li>
<p>Connect to the server where in the DB you want to rename is located.</p>
</li>
<li>
<p>Modify the following script and run it</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">-- Replace all MyDBs with the name of the DB you want to change its name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">USE</span><span class="w"> </span><span class="p">[</span><span class="n">MyDB</span><span class="p">];</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- Changing Physical names and paths
</span></span></span><span class="line"><span class="cl"><span class="c1">-- Replace all NewMyDB with the new name you want to set for the DB
</span></span></span><span class="line"><span class="cl"><span class="c1">-- Replace &#39;C:...NewMyDB.mdf&#39; with full path of new DB file to be used
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">MyDB</span><span class="w"> </span><span class="k">MODIFY</span><span class="w"> </span><span class="n">FILE</span><span class="w"> </span><span class="p">(</span><span class="n">NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39; MyDB &#39;</span><span class="p">,</span><span class="w"> </span><span class="n">FILENAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;C:...NewMyDB.mdf&#39;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- Replace &#39;C:...NewMyDB_log.ldf&#39; with full path of new DB log file to be used
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">MyDB</span><span class="w"> </span><span class="k">MODIFY</span><span class="w"> </span><span class="n">FILE</span><span class="w"> </span><span class="p">(</span><span class="n">NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39; MyDB _log&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">FILENAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;C:...NewMyDB_log.ldf&#39;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">-- Changing logical names
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">MyDB</span><span class="w"> </span><span class="k">MODIFY</span><span class="w"> </span><span class="n">FILE</span><span class="w"> </span><span class="p">(</span><span class="n">NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MyDB</span><span class="p">,</span><span class="w"> </span><span class="n">NEWNAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">NewMyDB</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">MyDB</span><span class="w"> </span><span class="k">MODIFY</span><span class="w"> </span><span class="n">FILE</span><span class="w"> </span><span class="p">(</span><span class="n">NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MyDB</span><span class="w"> </span><span class="n">_log</span><span class="p">,</span><span class="w"> </span><span class="n">NEWNAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">NewMyDB_log</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>
<p>Right click on the DB and select <code>Tasks&gt;Take Offline</code></p>
</li>
<li>
<p>Go to the location that <code>MDF</code> and <code>LDF files</code> are located and rename them exactly as you specified in first two alter commands. If you changed the folder path, then you need to move them there.</p>
</li>
<li>
<p>Go back to <code>Microsoft SQL Server Management Studio</code> and right click on the DB and select <code>Tasks&gt;Bring Online</code>.</p>
</li>
</ol>
]]></description>
</item>
<item>
    <title>Web Services on IIS - Exception has been thrown by the target of an invocation</title>
    <link>https://nuxulu.com/2015-08-04-web-services-on-iis-exception-has-been-thrown-by-the-target-of-an-invocation-ax-installation/</link>
    <pubDate>Tue, 04 Aug 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-08-04-web-services-on-iis-exception-has-been-thrown-by-the-target-of-an-invocation-ax-installation/</guid>
    <description><![CDATA[<p>When I try to install Web Services on IIS for Retails POS Component, and I got the problem.</p>
<p>This scenario shouldn&rsquo;t be common in a production environment, but, it is indeed quite common in a VM machine (I&rsquo;m using virtual machine Hyper-V on Windows 8.1)</p>
<p></p>
<p><span style="color: red">Error:</span></p>
<p></p>
<p><code>Exception has been thrown by the target of an invocation</code></p>
<p></p>
<p>So, the problem is relate to thee AOS Service account, which by default is usually <code>NT AUTHORITYNETWORK SERVICE</code> account.</p>
<p></p>
<p>but because of we are running on a Domain Controller Server, we should use any specific Domain account created just for running AOS services, then you’ll success installing Web Services on IIS.</p>
<p></p>
<p>Now please restart services and try again.</p>
<p>Thank you for reading</p>]]></description>
</item>
<item>
    <title>Modify Microsoft Dynamics AX 2012 R3 SSRS configurations using PowerShell</title>
    <link>https://nuxulu.com/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/</link>
    <pubDate>Thu, 02 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/</guid>
    <description><![CDATA[<p><code>reportManagerWebConfig.ps1</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-ExecutionPolicy</span> <span class="n">Unrestricted</span>
</span></span><span class="line"><span class="cl"><span class="nv">$webConfig</span> <span class="p">=</span> <span class="s2">&#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportManagerWeb.config&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$currentDate</span> <span class="p">=</span> <span class="p">(</span><span class="nb">get-date</span><span class="p">).</span><span class="n">tostring</span><span class="p">(</span><span class="s2">&#34;mm_dd_yyyy-hh_mm_s&#34;</span><span class="p">)</span> <span class="c"># month_day_year - hours_mins_seconds</span>
</span></span><span class="line"><span class="cl"><span class="nv">$backup</span> <span class="p">=</span> <span class="nv">$webConfig</span> <span class="p">+</span> <span class="s2">&#34;_$currentDate&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlDocument</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#save a backup copy</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$backup</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s2">&#34;Backup saved as &#34;</span> <span class="p">+</span> <span class="nv">$backup</span>
</span></span><span class="line"><span class="cl"><span class="nv">$node</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">get_DocumentElement</span><span class="p">().</span><span class="s2">&#34;system.web&#34;</span><span class="p">.</span><span class="n">httpRuntime</span>
</span></span><span class="line"><span class="cl"><span class="nv">$attribute</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">CreateAttribute</span><span class="p">(</span><span class="s2">&#34;maxRequestLength&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$attribute</span><span class="p">.</span><span class="n">set_Value</span><span class="p">(</span><span class="s2">&#34;100000&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$node</span><span class="p">.</span><span class="n">SetAttributeNode</span><span class="p">(</span><span class="nv">$attribute</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s2">&#34;1) Modified the Report Manager Web.config file&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code> RsReportServer.ps1</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-ExecutionPolicy</span> <span class="n">Unrestricted</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$version</span> <span class="p">=</span> <span class="s2">&#34;6.3.0.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$webConfig</span> <span class="p">=</span> <span class="s2">&#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerRsReportServer.config&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$currentDate</span> <span class="p">=</span> <span class="p">(</span><span class="nb">get-date</span><span class="p">).</span><span class="n">tostring</span><span class="p">(</span><span class="s2">&#34;mm_dd_yyyy-hh_mm_s&#34;</span><span class="p">)</span> <span class="c"># month_day_year - hours_mins_seconds</span>
</span></span><span class="line"><span class="cl"><span class="nv">$backup</span> <span class="p">=</span> <span class="nv">$webConfig</span> <span class="p">+</span>  <span class="s2">&#34;.xml&#34;</span> <span class="c">#&#34;_$currentDate&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlDocument</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#save a backup copy</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$backup</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span>  <span class="s2">&#34;Backup saved as &#34;</span> <span class="p">+</span> <span class="nv">$backup</span>
</span></span><span class="line"><span class="cl"><span class="c">#remove node &#34;RSWindowsNegotiate&#34; </span>
</span></span><span class="line"><span class="cl"><span class="nv">$node</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Authentication/AuthenticationTypes/RSWindowsNegotiate&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$node</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$node</span><span class="p">.</span><span class="n">ParentNode</span><span class="p">.</span><span class="n">RemoveChild</span><span class="p">(</span><span class="nv">$node</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span>    <span class="nb">Write-Host</span>  <span class="s2">&#34;RSWindowsNegotiate Removed&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Add node &#34;IsRdceEnabled&#34; </span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeService</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Service&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeIsRdceEnabled</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Service/IsRdceEnabled&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#Set to true if already exists, otherwise create the node</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$nodeIsRdceEnabled</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$nodeIsRdceEnabled</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;True&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeService</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$subnodeService</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;IsRdceEnabled&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="nv">$subnodeService</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;True&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$nodeService</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="nv">$subnodeService</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span>        <span class="nb">Write-Host</span>  <span class="s2">&#34;IsRdceEnabled added&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Find Data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeCodeAxQuery</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Extensions/Data/Extension[@Name=&#39;AXQUERY&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#Add Data Extension</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeCodeAxQuery</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$nodeData</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Extensions/Data&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeData</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$nodeData</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="nv">$nodeData</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">+</span> 
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&lt;Extension Name=&#39;AXQUERY&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxQueryConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">      &lt;Extension Name=&#39;AXDATAMETHOD&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxDataMethodConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">      &lt;Extension Name=&#39;AXREPORTDATAPROVIDER&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxReportProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">      &lt;Extension Name=&#39;AXADOMD&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxAdomdConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">      &lt;Extension Name=&#39;AXENUMDATAPROVIDER&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.EnumProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Host</span>  <span class="s2">&#34;Data Extension added&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Find Extensions</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeExtensions</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Extensions&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeReportDefinitionCustomization</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Extensions/ReportDefinitionCustomization&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeReportDefinitionCustomization</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Add ReportDefinitionCustomization</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeExtensions</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$subnodeExt</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;ReportDefinitionCustomization&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="nv">$subnodeExt</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;&lt;Extension Name=&#39;AXRDCE&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$nodeExtensions</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="nv">$subnodeExt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span>        <span class="nb">Write-Host</span>  <span class="s2">&#34;ReportDefinitionCustomization added&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$nodeAXRDCE</span><span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//Configuration/Extensions/ReportDefinitionCustomization/Extension [@Name=&#39;AXRDCE&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeAXRDCE</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$nodeReportDefinitionCustomization</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="nv">$nodeReportDefinitionCustomization</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;&lt;Extension Name=&#39;AXRDCE&#39; Type=&#39;Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl">		<span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;/&gt;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span>  <span class="s2">&#34;2) Modified the Report Server Web.config file&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">text</span> <span class="n">some</span> <span class="n">thing</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>ReportServerRsSrvPolicyConfig.ps1</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c">#Instructions: Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name</span>
</span></span><span class="line"><span class="cl"><span class="c"># Modify version 6.3.0.0 for Dynamics AX 2012</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-ExecutionPolicy</span> <span class="n">Unrestricted</span>
</span></span><span class="line"><span class="cl"><span class="nv">$version</span> <span class="p">=</span> <span class="s2">&#34;6.3.0.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$webConfig</span> <span class="p">=</span> <span class="s2">&#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerrssrvpolicy.config&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$currentDate</span> <span class="p">=</span> <span class="p">(</span><span class="nb">get-date</span><span class="p">).</span><span class="n">tostring</span><span class="p">(</span><span class="s2">&#34;mm_dd_yyyy-hh_mm_s&#34;</span><span class="p">)</span> <span class="c"># month_day_year - hours_mins_seconds</span>
</span></span><span class="line"><span class="cl"><span class="nv">$backup</span> <span class="p">=</span> <span class="nv">$webConfig</span> <span class="p">+</span> <span class="s2">&#34;.xml&#34;</span> <span class="c">#&#34;_$currentDate&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Xml</span><span class="p">.</span><span class="n">XmlDocument</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#save a backup copy</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$backup</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s2">&#34;Backup saved as &#34;</span> <span class="p">+</span> <span class="nv">$backup</span>
</span></span><span class="line"><span class="cl"><span class="c">#Add SecurityClass</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeAxSessionPermission</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses/SecurityClass[@Name=&#39;AxSessionPermission&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeAxSessionPermission</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeSecurityClasses</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeSecurityClasses</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeSecurityClass</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;SecurityClass&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeSecurityClass</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;&lt;SecurityClass Name=&#39;AxSessionPermission&#39; Description=&#39;Microsoft.Dynamics.Framework.Reports.AxSessionPermission, Microsoft.Dynamics.Framework.Reports, Version=&#34;</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$version</span> <span class="p">+</span>
</span></span><span class="line"><span class="cl"> <span class="s2">&#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39; /&gt;&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeSecurityClasses</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="nv">$nodeSecurityClass</span><span class="p">.</span><span class="n">FirstChild</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span> <span class="nb">Write-Host</span> <span class="s2">&#34;SecurityClass added&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Add PermissionSet</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeAxSessionPermissionSet</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets/PermissionSet[@class=&#39;NamedPermissionSet&#39; and @version=&#39;1&#39; and @Name=&#39;AxSessionPermissionSet&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeAxSessionPermissionSet</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeNamedPermissionSets</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeNamedPermissionSets</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodePermissionSet</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;PermissionSet&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodePermissionSet</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;&lt;PermissionSet class=&#39;NamedPermissionSet&#39; version=&#39;1&#39; Name=&#39;AxSessionPermissionSet&#39;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;IPermission class=&#39;AxSessionPermission&#39; version=&#39;1&#39; Unrestricted=&#39;true&#39; /&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;IPermission class=&#39;SecurityPermission&#39; version=&#39;1&#39; Flags=&#39;Assertion&#39; /&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;/PermissionSet&gt;&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeNamedPermissionSets</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="nv">$nodePermissionSet</span><span class="p">.</span><span class="n">FirstChild</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span> <span class="nb">Write-Host</span> <span class="s2">&#34;PermissionSet added&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Add CodeGroup</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeAxStrongName</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=&#39;FirstMatchCodeGroup&#39; and @version=&#39;1&#39; and @PermissionSetName=&#39;Nothing&#39;]/CodeGroup[@class=&#39;UnionCodeGroup&#39; and @version=&#39;1&#39; and @PermissionSetName=&#39;FullTrust&#39; and @Name=&#39;AX_Reports_Strong_Name&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">-not</span><span class="p">(</span><span class="nv">$nodeAxStrongName</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeCodeGroup</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=&#39;FirstMatchCodeGroup&#39; and @version=&#39;1&#39; and @PermissionSetName=&#39;Nothing&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nv">$nodeCodeGroup</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$subnodeCodeGroup</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="s2">&#34;CodeGroup&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$subnodeCodeGroup</span><span class="p">.</span><span class="n">InnerXml</span> <span class="p">=</span> <span class="s2">&#34;&lt;CodeGroup class=&#39;UnionCodeGroup&#39; version=&#39;1&#39; PermissionSetName=&#39;FullTrust&#39; Name=&#39;AX_Reports_Strong_Name&#39; Description=&#39;This code group grants Dynamics AX Reports code full trust. &#39;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;IMembershipCondition class=&#39;StrongNameMembershipCondition&#39; version=&#39;1&#39; PublicKeyBlob=&#39;0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9&#39; /&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2"> &lt;/CodeGroup&gt;&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeCodeGroup</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="nv">$subnodeCodeGroup</span><span class="p">.</span><span class="n">FirstChild</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb"></span> <span class="nb">Write-Host</span> <span class="s2">&#34;CodeGroup added&#34;</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c">#Add nodeReportExpressionPermission</span>
</span></span><span class="line"><span class="cl"><span class="c">#http://blogs.msdn.com/b/axsupport/archive/2012/02/02/microsoft-dynamics-ax-2012-reporting-extensions-error-system-security-permissions-environmentpermission-while-running-report.aspx</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nodeReportExpressionPermission</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">documentElement</span><span class="p">.</span><span class="n">SelectSingleNode</span><span class="p">(</span><span class="s2">&#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=&#39;FirstMatchCodeGroup&#39; and @version=&#39;1&#39; and @PermissionSetName=&#39;Nothing&#39;]/CodeGroup[@class=&#39;UnionCodeGroup&#39; and @version=&#39;1&#39; and @PermissionSetName=&#39;Execution&#39; and @Name=&#39;Report_Expressions_Default_Permissions&#39;]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$nodeReportExpressionPermission</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$attribute</span> <span class="p">=</span> <span class="nv">$doc</span><span class="p">.</span><span class="n">CreateAttribute</span><span class="p">(</span><span class="s2">&#34;PermissionSetName&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$attribute</span><span class="p">.</span><span class="n">set_Value</span><span class="p">(</span><span class="s2">&#34;FullTrust&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="nv">$nodeReportExpressionPermission</span><span class="p">.</span><span class="n">SetAttributeNode</span><span class="p">(</span><span class="nv">$attribute</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$doc</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="nv">$webConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write
</span></span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s2">&#34;3) Modified the Report Server rssrvpolicy.config file&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>AxBuild.exe for Parallel Compile on AOS</title>
    <link>https://nuxulu.com/2015-07-01-axbuild-exe-for-parallel-compile-on-aos/</link>
    <pubDate>Wed, 01 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-07-01-axbuild-exe-for-parallel-compile-on-aos/</guid>
    <description><![CDATA[<p>If you have only 10 mins to build ax, try this</p>
<p>In AOS server, go to <code>C:\Program Files\Microsoft Dynamics AX\60\Server\DAX\bin</code> and open <code>cmd</code> from here then run this command</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="n">axbuild</span><span class="p">.</span><span class="n">exe</span> <span class="n">xppcompileall</span> <span class="p">/</span><span class="n">s</span><span class="p">=</span><span class="m">01</span> <span class="p">/</span><span class="n">altbin</span><span class="p">=</span><span class="s">&#34;C:\Program Files (x86)\Microsoft Dynamics AX\60\Client\Bin&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>/s</code> is your AOS number instance, you can check it in windows services
<code>/altbin</code> the path to AX client</p>
<p></p>
<p>Result</p>
<p></p>
<p>Once compile complete, you can import compile log file at <code>C:\Program Files\Microsoft Dynamics AX\60\Server\DAX\log</code> into compiler output of AX client</p>
<p></p>
<p><em>More information</em> <a href="https://msdn.microsoft.com/en-us/library/dn528954.aspx" target="_blank" rel="noopener noreffer ">MSDN</a>.</p>
]]></description>
</item>
<item>
    <title>List Page Interaction Class</title>
    <link>https://nuxulu.com/2015-06-09-list-page-interaction-class/</link>
    <pubDate>Wed, 01 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-06-09-list-page-interaction-class/</guid>
    <description><![CDATA[<p>Form interaction classes that allow user interface control logic to be shared across forms. For instance, controlling which buttons are available to a list page and the associated detail form.</p>
<p>The interaction classes are extending a base ListPageInteraction class. This has some methods supported by the kernel to interact e.g. with initializations of the list page form. Other classes can be build stand alone to execute e.g. a batch process or represent a web service or posting classes.</p>
<p>Form interaction classes are not mandatory for list pages but should be used on data entry forms that require logic. This ensures consistency and allows easier maintenance of logic.</p>
<p>This class inherits <code>from SysListPageInteractionBase</code>, here is some methods we need to know</p>
<ul>
<li>
<p><strong>initializing</strong>: Called when the form is initializing – Similar to the form init method</p>
</li>
<li>
<p><strong>intializeQuery</strong>: Also called when the form is initializing – Similar to the datasource init method.</p>
</li>
<li>
<p><strong>selectionChanged</strong>: Called when the active record changes – Similar to the datasource active method.</p>
</li>
<li>
<p><strong>setButtonEnabled</strong>: Should be overridden to dynamically enable/disable buttons based on the current selection. This is called from the selectionChanged method.</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">void</span> <span class="n">selectionChanged</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Requisition</span> <span class="n">requisition</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">listPage</span><span class="p">().</span><span class="n">activeRecord</span><span class="p">(</span><span class="n">queryDataSourceStr</span><span class="p">(</span><span class="n">RequisitionQuery</span><span class="p">,</span><span class="n">Requisition</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">requisition</span><span class="p">.</span><span class="n">WorkflowApprovalStatus</span> <span class="p">==</span> <span class="n">WorkflowApprovalStatus</span><span class="p">::</span><span class="n">Approved</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="n">listPage</span><span class="p">().</span><span class="n">actionPaneControlEnabled</span><span class="p">(</span><span class="n">formControlStr</span><span class="p">(</span><span class="n">RequisitionListPage</span><span class="p">,</span><span class="n">Edit</span><span class="p">),</span><span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="n">listPage</span><span class="p">().</span><span class="n">actionPaneControlEnabled</span><span class="p">(</span><span class="n">formControlStr</span><span class="p">(</span><span class="n">RequisitionListPage</span><span class="p">,</span><span class="n">Edit</span><span class="p">),</span><span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>setButtonVisibility</strong>: Should be overridden to show/hide buttons when the form first opens. This is used more to do a one-off layout adjustment based on system configuration/parameters, as well as the menu-item used to open the form.</li>
</ul>
<p>eg If you have a menu-item that opens a form based on status, you may want to hide the relevant <code>status</code> field to reduce clutter.</p>
<p>Thank you for reading!</p>]]></description>
</item>
<item>
    <title>Execute external database Stored Procedure from X&#43;&#43; code using ODBC connectivity</title>
    <link>https://nuxulu.com/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</link>
    <pubDate>Wed, 13 May 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</guid>
    <description><![CDATA[<p>This is to show a method to execute external database stored procedures from X++ code. Create a job in AOT with following code. Follow the steps as explained here in the code like replace <code>Server Name</code>, <code>Database name</code> , <code>Stored Procedure name</code>.</p>
<p>The below code is executed through <code>the ODBC Connection</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">execExternalDatabase</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">LoginProperty</span> <span class="n">loginProperty</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ODBCConnection</span> <span class="n">odbcConnection</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Statement</span> <span class="n">statement</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ResultSet</span> <span class="n">resultSet</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">	<span class="n">ResultSetMetaData</span> <span class="n">resultSetMetaData</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Counter</span> <span class="n">counter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">sql</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">SqlStatementExecutePermission</span> <span class="n">perm</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">    <span class="n">loginProperty</span> <span class="p">=</span> <span class="k">new</span> <span class="n">LoginProperty</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">loginProperty</span><span class="p">.</span><span class="n">setServer</span><span class="p">(</span><span class="s">&#34;SERVERNAME Here&#34;</span><span class="p">);</span> <span class="c1">// Replace your Database Server Name here</span>
</span></span><span class="line"><span class="cl">    <span class="n">loginProperty</span><span class="p">.</span><span class="n">setDatabase</span><span class="p">(</span><span class="s">&#34;DemoDB&#34;</span><span class="p">);</span> <span class="c1">//Replace your Database name here</span>
</span></span><span class="line"><span class="cl">    <span class="n">odbcConnection</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ODBCConnection</span><span class="p">(</span><span class="n">loginProperty</span><span class="p">);</span> <span class="c1">// setting odbc connection here.</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="c1">// ODBC Connection to create statement</span>
</span></span><span class="line"><span class="cl">    <span class="n">statement</span> <span class="p">=</span> <span class="n">odbcConnection</span><span class="p">.</span><span class="n">createStatement</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="c1">// Replace the StoredProcedure you want to execute.</span>
</span></span><span class="line"><span class="cl">    <span class="n">sql</span> <span class="p">=</span> <span class="n">strfmt</span><span class="p">(</span><span class="err">&#39;</span><span class="n">EXEC</span><span class="p">[</span><span class="n">myStoredProcedureName</span><span class="p">]</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="c1">// Set code access permission to Execute</span>
</span></span><span class="line"><span class="cl">    <span class="n">perm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlStatementExecutePermission</span><span class="p">(</span><span class="n">sql</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">perm</span><span class="p">.</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// if Stored Procedure has Select query use executeQuery method.</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">        <span class="n">resultSet</span> <span class="p">=</span> <span class="n">statement</span><span class="p">.</span><span class="n">executeQuery</span><span class="p">(</span><span class="n">sql</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">resultSet</span><span class="p">.</span><span class="n">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">        <span class="n">resultSetMetaData</span> <span class="p">=</span> <span class="n">resultSet</span><span class="p">.</span><span class="n">getMetaData</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">counter</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">counter</span> <span class="p">&lt;=</span> <span class="n">resultSetMetaData</span><span class="p">.</span><span class="n">getColumnCount</span><span class="p">();</span> <span class="n">counter</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">switch</span><span class="p">(</span><span class="n">resultSetMetaData</span><span class="p">.</span><span class="n">getColumnType</span><span class="p">(</span><span class="n">counter</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="m">0</span><span class="p">,</span><span class="m">1</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">info</span><span class="p">(</span><span class="n">resultSet</span><span class="p">.</span><span class="n">getString</span><span class="p">(</span><span class="n">counter</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="m">3</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">info</span><span class="p">(</span><span class="n">date2StrUsr</span><span class="p">(</span><span class="n">resultSet</span><span class="p">.</span><span class="n">getdate</span><span class="p">(</span><span class="n">counter</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">exception</span><span class="p">::</span><span class="n">Error</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">print</span> <span class="s">&#34;An error occured in the query.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">pause</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Code access permission scope ends here.</span>
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Used a simple select query in the stored procedure and the result will be displayed on the infolog.</p>
]]></description>
</item>
<item>
    <title>How to deploy all the reports in AX2012 by using Management Shell</title>
    <link>https://nuxulu.com/2015-05-13-how-to-deploy-all-the-reports-in-ax2012-by-using-management-shell/</link>
    <pubDate>Wed, 13 May 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-05-13-how-to-deploy-all-the-reports-in-ax2012-by-using-management-shell/</guid>
    <description><![CDATA[<p>Login to the AX AOS server and follow below steps.</p>
<ol>
<li>
<p>Click <code>Start &gt; Administrative Tools</code>.</p>
</li>
<li>
<p>Right-click the Microsoft Dynamics AX 2012 Management Shell option.</p>
</li>
<li>
<p>Click Run as administrator.</p>
</li>
</ol>
<p>Go to PowerShell command prompt and run with command</p>
<p><code>Publish-AXReport –ReportName *</code></p>
<p>Wait up to getting Deployment successful message in command prompt.</p>
]]></description>
</item>
<item>
    <title>Execute Stored Procedure from X&#43;&#43; code</title>
    <link>https://nuxulu.com/2015-05-12-execute-stored-procedure-from-x-code/</link>
    <pubDate>Tue, 12 May 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-05-12-execute-stored-procedure-from-x-code/</guid>
    <description><![CDATA[<p>To execute a stored procedure from X++ use the Server method, the Client method does not have permissions. you don’t require any special privileges or permissions to execute a stored procedure. if used other then Server method, a message should appear like this <code>Request for the permission of type SqlStatementExecutePermission failed.</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">main</span><span class="p">(</span><span class="n">AssemblyLoadEventArgs</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Connection</span> <span class="n">con</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Connection</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">Statement</span> <span class="n">stmt</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Con</span><span class="p">.</span><span class="n">createStatement</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="n">ResultSet</span> <span class="n">r</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="n">sql</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="n">SqlStatementExecutePermission</span> <span class="n">perm</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sql</span> <span class="p">=</span> <span class="n">stmt</span><span class="p">(</span><span class="err">&#39;</span><span class="n">EXEC</span> <span class="p">[</span><span class="n">StoreprocedureName</span><span class="p">]</span><span class="err">&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">perm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlStatementExecutePermission</span><span class="p">(</span><span class="n">sql</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">perm</span><span class="p">.</span><span class="n">assert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">stmt</span><span class="p">.</span><span class="n">executeUpdate</span><span class="p">(</span><span class="n">sql</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span><span class="p">::</span><span class="n">Error</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">print</span> <span class="s">&#34;An error occured in the query&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">pause</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>   
</span></span><span class="line"><span class="cl">    <span class="n">CodeAccessPermission</span><span class="p">::</span><span class="n">revertAssert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>X&#43;&#43; Performance tips</title>
    <link>https://nuxulu.com/2015-02-12-x-performance-tips/</link>
    <pubDate>Thu, 12 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-02-12-x-performance-tips/</guid>
    <description><![CDATA[<h3 id="tip-1-measure-execution-time-of-your-code">Tip 1: Measure execution time of your code</h3>
<p>Measuring is knowing. Before you start changing code, make sure you have a set of data you can keep reusing for your tests. Measure the performance of your code on that data after each change in code so you know the impact of your changes.</p>
<p>One way to do this is by using the <code>Winapi::getTickCount()</code> or <code>WinApiServer::getTickCount()</code> if your code runs on server method.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">KlForTickCountSample</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">ticks</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// get the tickcount before the process starts</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticks</span> <span class="p">=</span> <span class="n">winapi</span><span class="p">::</span><span class="n">getTickCount</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// start the process</span>
</span></span><span class="line"><span class="cl">    <span class="n">sleep</span><span class="p">(</span><span class="m">2000</span><span class="p">);</span> <span class="c1">// simulate 2 seconds of processing</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// compare tickcount</span>
</span></span><span class="line"><span class="cl">    <span class="n">ticks</span> <span class="p">=</span> <span class="n">winapi</span><span class="p">::</span><span class="n">getTickCount</span><span class="p">()</span> <span class="err">–</span> <span class="n">ticks</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// display result</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span><span class="p">(</span><span class="n">strfmt</span><span class="p">(</span><span class="err">&#39;</span><span class="n">Number</span> <span class="n">of</span> <span class="n">ticks</span><span class="p">:</span> <span class="p">%</span><span class="m">1</span><span class="err">&#39;</span><span class="p">,</span> <span class="n">ticks</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tip-2-limit-the-number-of-loops">Tip 2: limit the number of loops</h3>
<p>A LOT of time goes into loops. If you have a performance problem, start looking for loops. Code can run really fast, but it can get slow when it is executed too many time, eg, in a loop.</p>
<h3 id="tip-3-avoid-if-in-while-select">Tip 3: avoid <code>if</code> in <code>while select</code></h3>
<p>When there is a <code>if</code> in a <code>while select</code>, see if you can rewrite it a a where statement in your select. Don’t be affraid use a join either. Consider the following example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">KlForIfInLoop</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">VendTable</span> <span class="n">vendTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// usually slower</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">vendTable</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="n">vendTable</span><span class="p">.</span><span class="n">VendGroup</span> <span class="p">==</span> <span class="err">&#39;</span><span class="n">VG1</span><span class="err">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">info</span><span class="p">(</span><span class="n">vendTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// usually faster</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">vendTable</span>
</span></span><span class="line"><span class="cl">    <span class="k">where</span> <span class="n">vendTable</span><span class="p">.</span><span class="n">VendGroup</span> <span class="p">==</span> <span class="err">&#39;</span><span class="n">VG1</span><span class="err">&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">info</span><span class="p">(</span><span class="n">vendTable</span><span class="p">.</span><span class="n">AccountNum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tip-4-avoid-double-use-of-table-methods">Tip 4: avoid double use of table methods</h3>
<p>Using table methods a lot can get really slow if you do it wrong. Consider the following example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">klForTableMethodsSlow</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">SalesLine</span> <span class="n">salesLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">InventDim</span> <span class="n">inventDim</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// select a salesline</span>
</span></span><span class="line"><span class="cl">    <span class="k">select</span> <span class="n">firstonly</span> <span class="n">salesLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">InventColorId</span> <span class="p">=</span> <span class="n">salesLine</span><span class="p">.</span><span class="n">inventDim</span><span class="p">().</span><span class="n">InventColorId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">InventSizeId</span>  <span class="p">=</span> <span class="n">salesLine</span><span class="p">.</span><span class="n">inventDim</span><span class="p">().</span><span class="n">InventSizeId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">inventBatchId</span> <span class="p">=</span> <span class="n">salesLine</span><span class="p">.</span><span class="n">inventDim</span><span class="p">().</span><span class="n">inventBatchId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This example code looks nice, but there’s a problem. <code>The salesLine.inventDim()</code> method contains the following:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventDim</span> <span class="n">inventDim</span><span class="p">(</span><span class="n">boolean</span>  <span class="n">_forUpdate</span> <span class="p">=</span> <span class="k">false</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">InventDim</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">InventDimId</span><span class="p">,</span> <span class="n">_forUpdate</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This means that the <code>invendDim</code> record is read three times from the database. It is better to declare the <code>inventDim</code> record locally and only retrieve it once:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">klForTableMethodsFast</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">SalesLine</span> <span class="n">salesLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">InventDim</span> <span class="n">inventDim</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">InventDim</span> <span class="n">inventDimLoc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// select a salesline</span>
</span></span><span class="line"><span class="cl">    <span class="k">select</span> <span class="n">firstonly</span> <span class="n">salesLine</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">inventDimLoc</span> <span class="p">=</span> <span class="n">salesLine</span><span class="p">.</span><span class="n">inventDim</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">InventColorId</span> <span class="p">=</span> <span class="n">inventDimLoc</span><span class="p">.</span><span class="n">InventColorId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">InventSizeId</span>  <span class="p">=</span> <span class="n">inventDimLoc</span><span class="p">.</span><span class="n">InventSizeId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventDim</span><span class="p">.</span><span class="n">inventBatchId</span> <span class="p">=</span> <span class="n">inventDimLoc</span><span class="p">.</span><span class="n">inventBatchId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tip-5-dont-put-too-much-code-on-tables">Tip 5: Don’t put too much code on tables</h3>
<p>Code on tables is usually fast, but things can get slow if you use it to much. Say you have a table with an <code>InventDimId</code> field. If you have 5 methods that need the <code>InventDim</code> record, because you don’t have a classDeclaration method on your table, you need to call this function 5 times, once in every method:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventDim</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">inventDim</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>When you put these methods on a class, you could optimise it by fetching the record only once and storing it in the <code>classDeclaration</code>, or better, passing it as a parameter to your methods. An other example is fetching parameters from parameter tables, eg <code>InventParameters::find()</code>. On a table, you have to fetch it each time you call a method. In a class, you would probably optimize your code to only fetch the parameter record once.</p>
<h3 id="tip-6-use-the-fastest-code">Tip 6: Use the fastest code</h3>
<p>For some tasks, there is <strong>special code</strong> that is faster than the code you would normally write. For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="c1">// slower</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="k">select</span> <span class="n">forupdate</span> <span class="n">custTable</span>
</span></span><span class="line"><span class="cl"><span class="k">where</span> <span class="n">custTable</span><span class="p">.</span><span class="n">custGroup</span> <span class="p">==</span> <span class="err">&#39;</span><span class="n">TST</span><span class="err">&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">custTable</span><span class="p">.</span><span class="n">delete</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">// faster</span>
</span></span><span class="line"><span class="cl"><span class="n">delete_from</span> <span class="n">custTable</span>
</span></span><span class="line"><span class="cl"><span class="k">where</span> <span class="n">custTable</span><span class="p">.</span><span class="n">custGroup</span> <span class="p">==</span> <span class="err">&#39;</span><span class="n">TST</span><span class="err">&#39;</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The same applies to update_recordset for updating records. Also, when adding values to the end of a container</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">cont</span> <span class="p">+=</span> <span class="s">&#34;a value&#34;</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>is faster than</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">cont</span> <span class="p">=</span> <span class="n">conins</span><span class="p">(</span><span class="n">cont</span><span class="p">,</span> <span class="n">conlen</span><span class="p">(</span><span class="n">cont</span><span class="p">),</span> <span class="s">&#34;a value&#34;</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="tip-7-every-optimization-counts">Tip 7: Every optimization counts</h3>
<p>Remember that every optimization you do to you code counts, even if it’s a little one. Small performance tweaks can have a huge effect once you process large quantities of data. So don’t be lazy, and optimize.</p>
<p>Coppied from <a href="http://www.artofcreation.be/" target="_blank" rel="noopener noreffer ">http://www.artofcreation.be/</a></p>
]]></description>
</item>
<item>
    <title>Create and write to XML file in Dynamics AX</title>
    <link>https://nuxulu.com/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</link>
    <pubDate>Wed, 04 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</guid>
    <description><![CDATA[<p>In this post let&rsquo;s explore creating XML using X++ code in Dynamics AX.</p>
<p>The following example shows how to create and write data to an XML file by using the <code>XmlDocument</code>, <code>XmlElement</code>, and <code>XmlWriter</code> classes. It loops through all of the records in the <code>CarTable</code> and find all the fields in the table automatically by using the <code>DictTable</code> and <code>DictField</code> classes.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="k">static</span> <span class="k">void</span> <span class="n">WriteXml</span><span class="p">(</span><span class="n">Args</span> <span class="n">_args</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">XmlDocument</span> <span class="n">xmlDoc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">XmlElement</span> <span class="n">xmlRoot</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">XmlElement</span> <span class="n">xmlField</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">XmlElement</span> <span class="n">xmlRecord</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">XMLWriter</span> <span class="n">xmlWriter</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">CarTable</span> <span class="n">carTable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">DictTable</span> <span class="n">dTable</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DictTable</span><span class="p">(</span><span class="n">tablenum</span><span class="p">(</span><span class="n">CarTable</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="n">DictField</span> <span class="n">dField</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">fieldId</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">str</span> <span class="k">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="err">#</span><span class="n">CarsXmlTags</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Create a new object of the XmlDocument class</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlDoc</span> <span class="p">=</span> <span class="n">XmlDocument</span><span class="p">::</span><span class="n">newBlank</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Create the root node</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlRoot</span> <span class="p">=</span> <span class="n">xmlDoc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="err">#</span><span class="n">CarRootNode</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Loop through all the records in the carTable</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="k">select</span> <span class="n">carTable</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Create a XmlElement (record) to hold the</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// contents of the current record.</span>
</span></span><span class="line"><span class="cl">        <span class="n">xmlRecord</span> <span class="p">=</span> <span class="n">xmlDoc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="err">#</span><span class="n">CarRecords</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Loop through all the fields in the record</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="p">=</span><span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span><span class="n">dTable</span><span class="p">.</span><span class="n">fieldCnt</span><span class="p">();</span> <span class="n">i</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Get the fieldId from the field-count</span>
</span></span><span class="line"><span class="cl">            <span class="n">fieldId</span> <span class="p">=</span> <span class="n">dTable</span><span class="p">.</span><span class="n">fieldCnt2Id</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">// Find the DictField object that matches the fieldId</span>
</span></span><span class="line"><span class="cl">            <span class="n">dField</span> <span class="p">=</span> <span class="n">dTable</span><span class="p">.</span><span class="n">fieldObject</span><span class="p">(</span><span class="n">fieldId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">// Skip system fields</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">dField</span><span class="p">.</span><span class="n">isSystem</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="k">continue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1">// Create a new XmlElement (field) and</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// have the name equal to the name of the</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// dictField</span>
</span></span><span class="line"><span class="cl">            <span class="n">xmlField</span> <span class="p">=</span> <span class="n">xmlDoc</span><span class="p">.</span><span class="n">createElement</span><span class="p">(</span><span class="n">dField</span><span class="p">.</span><span class="n">name</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1">// Convert values to string. I have just added</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// a couple of conversion as an example.</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Use tableName.(fieldId) instead of fieldname</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// to get the content of the field.</span>
</span></span><span class="line"><span class="cl">            <span class="k">switch</span> <span class="p">(</span><span class="n">dField</span><span class="p">.</span><span class="n">baseType</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="n">Types</span><span class="p">::</span><span class="n">Int64</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">value</span> <span class="p">=</span> <span class="n">int642str</span><span class="p">(</span><span class="n">carTable</span><span class="p">.(</span><span class="n">fieldId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="n">Types</span><span class="p">::</span><span class="n">Integer</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">value</span> <span class="p">=</span> <span class="n">int2str</span><span class="p">(</span><span class="n">carTable</span><span class="p">.(</span><span class="n">fieldId</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">default</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">value</span> <span class="p">=</span> <span class="n">carTable</span><span class="p">.(</span><span class="n">fieldId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1">// Set the innerText of the XmlElement (field)</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// to the value from the table</span>
</span></span><span class="line"><span class="cl">            <span class="n">xmlField</span><span class="p">.</span><span class="n">innerText</span><span class="p">(</span><span class="k">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">             
</span></span><span class="line"><span class="cl">            <span class="c1">// Append the field as a child node to the record</span>
</span></span><span class="line"><span class="cl">            <span class="n">xmlRecord</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">xmlField</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">         <span class="c1">// Add the record as a child node to the root</span>
</span></span><span class="line"><span class="cl">        <span class="n">xmlRoot</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">xmlRecord</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Add the root to the XmlDocument</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlDoc</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">xmlRoot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Create a new object of the XmlWriter class</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// in order to be able to write the xml to a file</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlWriter</span> <span class="p">=</span> <span class="n">XMLWriter</span><span class="p">::</span><span class="n">newFile</span><span class="p">(</span><span class="s">@&#34;c:tempcars.xml&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Write the content of the XmlDocument to the</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// file as specified by the XmlWriter</span>
</span></span><span class="line"><span class="cl">    <span class="n">xmlDoc</span><span class="p">.</span><span class="n">writeTo</span><span class="p">(</span><span class="n">xmlWriter</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The file that is created looks like the one in the following screenshot(only first part of the file is shown):</p>
<p><figure><a class="lightgallery" href="/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/create-and-write-to-xml-file-in-dynamics-ax_1.png" title="&amp;ldquo;create-and-write-to-xml&amp;rdquo;" data-thumbnail="/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/create-and-write-to-xml-file-in-dynamics-ax_1.png" data-sub-html="<h2>create-and-write-to-xml</h2><p>&amp;ldquo;create-and-write-to-xml&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">create-and-write-to-xml</figcaption>
    </figure></p>
<p>As you can see, this file is based on a standard XML format with tags and values only. You can, however, use tag attributes as well. To put the values from the table into tag attributes instead of their own tags, simply change the following code snippet in the example above</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="c1">// Set the innerText of the XmlElement (field)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// to the value from the table</span>
</span></span><span class="line"><span class="cl"><span class="n">xmlField</span><span class="p">.</span><span class="n">innerText</span><span class="p">(</span><span class="k">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Append the field as a child node to the record</span>
</span></span><span class="line"><span class="cl"><span class="n">xmlRecord</span><span class="p">.</span><span class="n">appendChild</span><span class="p">(</span><span class="n">xmlField</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>With these lines:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="c1">// Add the attribute to the record</span>
</span></span><span class="line"><span class="cl"><span class="n">xmlRecord</span><span class="p">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="n">dField</span><span class="p">.</span><span class="n">name</span><span class="p">(),</span> <span class="k">value</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The file that is created now looks like the one in the following screenshot:</p>
<p><figure><a class="lightgallery" href="/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/create-and-write-to-xml-file-in-dynamics-ax_2.png" title="&amp;ldquo;create-and-write-to-xml&amp;rdquo;" data-thumbnail="/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/create-and-write-to-xml-file-in-dynamics-ax_2.png" data-sub-html="<h2>create-and-write-to-xml</h2><p>&amp;ldquo;create-and-write-to-xml&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">create-and-write-to-xml</figcaption>
    </figure></p>
]]></description>
</item>
<item>
    <title>What is the difference difference between menu item Display, Output and Action</title>
    <link>https://nuxulu.com/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</link>
    <pubDate>Tue, 27 Jan 2015 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</guid>
    <description><![CDATA[<p>The answer is that there is no difference, the difference is a conceptual one rather than a functional or a technical one. So I think you will make a better choice for your scenario base on functional side.</p>
<p><figure><a class="lightgallery" href="/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax.png" title="what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax" data-thumbnail="/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax.png" data-sub-html="<h2>hello</h2><p>what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax</p>">
        
    </a><figcaption class="image-caption">hello</figcaption>
    </figure></p>
<h3 id="display-menu-item">Display Menu item</h3>
<p>This folder is used to contain menu items that reference runnable application objects that primarily present forms, ddialog and so on, to the user. May be this forms, dialog called from another forms.</p>
<h3 id="output-menu-item">Output Menu item</h3>
<p>An output menu item application objects whose primarily function is to print a result or report.</p>
<h3 id="action-menu-item">Action Menu item</h3>
<p>You should create a menu item under this folder if your runnable application objects whose primarily function is to do some kind of a job, such as creating or updating transactions in the database.</p>
]]></description>
</item>
<item>
    <title>Understand model store architectural in AX 2012</title>
    <link>https://nuxulu.com/2014-10-10-understand-model-store-architectural/</link>
    <pubDate>Fri, 10 Oct 2014 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2014-10-10-understand-model-store-architectural/</guid>
    <description><![CDATA[<p>The model store is the portion of the Microsoft Dynamics AX database where all Microsoft Dynamics AX application elements are stored, including customization. <strong>The model store replaces the AOD (application object definition)</strong> files used in previous releases of Microsoft Dynamics AX (I mean from 4.0 to 2009).</p>
<p><strong>Layer and model information are integral parts of the store</strong>. The AOS has access to the model store, handles layer-flattening, and provides model data to all the Microsoft Dynamics AX sub-systems, such as form- and report-rendering and X++ code.</p>
<p><figure><a class="lightgallery" href="/2014-10-10-understand-model-store-architectural/model_layer_elements.jpg" title="model_layer_elements" data-thumbnail="/2014-10-10-understand-model-store-architectural/model_layer_elements.jpg" data-sub-html="<h2>model_layer_elements</h2><p>model_layer_elements</p>">
        
    </a><figcaption class="image-caption">model_layer_elements</figcaption>
    </figure></p>
<p>Microsoft Dynamics AX contains sixteen layers. Each layer consists of one or more logical parts called models. A system generated model exists for each layer.</p>
<p>For example, the VAR Model is the system generated model for the VAR layer. You can use the system generated models to install and start working with the base Microsoft Dynamics AX system. You can leverage the capabilities of models, and tools and functionality that support the models, during customization of the Microsoft Dynamics AX application.</p>
<p><figure><a class="lightgallery" href="/2014-10-10-understand-model-store-architectural/understand-model-store-architectural.jpg" title="&amp;ldquo;understand-model-store-architectural&amp;rdquo;" data-thumbnail="/2014-10-10-understand-model-store-architectural/understand-model-store-architectural.jpg" data-sub-html="<h2>understand-model-store-architectural</h2><p>&amp;ldquo;understand-model-store-architectural&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">understand-model-store-architectural</figcaption>
    </figure></p>
<ul>
<li>
<p>The model store is the portion of the Microsoft Dynamics AX database where all Microsoft Dynamics AX application elements are stored, including customization.</p>
</li>
<li>
<p>The model store replaces the AOD files used in previous releases of Microsoft Dynamics AX. It can be managed through the AXUtil command line utility, or by using Windows PowerShell.</p>
</li>
<li>
<p>The baseline model store database holds model store tables for the previous version of metadata. Use it only during an upgrade.</p>
</li>
<li>
<p>The baseline model store is similar to the old folder in previous releases of Microsoft Dynamics AX.</p>
</li>
</ul>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Architecture overview Microsoft Dynamics AX 2012</title>
    <link>https://nuxulu.com/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/</link>
    <pubDate>Tue, 01 Jan 2013 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/</guid>
    <description><![CDATA[<blockquote>
<p>Understanding the internal architecture of Microsoft Dynamics AX 2012 can help you make decision when planning and developing a Microsoft Dynamics AX 2012 system. Here are some pointers on DAX 2012 architecture primarily for DAX 2012 architects &amp; solution developers. This topic provides a high-level overview of the system architecture of Microsoft Dynamics AX.</p>
</blockquote>
<h2 id="system-architecture">System architecture</h2>
<p>This diagram provides a high-level over of a Microsoft Dynamics AX 2012 system with all components installed, and describes how communications flow between the components.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/AXSystemArchitechture.gif" title="AXSystemArchitechture" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/AXSystemArchitechture.gif" data-sub-html="<h2>AXSystemArchitechture</h2><p>AXSystemArchitechture</p>">
        
    </a><figcaption class="image-caption">AXSystemArchitechture</figcaption>
    </figure></p>
<h3 id="1-application-object-server-aos-architecture">1. Application Object Server (AOS) architecture</h3>
<p>This diagram describes the functionality within the AOS Windows service, and describes how communications flow within it.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/AOSWindowsService.gif" title="AOSWindowsService" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/AOSWindowsService.gif" data-sub-html="<h2>AOSWindowsService</h2><p>AOSWindowsService</p>">
        
    </a><figcaption class="image-caption">AOSWindowsService</figcaption>
    </figure></p>
<p><strong>Note</strong>: Clients communicate with an AOS by using remote procedure calls (RPCs), Windows Communication Foundation (WCF), or AOS services. In previous releases, other components and third-party programs could communicate with an AOS by using either .NET Business Connector or Application Integration Framework (AIF). For this release, we recommend that third-party programs use AOS services to communicate with AOS.</p>
<h3 id="2-business-connector-architecture">2. Business Connector architecture</h3>
<p>The differences between the client kernel as it runs on a standard client and a Business Connector client are:</p>
<ul>
<li>
<p>The Session Manager in the client kernel manages only a single instance–in the Business Connector kernel, it manages multiple instances.</p>
</li>
<li>
<p>he client kernel includes forms security, while the Business Connector kernel does not.</p>
</li>
</ul>
<p>This diagram describes the architecture of the Business Connector version of the client kernel, and describes how communications flow within it.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Business_Connector_Client.gif" title="&amp;ldquo;Business_Connector_Client&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Business_Connector_Client.gif" data-sub-html="<h2>Business_Connector_Client</h2><p>&amp;ldquo;Business_Connector_Client&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Business_Connector_Client</figcaption>
    </figure></p>
<h3 id="3-application-file-server-architecture">3. Application file server architecture</h3>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/App_file_server_architechture.gif" title="&amp;ldquo;App_file_server_architechture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/App_file_server_architechture.gif" data-sub-html="<h2>App_file_server_architechture</h2><p>&amp;ldquo;App_file_server_architechture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">App_file_server_architechture</figcaption>
    </figure></p>
<h2 id="model-store-architecture">Model store architecture</h2>
<p>Microsoft Dynamics AX contains sixteen layers. Each layer consists of one or more logical parts called models. A model is generated for each layer. For example, VAR Model is the model that the system generates for the VAR layer. The system generated models let you install and work with the base Microsoft Dynamics AX system.</p>
<p>When you customize the Microsoft Dynamics AX program, you can take advantage of the capabilities of models.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Model_store_architecture.gif" title="&amp;ldquo;Model_store_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Model_store_architecture.gif" data-sub-html="<h2>Model_store_architecture</h2><p>&amp;ldquo;Model_store_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Model_store_architecture</figcaption>
    </figure></p>
<p>The following table describes the application object layers in Microsoft Dynamics AX 2012:</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Layer.png" title="&amp;ldquo;Layer&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Layer.png" data-sub-html="<h2>Layer</h2><p>&amp;ldquo;Layer&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Layer</figcaption>
    </figure></p>
<h2 id="client-architecture">Client architecture</h2>
<p>This diagram describes the functionality within the client, and describes how communications flow within it.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Client_architecture.gif" title="&amp;ldquo;Client_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Client_architecture.gif" data-sub-html="<h2>Client_architecture</h2><p>&amp;ldquo;Client_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Client_architecture</figcaption>
    </figure></p>
<h2 id="clientserver-communication">Client/server communication</h2>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/ClientServer_communication.gif" title="&amp;ldquo;ClientServer_communication&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/ClientServer_communication.gif" data-sub-html="<h2>ClientServer_communication</h2><p>&amp;ldquo;ClientServer_communication&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">ClientServer_communication</figcaption>
    </figure></p>
<p>The client communicates with various Microsoft Dynamics AX components in the following ways:</p>
<ul>
<li>
<p>The client uses the remote procedure call (RPC) protocol to communicate with Application Object Server (AOS). The client never accesses the database or metadata directly. AOS sends the application objects and data to the client.</p>
</li>
<li>
<p>The data layer that the client uses is based on data sources that are specified in metadata for forms and queries. In addition, any X++ code that is required to retrieve data can use the built-in language support to query and adjust data.</p>
</li>
<li>
<p>The client uses a report Web Part to interact with the report server. By calling the web services that are exposed by the report server, the report control in the Web Part displays information that is contained in Reporting Services reports. These reports can include either transnational data from the Microsoft Dynamics AX application or OLAP cubes from Microsoft SQL Server Analysis Services. Cubes provide business analytic and key performance indicators (KPIs).</p>
</li>
<li>
<p>The client provides workflow forms, alerts, and controls so that users can participate in the business process by using the Workflow system. The Workflow system is a Microsoft Dynamics AX component that enables workflow processes by using Windows Communication Foundation classes.</p>
</li>
<li>
<p>The client provides a Help viewer, which is an application that displays context-sensitive Help topics. The Help topics are retrieved from a Help server that is located on-premises.</p>
</li>
<li>
<p>The client also provides Role Centers, or role-based home pages, for users. Role Centers provide role-specific tasks, activities, alerts, reports, and business intelligence that help users increase their productivity. To interact with the Role Centers that are provided by Enterprise Portal and hosted on Internet Information Services (IIS), the client uses a browser control.</p>
</li>
</ul>
<h2 id="services-and-aif-architecture">Services and AIF architecture</h2>
<blockquote>
<p>AX 2012 exposes its functionality through services that are based on Windows Communication Foundation (WCF) and hosted on Application Object Server (AOS). External applications and client applications on the local area network consume AX services by accessing them directly from AOS.</p>
</blockquote>
<ul>
<li>
<p>These clients and applications include AX components such as the AX client, Office Add-, and Enterprise Portal.</p>
</li>
<li>
<p>Internet-based external applications and clients access the AX services through Internet Information Services (IIS). IIS routes the incoming requests for AX services to AOS. All services requests, regardless of their origin, are handled by the WCF runtime that is hosted on AOS.</p>
</li>
<li>
<p>The AIF request preprocessor, if it is configured, can intercept the inbound request messages for custom preprocessing, such as message transforms or value substitutions. The AX service invokes the necessary business logic to process the inbound request message.</p>
</li>
<li>
<p>Similarly, the AIF response postprocessor, if it is configured, can intercept the outbound response messages for custom post-processing, such as message transforms or value substitutions. The AIF response postprocessor then returns the response to the client.</p>
</li>
</ul>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/WCF_architecture.png" title="&amp;ldquo;WCF_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/WCF_architecture.png" data-sub-html="<h2>WCF_architecture</h2><p>&amp;ldquo;WCF_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">WCF_architecture</figcaption>
    </figure></p>
<h2 id="enterprise-portal-architecture">Enterprise Portal architecture</h2>
<p>This diagram provides a logical overview of a Microsoft Dynamics AX 2012 system with an Enterprise Portal server, and also describes the various components of the Enterprise Portal architecture.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/EP_Architecture.gif" title="&amp;ldquo;EP_Architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/EP_Architecture.gif" data-sub-html="<h2>EP_Architecture</h2><p>&amp;ldquo;EP_Architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">EP_Architecture</figcaption>
    </figure></p>
<h2 id="security-architecture">Security architecture</h2>
<p>This following diagram provides a high-level overview of the security architecture of Microsoft Dynamics AX 2012.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Security_architecture.gif" title="&amp;ldquo;Security_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Security_architecture.gif" data-sub-html="<h2>Security_architecture</h2><p>&amp;ldquo;Security_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Security_architecture</figcaption>
    </figure></p>
<h2 id="workflow-system-architecture">Workflow system architecture</h2>
<ul>
<li>
<p>This following diagram provides a high-level architecture of the workflow infrastructure.</p>
</li>
<li>
<p>The workflow infrastructure consists of two components that are hosted on Application Object Server (AOS): the X++ workflow run-time and the managed workflow run-time.</p>
</li>
</ul>
<p>![](Workflow_system_arcitechture (1).gif)</p>
<h2 id="analytic-architecture">Analytic architecture</h2>
<p>The following diagram shows the Microsoft SQL Server Analysis Services cubes that are included with Microsoft Dynamics AX, and the components that are used to access them.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Analytic_architecture.gif" title="&amp;ldquo;Analytic_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/Analytic_architecture.gif" data-sub-html="<h2>Analytic_architecture</h2><p>&amp;ldquo;Analytic_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">Analytic_architecture</figcaption>
    </figure></p>
<h2 id="reporting-architecture">Reporting architecture</h2>
<p>The following diagram illustrates the architecture of the reporting functionality in Microsoft Dynamics AX.</p>
<p><figure><a class="lightgallery" href="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/reporting_architecture.png" title="&amp;ldquo;reporting_architecture&amp;rdquo;" data-thumbnail="/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/reporting_architecture.png" data-sub-html="<h2>reporting_architecture</h2><p>&amp;ldquo;reporting_architecture&amp;rdquo;</p>">
        
    </a><figcaption class="image-caption">reporting_architecture</figcaption>
    </figure></p>
<p>Thank you for reading.</p>
]]></description>
</item>
<item>
    <title>Start programming</title>
    <link>https://nuxulu.com/2011-01-01-start-programming/</link>
    <pubDate>Sat, 01 Jan 2011 00:00:00 &#43;0000</pubDate>
    <author>Max Nguyen</author>
    <guid>https://nuxulu.com/2011-01-01-start-programming/</guid>
    <description><![CDATA[<p>I don’t know exactly how I ended up where I am. I mean, programming, and lovin’ it. Even if I’m not so good.</p>
<p><figure><a class="lightgallery" href="/2011-01-01-start-programming/helloworld.png" title="helloworld" data-thumbnail="/2011-01-01-start-programming/helloworld.png" data-sub-html="<h2>helloworld</h2><p>helloworld</p>">
        
    </a><figcaption class="image-caption">helloworld</figcaption>
    </figure></p>
<p>I’ve heard a thousand of guys telling stories like: “When I was twelve my parents bought me my first computer and I started learning on my own.” or “I won a programming contest when I was in highschool”. Great. Well done. I’ve never noticed about what coding was until I was eighteen, when I had to decide what to study at the University.</p>
<p>Do you want to know what was I thinking about? First option: Computer Science. Second option: Arts (wtf?). Third option: Philosophy (WTF?). I’ve ever liked computers, yes, but I’d never thought I could do that amazing things with them. I also liked maths, puzzles, things that made my brain think hard and get fun at the same time. You know, quizes, enigmas, games… The conclusion was that I wanted to do something creative, where I could put my imagination on, where I could challenge myself in order to create new stuff.</p>
<p>My first programming class was awful. I didn’t get nothing, and everyone seemed to be so cool on it, everyone with this big “Hello World” in their screens and a smile in their faces like ‘Yeah dude, I did it.”. I didn’t even know what to write down, or what was the teacher talking about. I was so frustrated, my first exam was… well, I don’t want to talk about my first exam.</p>
<p>One day, I don’t know how, something changed. Suddenly, I realized what programming was. I really abstracted my mind, I looked at it from another perspective, and it came with me so clear and so beautiful and I can not explain with words what I felt.</p>
<p>Was it easier from then? Not at all. In fact, I left Computer Science after the first year, with almost all the subjects passed, because there was still something that made me think I was not made for it. I was so lost, I didn’t know what to do with my life. I really liked programming, but there were so much thinks that seemed to be so far away from me. And I felt that everyone around me was going good on it, it was so frustrating that I couldn’t stand it anymore.</p>
<p>Then, I decided I had to change my situation because there should be something out there waiting for me. I looked for other degrees in a lot of universities.</p>
<p>It was. I do really love what I’m studying now, but the truth is that I think I’ve found my way. Actually, I will finish also Computer Science someday, but in a different place. And I’m still getting frustrated, of course, who doesn’t?, but I know I learned to love that frustration. Let me explain myself.</p>
<p>Programming is that. Is try it out thousand of times. Is try to find a mistake between a million lines of code, it’s to abstract your mind to find an answer, it’s… beautiful. I know really good programmers that honestly, I think I’ll never reach out, I have not that brilliant brain. But I keep on trying it, I’m not the best, I just love what I do.</p>
<p>Maybe this post is not just about programming, maybe is more about to find out what do you really love. Even if sometimes you hate it, or it makes you cry, or it makes you feel so stupid because you are not able to understand it, or if it makes you think there is a lot of people smarter than you doing the same thing better. Just… enjoy your time, fight for what you want, challenge yourself to go to the next step.</p>
]]></description>
</item>
</channel>
</rss>
