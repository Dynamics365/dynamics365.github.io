<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>integration framework - Tag - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/tags/integration-framework/</link>
        <description>integration framework - Tag - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com</managingEditor>
            <webMaster>luan52@outlook.com</webMaster><lastBuildDate>Sun, 28 Jun 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/integration-framework/" rel="self" type="application/rss+xml" /><item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 2)</title>
    <link>https://nuxulu.com/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</link>
    <pubDate>Sun, 28 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Kome Hoang</author>
    <guid>https://nuxulu.com/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</guid>
    <description><![CDATA[Example two: A new Forms response is submitted then Flow promts for an approval request before a new record is created in Vendors table In the last example, we created a simple Flow to create a new Vendor Account from submitted Forms responses. The process was made as simple as it could be: When a new Forms response if submitted, a new Vendor Account will be created on D365FO client.]]></description>
</item><item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 1)</title>
    <link>https://nuxulu.com/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</link>
    <pubDate>Sun, 24 May 2020 00:00:00 &#43;0000</pubDate>
    <author>Kome Hoang</author>
    <guid>https://nuxulu.com/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</guid>
    <description><![CDATA[With any D365FO users, Data Management workspace and Data Entities should have become one of the most used and well-known tools in the system. We all agree how powerful such integration framework is, especially when it comes to a large number of records that we would need to import into different tables.
The classic method that we have been utilizing is to include all source data in a single (or multiple, much depending on the purpose and order of data integration) Excel sheet, trigger an import execution, pass any validation layers that present and ultimately have the data available on D365FO.]]></description>
</item></channel>
</rss>
