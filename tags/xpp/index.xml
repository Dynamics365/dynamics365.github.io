<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xpp on Dynamics 365 Finance Operations &amp; Power Platform</title>
    <link>https://nuxulu.com/tags/xpp/</link>
    <description>Recent content in xpp on Dynamics 365 Finance Operations &amp; Power Platform</description>
    <image>
      <url>https://nuxulu.com/47</url>
      <link>https://nuxulu.com/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 12 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/xpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handle AIF error messages in dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</guid>
      <description>Handle AIF error messages in dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>How to create HTTP adapter port</title>
      <link>https://nuxulu.com/posts/2017-01-12-how-to-create-http-adapter-port/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-12-how-to-create-http-adapter-port/</guid>
      <description>How to create HTTP adapter port</description>
    </item>
    
    <item>
      <title>Response in AIF custom service class</title>
      <link>https://nuxulu.com/posts/2017-01-12-respone-in-aif-custom-service-class/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-12-respone-in-aif-custom-service-class/</guid>
      <description>Response in AIF custom service class</description>
    </item>
    
    <item>
      <title>AIF Custom response value in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</guid>
      <description>AIF Custom response value in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>How to block vendor and send email for notification.</title>
      <link>https://nuxulu.com/posts/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</guid>
      <description>Using batch to find and block vendor base on last transaction condition and notify for them by emails.</description>
    </item>
    
    <item>
      <title>Recalculate InventSum in Dynamics AX</title>
      <link>https://nuxulu.com/posts/2017-01-02-recalculate-inventsum/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-02-recalculate-inventsum/</guid>
      <description>Recalculate InventSum in Dynamics AX</description>
    </item>
    
    <item>
      <title>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>CRUD Purchase order using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Purchase order using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>Insert, update, Delete order line through AIF In AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</guid>
      <description>Insert, update, Delete order line through AIF In AX 2012 R3</description>
    </item>
    
    <item>
      <title>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>Types of services in Microsoft Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2016-11-10-types-services-microsoft-dynamics-ax-2012/</link>
      <pubDate>Thu, 10 Nov 2016 18:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-11-10-types-services-microsoft-dynamics-ax-2012/</guid>
      <description>&lt;h1 id=&#34;document-services&#34;&gt;Document services&lt;/h1&gt;
&lt;p&gt;Document services use documents to represent business objects such as purchase and sales orders, customers, vendors, and so on.&lt;/p&gt;
&lt;p&gt;A document service is composed of the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Document query&lt;/strong&gt; : This is a query that is created in the &lt;strong&gt;Application Object Tree (AOT)&lt;/strong&gt; and contains all the tables that are related to the business object that you want to expose. Based on this query, the Document Service Generation Wizard can be used to generate the other artifacts that make up the document service.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Table AxBC classes&lt;/strong&gt; : An &lt;code&gt;AxBC&lt;/code&gt; class is a wrapper for a table and contains business logic that is needed for &lt;strong&gt;Create, Read, Update, Delete (CRUD)&lt;/strong&gt; operations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Document class&lt;/strong&gt; : The purpose of the document class is to contain business logic that is associated with the creation and modification of the business entity itself. For example, the &lt;code&gt;AxdCustomer&lt;/code&gt; class could contain logic to handle party information of a customer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Document service class&lt;/strong&gt; : This is the actual service implementation class and extends the &lt;code&gt;AifDocumentService&lt;/code&gt; class. This class implements the service operations that are published through the service contract.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When creating document services, developers need to make sure &lt;strong&gt;that the business object is mapped correctly to the document query&lt;/strong&gt;. The document services framework will handle all other things such as the serialization and deserialization of XML, date effectiveness, and so on.&lt;/p&gt;
&lt;p&gt;Document services can be deployed using the integration ports and all available adapters can be used.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microsoft AX 2012 Test Data Transfer Tool</title>
      <link>https://nuxulu.com/posts/2016-11-08-microsoft_dyanmics_ax_2012_test_data_transfer_tool/</link>
      <pubDate>Tue, 08 Nov 2016 18:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-11-08-microsoft_dyanmics_ax_2012_test_data_transfer_tool/</guid>
      <description>&lt;h2 id=&#34;summary&#34;&gt;SUMMARY&lt;/h2&gt;
&lt;p&gt;Tool can be used for two different purposes. One is to install &lt;strong&gt;demo data&lt;/strong&gt; and other one is elaborated as below. Customers often need to have a production dataset to use when building and validating customizations in &lt;strong&gt;non-production&lt;/strong&gt; environments.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;The Microsoft Dynamics AX 2012 Test Data Transfer Tool (beta)&lt;/code&gt; is a tool that helps move data between from production to non-production environments or from non-production environments to production environments to make a new production environment. But you must be careful becasue the tool imports data table by table and deletes the data in the table before importing. Hence it is highly advised against running the tool for import in production environments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding modifedField() Table method in DAX 2012</title>
      <link>https://nuxulu.com/posts/2016-11-08-understanding_modifedfield_table_method_in_dax_2012/</link>
      <pubDate>Tue, 08 Nov 2016 15:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-11-08-understanding_modifedfield_table_method_in_dax_2012/</guid>
      <description>&lt;p&gt;Dear all,&lt;/p&gt;
&lt;p&gt;We use &lt;code&gt;modifiedField()&lt;/code&gt; method to perform any actions  after the field is modifed&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ex:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create new table with 2 fields &lt;strong&gt;ItemId&lt;/strong&gt; and &lt;strong&gt;ItemNameDisplay&lt;/strong&gt;  from Extended Data Types node in AOT then Override &lt;code&gt;modifiedField()&lt;/code&gt; in Table&amp;rsquo;s method node, something likes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;public &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;modifiedField&lt;/span&gt;(FieldId _fieldId)
{
    InventTable inventTable;
    super(_fieldId);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (_fieldId)
    {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; fieldNum(IBD_Invent,itemid)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            this.ItemNameDisplay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inventTable&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;find(this.itemid).NameAlias;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Create record in DimensionAttributeValueCombination table manually.</title>
      <link>https://nuxulu.com/posts/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</link>
      <pubDate>Tue, 05 Jul 2016 18:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</guid>
      <description>&lt;p&gt;Sometime we need this &lt;code&gt;RecId&lt;/code&gt; value in &lt;code&gt;DimansionAttributeValueCombination&lt;/code&gt; Table for some reasons likes putting new dimension in &lt;code&gt;LedgerDimension&lt;/code&gt; field in &lt;code&gt;LedgerJournalTrans&lt;/code&gt; Table, or somewhere else.&lt;/p&gt;
&lt;p&gt;Suppose my Account structure likes: &lt;em&gt;&lt;strong&gt;MainAcct - Dept - Woker - SubAcct - Item&lt;/strong&gt;&lt;/em&gt;,
you can custom base on your struture.&lt;/p&gt;
&lt;p&gt;This code is for creating a record into &lt;code&gt;DimansionAttributeValueCombination&lt;/code&gt; in code and then get &lt;code&gt;RecID&lt;/code&gt; of this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createDimensionAttributeValueCombination&lt;/span&gt;(Args _args)
{
    DimensionAttributeValueContract     ValueContract;
    DimensionAttributeValueCombination  davc;
    MainAccount                         valueMainAccount;
    DimensionStorage                    dimStorage;

    DimensionServiceProvider DimensionServiceProvider   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionServiceProvider();
    LedgerAccountContract LedgerAccountContract         &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; LedgerAccountContract();
    List ListValueContract                              &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List(Types&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Class);
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// Get main account with structure : Mainacct - DE - woker - subacct - item
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    valueMainAccount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MainAccount&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;findByMainAccountId(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;910001&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Get main account
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Department&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6020&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Department
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Worker&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;000001&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension ExpenseCode
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;SubAcct&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;교보생명&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Project
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Item&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;110329&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Project
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    LedgerAccountContract.parmMainAccount(valueMainAccount.MainAccountId);
    LedgerAccountContract.parmValues(ListValueContract);

    &lt;span style=&#34;color:#75715e&#34;&gt;//if combination is not exist then create new one
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    dimStorage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DimensionServiceProvider&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;buildDimensionStorageForLedgerAccount(LedgerAccountContract);
    davc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DimensionAttributeValueCombination&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;find(dimStorage.save());
    info(strFmt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RecId : %1 - DisplayValue : %2&amp;#34;&lt;/span&gt;, davc.RecId, davc.DisplayValue));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Execute external database Stored Procedure from X&#43;&#43; code using ODBC connectivity</title>
      <link>https://nuxulu.com/posts/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</link>
      <pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</guid>
      <description>Execute external database Stored Procedure from X&#43;&#43; code using ODBC connectivity</description>
    </item>
    
    <item>
      <title>Execute Stored Procedure from X&#43;&#43; code</title>
      <link>https://nuxulu.com/posts/2015-05-12-execute-stored-procedure-from-x-code/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-05-12-execute-stored-procedure-from-x-code/</guid>
      <description>Execute Stored Procedure from X&#43;&#43; code</description>
    </item>
    
    <item>
      <title>X&#43;&#43; Performance tips</title>
      <link>https://nuxulu.com/posts/2015-02-12-x-performance-tips/</link>
      <pubDate>Thu, 12 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-02-12-x-performance-tips/</guid>
      <description>X&#43;&#43; Performance tips</description>
    </item>
    
    <item>
      <title>Create and write to XML file in Dynamics AX</title>
      <link>https://nuxulu.com/posts/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</guid>
      <description>Create and write to XML file in Dynamics AX</description>
    </item>
    
    <item>
      <title>What is the difference difference between menu item Display, Output and Action</title>
      <link>https://nuxulu.com/posts/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</guid>
      <description>The answer is that there is no difference, the difference is a conceptual one rather than a functional or a technical one. So I think you will make a better choice for your scenario base on functional side.
Display Menu item This folder is used to contain menu items that reference runnable application objects that primarily present forms, ddialog and so on, to the user. May be this forms, dialog called from another forms.</description>
    </item>
    
    <item>
      <title>Architecture overview Microsoft Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/</link>
      <pubDate>Tue, 01 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2013-01-01-microsoft-dynamics-ax-2012-architecture-overview/</guid>
      <description>Architecture overview Microsoft Dynamics AX 2012</description>
    </item>
    
  </channel>
</rss>
