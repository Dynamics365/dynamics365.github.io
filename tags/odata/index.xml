<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>ODATA - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</title>
        <link>https://nuxulu.com/tags/odata/</link>
        <description>ODATA - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor>
            <webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Tue, 17 Dec 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/odata/" rel="self" type="application/rss+xml" /><item>
    <title>Dynamics 365 finance and operations ODATA consuming - Length cannot be less than zero</title>
    <link>https://nuxulu.com/2019-12-17-dynamics-365-finance-and-operations-odata-consuming-length-cannot-be-less-than-zero/</link>
    <pubDate>Tue, 17 Dec 2019 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2019-12-17-dynamics-365-finance-and-operations-odata-consuming-length-cannot-be-less-than-zero/</guid>
    <description><![CDATA[<p>When you consume a custom data entity, you get an error</p>
<p>errorSystem.ArgumentOutOfRangeException : Length cannot be less than zero‚Äù and it works fine for standard data entities.
{:.error}</p>
<p></p>
<p>The reason is the temporary XML file where the metadata stored which mismatches with the metadata from <code>https://&lt;yourenvironment&gt;.cloudax.dynamics.com/data/$metadata</code></p>
<p>You can follow this <a href="https://nuxulu.com/2019/12/16/Consuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET.html" target="_blank" rel="noopener noreferrer">post</a> to understand how to create the XML file.</p>
<p>If you try to regenerate the metadata by saving the <strong>ODataClient.tt</strong> file, the XML will be accumulated, and the error keeps happening.
The resolution here is simply delete it and regenerate metadata again by saving the <strong>ODataClient.tt</strong> file</p>
<p></p>
<p>Thank you for reading.</p>
]]></description>
</item><item>
    <title>Consuming Dynamics 365 Finance and Operations OData services from .NET</title>
    <link>https://nuxulu.com/2019-12-16-consuming-dynamics-365-finance-and-operations-odata-services-from-net/</link>
    <pubDate>Mon, 16 Dec 2019 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2019-12-16-consuming-dynamics-365-finance-and-operations-odata-services-from-net/</guid>
    <description><![CDATA[<h1 id="1-authentication">1. Authentication</h1>
<p>We need an authentication to connect Dynamics 365 finance and operations from .Net application by using service principal.</p>
<p>How to create an app registration in Azure <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/app-registrations-training-guide-for-app-registrations-legacy-users" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/azure/active-directory/develop/app-registrations-training-guide-for-app-registrations-legacy-users</a></p>
<p>You also need to add required permissions for Dynamics 365 finance and operations, please follow<br>
<a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/services-home-page#register-a-web-application-with-aad" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/services-home-page#register-a-web-application-with-aad</a></p>
<p>This is what you should have</p>
<p></p>
<h1 id="2-register-your-external-application">2. Register your external application</h1>
<h3 id="a-in-the-finops-application-go-to-system-administration--setup--azure-active-directory-applications">a. In the FinOps application, go to <strong>System administration &gt; Setup &gt; Azure Active Directory applications</strong>.</h3>
<h3 id="bselect-new">b.	Select <strong>New</strong>.</h3>
<h3 id="cfill-in-the-fields-for-the-new-record">c.	Fill in the fields for the new record:</h3>
<ul>
<li>In the <strong>Client Id</strong> field, enter the application ID that you registered in Azure AD.</li>
<li>In the <strong>Name field</strong>, enter a name for the application.</li>
<li>In the <strong>User ID field</strong>, select an appropriate service account user ID. For this example, we have selected the Admin user. However, as a better practice, you should provision a dedicated service account that has the correct permissions for the operations that must be performed. When you&rsquo;ve finished, select <strong>Save</strong>.</li>
</ul>
<p>You&rsquo;ve now finished setting up the prerequisites. After the external application retrieves an Azure AD authentication token, it should now be able to use the token in an authorization HTTP header to make subsequent service calls via OData or SOAP, for example.</p>
<h1 id="3-odata-client-configuration">3. OData client configuration</h1>
<ul>
<li>Download the project here <a href="https://github.com/microsoft/Dynamics-AX-Integration" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/Dynamics-AX-Integration</a></li>
<li>Open <strong>ServiceSamples</strong> solution.</li>
<li>We cannot use existing proxies and classes, so I need to regenerate them again. Under ODataUtility project, delete <strong>ODataClient.tt</strong> and <strong>ODataClient.ttinclude</strong>.</li>
<li>To regenerate Odata client, right click on <em>ODataUtility project &gt; Add &gt; New item</em>, search for OData in Online and rename it to <strong>ODataClient.tt</strong>.</li>
<li>Open <strong>ODataClient.tt</strong>, in MetadataDocumentUri add <em>&ldquo;https://<yourEnvironment>.cloudax.dynamics.com/data/$metadata&rdquo;</em></li>
</ul>
<p>If you save the ODataClient.tt file, it will generate Odata proxies and classes. From PU12 onward, there are so many entities so you will get an error after compiling</p>
<p><code>Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.</code></p>
<p>There are 2 ways to fix it</p>
<h3 id="a-using-temporary-file">a. Using temporary file</h3>
<p>The simplest way to fix is add TempFilePath, ensure that you have write permission for this path, this is what you got</p>
<p></p>
<p>Save the <strong>ODataClient.tt</strong> and there will be <strong>Test1.xml</strong> file created to store metadata, there should be a bug while generating the xml file, one more step you need to do is replace the double quote to single quote (a global replace of &quot;&quot; with &quot; ), and this is what you have</p>
<p>
You can build the project without problem.</p>
<h3 id="b-remove-unused-entities">b. Remove unused entities</h3>
<p>Another work-around that works too, edit the ODataClient.ttinclude so that it parses only some of the entities that you want to use, this reducing the error. For instance, change the following foreach statement</p>
<ul>
<li>Original code:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="k">foreach</span> <span class="p">(</span><span class="n">IEdmEntitySet</span> <span class="n">entitySet</span> <span class="k">in</span> <span class="n">container</span><span class="p">.</span><span class="n">EntitySets</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">IEdmEntityType</span> <span class="n">entitySetElementType</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">EntityType</span><span class="p">();</span>
    <span class="kt">string</span> <span class="n">entitySetElementTypeName</span> <span class="p">=</span> <span class="n">GetElementTypeName</span><span class="p">(</span><span class="n">entitySetElementType</span><span class="p">,</span> <span class="n">container</span><span class="p">);</span>

    <span class="kt">string</span> <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">EnableNamingAlias</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">Customization</span><span class="p">.</span><span class="n">CustomizeNaming</span><span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>Modified code:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="k">foreach</span> <span class="p">(</span><span class="n">IEdmEntitySet</span> <span class="n">entitySet</span> <span class="k">in</span> <span class="n">container</span><span class="p">.</span><span class="n">EntitySets</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">IEdmEntityType</span> <span class="n">entitySetElementType</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">EntityType</span><span class="p">();</span>
    <span class="kt">string</span> <span class="n">entitySetElementTypeName</span> <span class="p">=</span> <span class="n">GetElementTypeName</span><span class="p">(</span><span class="n">entitySetElementType</span><span class="p">,</span> <span class="n">container</span><span class="p">);</span>

    <span class="kt">string</span> <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">entitySet</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>

    <span class="c1">//start of manual fix 
</span><span class="c1"></span>    <span class="c1">//only process entity names that containin a specific string, to reduce the string size
</span><span class="c1"></span>    <span class="k">if</span> <span class="p">(((</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;CUST&#34;</span><span class="p">))</span> <span class="p">||</span> <span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;VEND&#34;</span><span class="p">)))</span> <span class="p">||</span> <span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="s">&#34;SALES&#34;</span><span class="p">)))</span>
    <span class="p">{</span>
      <span class="c1">// emd of manual fix
</span><span class="c1"></span>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">EnableNamingAlias</span><span class="p">)</span>
      <span class="p">{</span>
          <span class="n">camelCaseEntitySetName</span> <span class="p">=</span> <span class="n">Customization</span><span class="p">.</span><span class="n">CustomizeNaming</span><span class="p">(</span><span class="n">camelCaseEntitySetName</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h1 id="4-authentication-configuration">4. Authentication configuration</h1>
<p>Under AuthenticationUtility project, you need to modify ClientConfiguration.cs follow, you can get all related information for the first step.</p>
<p></p>
<p>From now, you can freely test the integrations under <strong>ODataConsoleApplication</strong> project.
If you are testing with a custom data entity and you get this error</p>
<p><code>System.ArgumentOutOfRangeException : Length cannot be less than zero.</code></p>
<p>Please check this <a href="https://nuxulu.com/2019/12/17/Dynamics-365-finance-and-operations-ODATA-consuming-Length-cannot-be-less-than-zero.html" target="_blank" rel="noopener noreferrer">post</a>.</p>
<p>Thank you for reading.</p>
]]></description>
</item><item>
    <title>Insert multiple records in single request using Odata from Postman</title>
    <link>https://nuxulu.com/2019-10-15-insert-multiple-records-in-single-request-using-odata-from-postman/</link>
    <pubDate>Tue, 15 Oct 2019 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2019-10-15-insert-multiple-records-in-single-request-using-odata-from-postman/</guid>
    <description><![CDATA[<p>Got inspired by <a href="https://community.dynamics.com/365/financeandoperations/f/dynamics-365-for-finance-and-operations-forum/286810/inserting-multiple-records-via-odata-from-postman" target="_blank" rel="noopener noreferrer">this topic</a>, I&rsquo;d like to write this article to show you how to post multiple records in single request by using Postman.</p>
<p>Generally, batch requests are supported in the <a href="https://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398359" target="_blank" rel="noopener noreferrer">OData service</a>, The easiest way is you can use the C# code approach from <a href="https://github.com/Microsoft/Dynamics-AX-Integration/tree/master/ServiceSamples/ODataConsoleApplication" target="_blank" rel="noopener noreferrer">github</a> and the excel add-ins in Dynamics 365 for finance and operations use Odata batch to communicate in a single request but how can we leverage it in Postman.</p>
<p>Using Excel add-in then add 2 customer groups records and submit to Dynamics 365 for finance and operations, while you are doing that using <a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener noreferrer">fiddler</a> on the same box to see how the odata batch framework works.
This can be done from POSTMAN too and you need to use header and body as you see in Fiddler.</p>
<p>For basic setting up Dynamics 365 for finance and operations and Postman please follow <a href="https://docs.microsoft.com/en-us/dynamics365/unified-operations/dev-itpro/data-entities/third-party-service-test" target="_blank" rel="noopener noreferrer">this offical document</a></p>
<h3 id="1-get-dynamics-365-for-finance-and-operations-authorization">1. Get Dynamics 365 for finance and operations authorization</h3>
<p>This is a result</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_1.png"></a>
</figure>
<h3 id="2-create-a-new-post-request-in-postman-with-header">2. Create a new POST request in Postman with header</h3>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_2.png"></a>
</figure>
<p><em><strong>URL: {{resource}}/data/$batch</strong></em>
<em><strong>Content-Type: multipart/mixed;boundary=batch_d63a-e9be-2927</strong></em></p>
<h3 id="3-modify-the-body-in-postman">3. Modify the Body in Postman</h3>
<p>I will place 2 records for customer groups</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_3.png"></a>
</figure>
<p>Full text here</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">--batch_d63a-e9be-2927
Content-Type: multipart/mixed; boundary=changeset_2499-90ab-7b93

--changeset_2499-90ab-7b93
Content-Type: application/http
Content-Transfer-Encoding: binary

POST CustomerGroups?cross-company=true HTTP/1.1
Content-ID: 1
Accept: application/json;q=0.9, */*;q=0.1
OData-Version: 4.0
Content-Type: application/json
OData-MaxVersion: 4.0

{&#34;CustomerGroupId&#34;:&#34;1060&#34;,&#34;Description&#34;:&#34;Wholesales customers&#34;,&#34;PaymentTermId&#34;:&#34;Net30&#34;,&#34;IsSalesTaxIncludedInPrice&#34;:&#34;No&#34;,&#34;dataAreaId&#34;:&#34;usmf&#34;}
--changeset_2499-90ab-7b93--

--batch_d63a-e9be-2927
Content-Type: multipart/mixed; boundary=changeset_b573-33b2-85ff

--changeset_b573-33b2-85ff
Content-Type: application/http
Content-Transfer-Encoding: binary

POST CustomerGroups?cross-company=true HTTP/1.1
Content-ID: 2
Accept: application/json;q=0.9, */*;q=0.1
OData-Version: 4.0
Content-Type: application/json
OData-MaxVersion: 4.0

{&#34;CustomerGroupId&#34;:&#34;1070&#34;,&#34;Description&#34;:&#34;Wholesales customers1&#34;,&#34;PaymentTermId&#34;:&#34;Net30&#34;,&#34;IsSalesTaxIncludedInPrice&#34;:&#34;No&#34;,&#34;dataAreaId&#34;:&#34;usmf&#34;}
--changeset_b573-33b2-85ff--
</code></pre></td></tr></table>
</div>
</div><p>Click send and this is what you got from response</p>
<figure class='center'>
  <a href="/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_4.png"></a>
</figure>
<p>Full Response</p>
<p>{% highlight json %}
&ndash;batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60
Content-Type: multipart/mixed; boundary=changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea
&ndash;changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea
Content-Type: application/http
Content-Transfer-Encoding: binary
Content-ID: 1
HTTP/1.1 201 Created
ETag: W/&ldquo;JzEsNjg3MTk0Nzk4MzUn&rdquo;
Location: https: //fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=&lsquo;usmf&rsquo;,CustomerGroupId=&lsquo;1060&rsquo;)
Content-Type: application/json; odata.metadata=minimal
OData-Version: 4.0
{
&ldquo;@odata.context&rdquo;: &ldquo;<a href="https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity%22," target="_blank" rel="noopener noreferrer">https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity",</a>
&ldquo;@odata.etag&rdquo;: &ldquo;W/&quot;JzEsNjg3MTk0Nzk4MzUn&quot;&rdquo;,
&ldquo;dataAreaId&rdquo;: &ldquo;usmf&rdquo;,
&ldquo;CustomerGroupId&rdquo;: &ldquo;1060&rdquo;,
&ldquo;ClearingPeriodPaymentTermName&rdquo;: &ldquo;&rdquo;,
&ldquo;DefaultDimensionDisplayValue&rdquo;: &ldquo;&rdquo;,
&ldquo;CustomerAccountNumberSequence&rdquo;: &ldquo;&rdquo;,
&ldquo;IsSalesTaxIncludedInPrice&rdquo;: &ldquo;No&rdquo;,
&ldquo;Description&rdquo;: &ldquo;Wholesales customers&rdquo;,
&ldquo;WriteOffReason&rdquo;: &ldquo;&rdquo;,
&ldquo;PaymentTermId&rdquo;: &ldquo;Net30&rdquo;,
&ldquo;TaxGroupId&rdquo;: &quot;&rdquo;
}
&ndash;changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea&ndash;
&ndash;batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60
Content-Type: multipart/mixed; boundary=changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54
&ndash;changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54
Content-Type: application/http
Content-Transfer-Encoding: binary
Content-ID: 2
HTTP/1.1 201 Created
ETag: W/&ldquo;JzEsNjg3MTk0Nzk4MzYn&rdquo;
Location: https: //fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=&lsquo;usmf&rsquo;,CustomerGroupId=&lsquo;1070&rsquo;)
Content-Type: application/json; odata.metadata=minimal
OData-Version: 4.0
{
&ldquo;@odata.context&rdquo;: &ldquo;<a href="https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity%22," target="_blank" rel="noopener noreferrer">https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity",</a>
&ldquo;@odata.etag&rdquo;: &ldquo;W/&quot;JzEsNjg3MTk0Nzk4MzYn&quot;&rdquo;,
&ldquo;dataAreaId&rdquo;: &ldquo;usmf&rdquo;,
&ldquo;CustomerGroupId&rdquo;: &ldquo;1070&rdquo;,
&ldquo;ClearingPeriodPaymentTermName&rdquo;: &ldquo;&rdquo;,
&ldquo;DefaultDimensionDisplayValue&rdquo;: &ldquo;&rdquo;,
&ldquo;CustomerAccountNumberSequence&rdquo;: &ldquo;&rdquo;,
&ldquo;IsSalesTaxIncludedInPrice&rdquo;: &ldquo;No&rdquo;,
&ldquo;Description&rdquo;: &ldquo;Wholesales customers1&rdquo;,
&ldquo;WriteOffReason&rdquo;: &ldquo;&rdquo;,
&ldquo;PaymentTermId&rdquo;: &ldquo;Net30&rdquo;,
&ldquo;TaxGroupId&rdquo;: &quot;&rdquo;
}
&ndash;changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54&ndash;
&ndash;batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60&ndash;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">
Check the data in Dynamics 365 for finance and operations 

&lt;figure class=&#39;center&#39;&gt;
  &lt;a href=&#34;https://nuxulu.com/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_5.png&#34;&gt;&lt;img src=&#34;https://nuxulu.com/imagesposts/2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_5.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
&lt;/figure&gt;

Thank you for reading.
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
