<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>Dynamics 365 Finance - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</title>
        <link>https://nuxulu.com/tags/dynamics-365-finance/</link>
        <description>Dynamics 365 Finance - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor>
            <webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Mon, 03 May 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/dynamics-365-finance/" rel="self" type="application/rss+xml" /><item>
    <title>Azure DevTest Labs powered builds for Dynamics 365 FinOps</title>
    <link>https://nuxulu.com/2021-05-03-azure-devtest-labs-powered-builds-for-dynamics-365-finops/</link>
    <pubDate>Mon, 03 May 2021 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2021-05-03-azure-devtest-labs-powered-builds-for-dynamics-365-finops/</guid>
    <description><![CDATA[<p><strong>This post has been written thanks to <a href="https://twitter.com/jorisdg" target="_blank" rel="noopener noreferrer">Joris de Gruyter</a>‚Äòs session in the past <a href="https://dynamicscon.com/" target="_blank" rel="noopener noreferrer">DynamicsCon</a></strong>: <a href="https://www.youtube.com/watch?v=VIib-m6Q8LQ" target="_blank" rel="noopener noreferrer">Azure Devops Automation for Finance and Operations Like You‚Äôve Never Seen!</a> And there‚Äôs also been some investigation and (a lot of) trial-and-error from my side until everything has been working.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/adtl-1024x1024.png" title="Azure DevTest Labs" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/adtl-1024x1024.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 1</h2><p>Azure DevTest Labs</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 1</figcaption>
    </figure></p>
<p>Configuring the build VM in Azure DevTest Labs</p>
<p>If you want to know more about builds, releases, and the Dev ALM of Dynamics 365 you can read my full guide on <a href="https://ariste.info/en/msdyn365-azure-devops-alm/" target="_blank" rel="noopener noreferrer">MSDyn365 &amp; Azure DevOps ALM</a>.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnobut-firstbut-first"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#but-first" target="_blank" rel="noopener noreferrer"></a>But first‚Ä¶</h2>
<p>What I‚Äôm showing in this post is not a perfect blueprint. There‚Äôs a high probability that if you try exactly the same as I do here, you won‚Äôt get the same result. But it‚Äôs a good guide to get started and do some investigation on your own and learn.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoazure-devtest-labsazure-devtest-labs"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#azure-devtest-labs" target="_blank" rel="noopener noreferrer"></a>Azure DevTest Labs</h2>
<p><a href="https://azure.microsoft.com/en-us/services/devtest-lab?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Azure DevTest Labs</a> is an Azure tool/service that allows us to <strong>deploy virtual machines and integrate them with Azure DevOps pipelines</strong>, and many other things, but what I‚Äôm going to explain is just the VM and pipeline part.</p>
<p>What will I show in this post? How to <strong>prepare a Dynamics 365 Finance and Operations VHD image to be used as the base to create a build virtual machine from an Azure DevOps pipeline</strong>, build our codebase, synchronize the DB, run tests, even deploy the reports, generate the deployable package and delete the VM.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnogetting-and-preparing-the-vhdgetting-and-preparing-the-vhd"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#getting-and-preparing-the-vhd" target="_blank" rel="noopener noreferrer"></a>Getting and preparing the VHD</h2>
<p>This is by far the most tedious part of all the process because you need to download 11 ZIP files from LCS‚Äô Shared Asset Library, and we all know how fast things download from LCS.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/fast.png" title="LCS download speed" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/fast.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 2</h2><p>LCS download speed</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 2</figcaption>
    </figure></p>
<p>How is LCS download speed?</p>
<p>And to speed it up we can create a blob storage account on Azure and once more turn to <a href="https://mobile.twitter.com/splaxi" target="_blank" rel="noopener noreferrer">M√∂tz Jensen</a>‚Äòs <a href="https://github.com/d365collaborative/d365fo.tools" target="_blank" rel="noopener noreferrer">d365fo.tools</a> and use the Invoke-D365AzCopyTransfer cmdlet. Just go to LCS, click on the ‚ÄúGenerate SAS link‚Äù button for each file, use it as the source parameter in the command and your blob SAS URL as the destination one. Once you have all the files in your blob you can download them to your local PC at a good speed.</p>
<p>Once you‚Äôve unzipped the VHD you need to change it from Dynamic to Fixed using this PowerShell command:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="nb">Convert-VHD</span> <span class="err">‚Äì</span><span class="n">Path</span> <span class="n">VHDLOCATION</span><span class="p">.</span><span class="n">vhd</span> <span class="err">‚Äì</span><span class="n">DestinationPath</span> <span class="n">NEWVHD</span><span class="p">.</span><span class="n">vhd</span> <span class="err">‚Äì</span><span class="n">VHDType</span> <span class="n">Fixed</span>
</code></pre></td></tr></table>
</div>
</div><p>The reason is <strong>you can‚Äôt create an Azure VM from a dynamically-sized VHD</strong>. And it took me several attempts to notice this üôÇ</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocreate-a-devtest-labs-accountcreate-a-devtest-labs-account"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#create-a-devtest-labs-account" target="_blank" rel="noopener noreferrer"></a>Create a DevTest Labs account</h2>
<p>To do this part <strong>you need an Azure account</strong>. If you don‚Äôt have one you can <a href="https://azure.microsoft.com/en-us/free?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">sign up for a free Azure account</a> with a credit of 180 Euros (200 US Dollars) to be spent during 30 days, plus many other free services during 12 months.</p>
<p>Search for DevTest Labs in the top bar and create a new DevTest Lab. Once it‚Äôs created open the details and you should see something like this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest1.png" title="Azure DevTest Labs" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest1.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 3</h2><p>Azure DevTest Labs</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 3</figcaption>
    </figure></p>
<p>Azure DevTest Labs</p>
<p>Click on the ‚ÄúConfiguration and policies‚Äù menu item at the bottom of the list and scroll down in the menu until you see the ‚ÄúVirtual machine bases‚Äù section:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest2.png" title="DevTest Labs custom VHD image" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest2.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 4</h2><p>DevTest Labs custom VHD image</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 4</figcaption>
    </figure></p>
<p>DevTest Labs custom image</p>
<p>And now comes the second funniest part of the process: <strong>we need to upload the 130GB VHD image to a blob storage account</strong>! So, click the ‚ÄúAdd‚Äù button on top and in the new dialog that will open click the ‚ÄúUpload a VHD using PowerShell‚Äù. This will generate a PowerShell script to upload the VHD to the DevTest Labs blob. For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="cm">&lt;#
</span><span class="cm">Generated script to upload a local VHD to Azure.
</span><span class="cm">
</span><span class="cm">WARNING: The destination will be publicly available for 24 hours, after which it will expire.
</span><span class="cm">
</span><span class="cm"> Ensure you complete your upload by then.
</span><span class="cm">
</span><span class="cm">Run the following command in a Azure PowerShell console after entering
</span><span class="cm">
</span><span class="cm">the LocalFilePath to your VHD.
</span><span class="cm">#&gt;</span>

<span class="nb">Add-AzureRmVhd</span> <span class="p">\</span><span class="n">-Destination</span> <span class="s2">&#34;https://YOURBLOB.blob.core.windows.net/uploads/tempImage.vhd?sv=2019-07-07&amp;st=2020-12-27T09%3A08%3A26Z&amp;se=2020-12-28T09%3A23%3A26Z&amp;sr=b&amp;sp=rcw&amp;sig=YTeXpxpVEJdSM7KZle71w8NVw9oznNizSnYj8Q3hngI%3D&#34;</span> <span class="p">\</span><span class="n">-LocalFilePath</span> <span class="s2">&#34;&lt;Enter VHD location here&gt;&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest3.png" title="DevTest Labs custom image upload" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest3.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 5</h2><p>DevTest Labs custom image upload</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 5</figcaption>
    </figure></p>
<p>DevTest Labs custom image upload</p>
<p>An alternative to this is using the Azure Storage Explorer as you can see in the image on the left.</p>
<p>You should upload the VHD to the uploads blob.</p>
<p>Any of these methods is good to upload the VHD and I don‚Äôt really know which one is faster.</p>
<p>Once the VHD is uploaded open the ‚ÄúCustom images‚Äù option again and you should see the VHD in the drop-down:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest4.png" title="DevTest Labs custom image" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest4.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 6</h2><p>DevTest Labs custom image</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 6</figcaption>
    </figure></p>
<p>DevTest Labs custom image</p>
<p>Give the image a name and click OK.</p>
<p>What we have now is the <strong>base for a Dynamics 365 Finance and Operations dev VM</strong> which we need to prepare to use it as a build VM.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocreating-the-vmcreating-the-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#creating-the-vm" target="_blank" rel="noopener noreferrer"></a>Creating the VM</h2>
<p>We‚Äôve got the essential, a VHD ready to be used as a base to create a virtual machine in Azure. Our next step is finding a way to make the deployment of this VM <strong>predictable and automated</strong>. We will attain this thanks to <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Azure ARM templates</a>.</p>
<p>Go back to your DevTest Labs overview page and click the ‚ÄúAdd‚Äù button, on the ‚ÄúChoose base‚Äù page select the base you‚Äôve just created, and on the next screen click on the ‚ÄúAdd or Remove Artifacts‚Äù link:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest5.png" title="Add artifacts to the VM" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest5.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 7</h2><p>Add artifacts to the VM</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 7</figcaption>
    </figure></p>
<p>Add artifacts to the VM</p>
<p>Search for <strong>WinRM</strong>, select ‚ÄúConfigure WinRM‚Äù, and on the next screen enter ‚ÄúShared IP address‚Äù as the hostname box and click ‚ÄúAdd‚Äù.</p>
<p><strong>Note</strong>: if when the VM runs the artifacts can‚Äôt be installed check whether the <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/agent-windows?WT.mc_id=BA-MVP-5003976#manual-installation" target="_blank" rel="noopener noreferrer">Azure VM Agent</a> is installed on the base VHD. Thanks to Joris for pointing this out!</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoconfigure-azure-devops-agent-serviceconfigure-azure-devops-agent-service"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#configure-azure-devops-agent-service" target="_blank" rel="noopener noreferrer"></a>Configure Azure DevOps Agent Service</h3>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooption-a-use-an-artifactoption-a-use-an-artifact"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#option-a-use-an-artifact" target="_blank" rel="noopener noreferrer"></a>Option A: use an artifact</h3>
<p><strong>Update</strong>: thanks to <strong><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#comment-7107" target="_blank" rel="noopener noreferrer">Florian Hopfner</a></strong> for reminding me this because I forgot‚Ä¶ If you choose Option A to install the agent service you need to do some things first!</p>
<p>The first thing we need to do is running some PowerShell scripts that create registry entries and environment variables in the VM, go to C:\DynamicsSDK and run these:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="nb">Import-Module</span> <span class="p">$(</span><span class="nb">Join-Path</span> <span class="p">\</span><span class="n">-Path</span> <span class="s2">&#34;C:\\DynamicsSDK&#34;</span> <span class="p">\</span><span class="n">-ChildPath</span> <span class="s2">&#34;DynamicsSDKCommon.psm1&#34;</span><span class="p">)</span> <span class="p">\</span><span class="n">-Function</span> <span class="s2">&#34;Write-Message&#34;</span><span class="p">,</span> <span class="s2">&#34;Set-AX7SdkRegistryValues&#34;</span><span class="p">,</span> <span class="s2">&#34;Set-AX7SdkEnvironmentVariables&#34;</span>
<span class="n">Set</span><span class="p">\</span><span class="n">-AX7SdkEnvironmentVariables</span> <span class="p">\</span><span class="n">-DynamicsSDK</span> <span class="s2">&#34;C:\\DynamicsSDK&#34;</span>
<span class="n">Set</span><span class="p">\</span><span class="n">-AX7SdkRegistryValues</span> <span class="p">\</span><span class="n">-DynamicsSDK</span> <span class="s2">&#34;c:\\DynamicsSDK&#34;</span> <span class="p">\</span><span class="n">-TeamFoundationServerUrl</span> <span class="s2">&#34;https://dev.azure.com/YOUR\_ORG&#34;</span> <span class="p">\</span><span class="n">-AosWebsiteName</span> <span class="nv">$AosWebsiteName</span> <span class="s2">&#34;AosService&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>The first one will load the functions and make them available in the command-line and the other two create the registry entries and environment variables.</p>
<p>Now we need to <strong>add an artifact for the Azure DevOps agent service</strong>. This will configure the agent service on the VM each time the VM is deployed. Search for ‚ÄúAzure Pipelines Agent‚Äù and click it. You will see this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/DevTest1-311x1024.png" title="DevTest Labs Azure DevOps Agent" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/DevTest1-311x1024.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 8</h2><p>DevTest Labs Azure DevOps Agent</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 8</figcaption>
    </figure></p>
<p>DevTest Labs Azure DevOps Agent</p>
<p>We need to fill some information:</p>
<p>On ‚Äú<strong>Azure DevOps Organization Name</strong>‚Äù you need to provide the name of your organization. For example if your AZDO URL is <a href="https://dev.azure.com/blackbeltcorp" target="_blank" rel="noopener noreferrer">https://dev.azure.com/blackbeltcorp</a> you need to use blackbeltcorp.</p>
<p>On ‚Äú<strong>AZDO Personal Access Token</strong>‚Äù you need to provide a token generated from AZDO.</p>
<p>On ‚Äú<strong>Agent Name</strong>‚Äù give your agent a name, like DevTestAgent. And on ‚ÄúAgent Pool‚Äù a name for your pool, a new like DevTestPool or an existing one as Default.</p>
<p>On ‚Äú<strong>Account Name</strong>‚Äù use the same user that we‚Äôll use in our pipeline later. Remember this. And on ‚Äú<strong>Account Password</strong>‚Äù its password. Using secrets with a KeyVault is better, but I won‚Äôt explain this here.</p>
<p>And, finally, set ‚Äú<strong>Replace Agent</strong>‚Äù to true.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooption-b-configure-azure-devops-agent-in-the-vmoption-b-configure-azure-devops-agent-in-the-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#option-b-configure-azure-devops-agent-in-the-vm" target="_blank" rel="noopener noreferrer"></a>Option B: Configure Azure DevOps Agent in the VM</h3>
<p>To do this you have to create a VM from the base image you created before and then go to C:\DynamicsSDK and run the SetupBuildAgent script with the needed parameters:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="n">SetupBuildAgent</span><span class="p">.</span><span class="n">ps1</span> <span class="p">\</span><span class="n">-VSO</span><span class="p">\</span><span class="n">_ProjectCollection</span> <span class="s2">&#34;https://dev.azure.com/YOUR\_ORG&#34;</span> <span class="p">\</span><span class="n">-ServiceAccountName</span> <span class="s2">&#34;myUser&#34;</span> <span class="p">\</span><span class="n">-ServiceAccountPassword</span> <span class="s2">&#34;mYPassword&#34;</span> <span class="p">\</span><span class="n">-AgentName</span> <span class="s2">&#34;DevTestAgent&#34;</span> <span class="p">\</span><span class="n">-AgentPoolName</span> <span class="s2">&#34;DevTestPool&#34;</span> <span class="p">\</span><span class="n">-VSOAccessToken</span> <span class="s2">&#34;YOUR\_VSTS\_TOKEN&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>WARNING</strong>: If you choose option B you must create a new base image from the VM where you‚Äôve run the script. Then repeat the WinRM steps to generate the new ARM template which we‚Äôll see next.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoarm-templatearm-template"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#arm-template" target="_blank" rel="noopener noreferrer"></a>ARM template</h3>
<p>Then go to the ‚ÄúAdvanced Settings‚Äù tab and click the ‚Äú<strong>View ARM template</strong>‚Äù button:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2020/12/DevTest6.png" title="Get the ARM template" data-thumbnail="https://static.ariste.info/wp-content/uploads/2020/12/DevTest6.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 9</h2><p>Get the ARM template</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 9</figcaption>
    </figure></p>
<p>Get the ARM template</p>
<p>This will display the ARM template to create the VM from our pipeline. It‚Äôs something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span><span class="lnt">291
</span><span class="lnt">292
</span><span class="lnt">293
</span><span class="lnt">294
</span><span class="lnt">295
</span><span class="lnt">296
</span><span class="lnt">297
</span><span class="lnt">298
</span><span class="lnt">299
</span><span class="lnt">300
</span><span class="lnt">301
</span><span class="lnt">302
</span><span class="lnt">303
</span><span class="lnt">304
</span><span class="lnt">305
</span><span class="lnt">306
</span><span class="lnt">307
</span><span class="lnt">308
</span><span class="lnt">309
</span><span class="lnt">310
</span><span class="lnt">311
</span><span class="lnt">312
</span><span class="lnt">313
</span><span class="lnt">314
</span><span class="lnt">315
</span><span class="lnt">316
</span><span class="lnt">317
</span><span class="lnt">318
</span><span class="lnt">319
</span><span class="lnt">320
</span><span class="lnt">321
</span><span class="lnt">322
</span><span class="lnt">323
</span><span class="lnt">324
</span><span class="lnt">325
</span><span class="lnt">326
</span><span class="lnt">327
</span><span class="lnt">328
</span><span class="lnt">329
</span><span class="lnt">330
</span><span class="lnt">331
</span><span class="lnt">332
</span><span class="lnt">333
</span><span class="lnt">334
</span><span class="lnt">335
</span><span class="lnt">336
</span><span class="lnt">337
</span><span class="lnt">338
</span><span class="lnt">339
</span><span class="lnt">340
</span><span class="lnt">341
</span><span class="lnt">342
</span><span class="lnt">343
</span><span class="lnt">344
</span><span class="lnt">345
</span><span class="lnt">346
</span><span class="lnt">347
</span><span class="lnt">348
</span><span class="lnt">349
</span><span class="lnt">350
</span><span class="lnt">351
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="p">{</span>

 <span class="s">&#34;$schema&#34;</span><span class="p">:</span> <span class="s">&#34;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json&#34;</span><span class="p">,</span>

 <span class="s">&#34;contentVersion&#34;</span><span class="p">:</span> <span class="s">&#34;1.0.0.0&#34;</span><span class="p">,</span>

 <span class="s">&#34;parameters&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;newVMName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;aariste001&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;labName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;aristeinfo&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;size&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;Standard\_B4ms&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;userName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;myUser&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;password&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;securestring&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;\[\[\[VmPassword\]\]&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Configure\_WinRM\_hostName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;Public IP address&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_vstsAccount&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;ariste&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_vstsPassword&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;securestring&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_agentName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;DevTestAgent&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_agentNameSuffix&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_poolName&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;DevTestPool&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_RunAsAutoLogon&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;bool&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="k">false</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_windowsLogonAccount&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;aariste&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_windowsLogonPassword&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;securestring&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_driveLetter&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;C&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_workDirectory&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s">&#34;DevTestAgent&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;Azure\_Pipelines\_Agent\_replaceAgent&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;bool&#34;</span><span class="p">,</span>

 <span class="s">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="k">true</span>

 <span class="p">}</span>

 <span class="p">},</span>

 <span class="s">&#34;variables&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;labSubnetName&#34;</span><span class="p">:</span> <span class="s">&#34;\[concat(variables(&#39;labVirtualNetworkName&#39;), &#39;Subnet&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;labVirtualNetworkId&#34;</span><span class="p">:</span> <span class="s">&#34;\[resourceId(&#39;Microsoft.DevTestLab/labs/virtualnetworks&#39;, parameters(&#39;labName&#39;), variables(&#39;labVirtualNetworkName&#39;))\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;labVirtualNetworkName&#34;</span><span class="p">:</span> <span class="s">&#34;\[concat(&#39;Dtl&#39;, parameters(&#39;labName&#39;))\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;vmId&#34;</span><span class="p">:</span> <span class="s">&#34;\[resourceId (&#39;Microsoft.DevTestLab/labs/virtualmachines&#39;, parameters(&#39;labName&#39;), parameters(&#39;newVMName&#39;))\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;vmName&#34;</span><span class="p">:</span> <span class="s">&#34;\[concat(parameters(&#39;labName&#39;), &#39;/&#39;, parameters(&#39;newVMName&#39;))\]&#34;</span>

 <span class="p">},</span>

 <span class="s">&#34;resources&#34;</span><span class="p">:</span> <span class="err">\</span><span class="p">[</span>

 <span class="p">{</span>

 <span class="s">&#34;apiVersion&#34;</span><span class="p">:</span> <span class="s">&#34;2018-10-15-preview&#34;</span><span class="p">,</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;Microsoft.DevTestLab/labs/virtualmachines&#34;</span><span class="p">,</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;\[variables(&#39;vmName&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;location&#34;</span><span class="p">:</span> <span class="s">&#34;\[resourceGroup().location\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;properties&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;labVirtualNetworkId&#34;</span><span class="p">:</span> <span class="s">&#34;\[variables(&#39;labVirtualNetworkId&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;notes&#34;</span><span class="p">:</span> <span class="s">&#34;Dynamics365FnO10013AgentLessV2&#34;</span><span class="p">,</span>

 <span class="s">&#34;customImageId&#34;</span><span class="p">:</span> <span class="s">&#34;/subscriptions/6715778f-c852-453d-b6bb-907ac34f280f/resourcegroups/devtestlabs365/providers/microsoft.devtestlab/labs/devtestd365/customimages/dynamics365fno10013agentlessv2&#34;</span><span class="p">,</span>

 <span class="s">&#34;size&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;size&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;userName&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;userName&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;password&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;password&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;isAuthenticationWithSshKey&#34;</span><span class="p">:</span> <span class="k">false</span><span class="p">,</span>

 <span class="s">&#34;artifacts&#34;</span><span class="p">:</span> <span class="err">\</span><span class="p">[</span>

 <span class="p">{</span>

 <span class="s">&#34;artifactId&#34;</span><span class="p">:</span> <span class="s">&#34;\[resourceId(&#39;Microsoft.DevTestLab/labs/artifactSources/artifacts&#39;, parameters(&#39;labName&#39;), &#39;public repo&#39;, &#39;windows-winrm&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;parameters&#34;</span><span class="p">:</span> <span class="err">\</span><span class="p">[</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;hostName&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Configure\_WinRM\_hostName&#39;)\]&#34;</span>

 <span class="p">}</span>

 <span class="err">\</span><span class="p">]</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;artifactId&#34;</span><span class="p">:</span> <span class="s">&#34;\[resourceId(&#39;Microsoft.DevTestLab/labs/artifactSources/artifacts&#39;, parameters(&#39;labName&#39;), &#39;public repo&#39;, &#39;windows-vsts-build-agent&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;parameters&#34;</span><span class="p">:</span> <span class="err">\</span><span class="p">[</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;vstsAccount&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_vstsAccount&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;vstsPassword&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_vstsPassword&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;agentName&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_agentName&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;agentNameSuffix&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_agentNameSuffix&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;poolName&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_poolName&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;RunAsAutoLogon&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_RunAsAutoLogon&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;windowsLogonAccount&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_windowsLogonAccount&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;windowsLogonPassword&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_windowsLogonPassword&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;driveLetter&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_driveLetter&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;workDirectory&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_workDirectory&#39;)\]&#34;</span>

 <span class="p">},</span>

 <span class="p">{</span>

 <span class="s">&#34;name&#34;</span><span class="p">:</span> <span class="s">&#34;replaceAgent&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[parameters(&#39;Azure\_Pipelines\_Agent\_replaceAgent&#39;)\]&#34;</span>

 <span class="p">}</span>

 <span class="err">\</span><span class="p">]</span>

 <span class="p">}</span>

 <span class="err">\</span><span class="p">],</span>

 <span class="s">&#34;labSubnetName&#34;</span><span class="p">:</span> <span class="s">&#34;\[variables(&#39;labSubnetName&#39;)\]&#34;</span><span class="p">,</span>

 <span class="s">&#34;disallowPublicIpAddress&#34;</span><span class="p">:</span> <span class="k">true</span><span class="p">,</span>

 <span class="s">&#34;storageType&#34;</span><span class="p">:</span> <span class="s">&#34;Premium&#34;</span><span class="p">,</span>

 <span class="s">&#34;allowClaim&#34;</span><span class="p">:</span> <span class="k">false</span><span class="p">,</span>

 <span class="s">&#34;networkInterface&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;sharedPublicIpAddressConfiguration&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;inboundNatRules&#34;</span><span class="p">:</span> <span class="err">\</span><span class="p">[</span>

 <span class="p">{</span>

 <span class="s">&#34;transportProtocol&#34;</span><span class="p">:</span> <span class="s">&#34;tcp&#34;</span><span class="p">,</span>

 <span class="s">&#34;backendPort&#34;</span><span class="p">:</span> <span class="m">3389</span>

 <span class="p">}</span>

 <span class="err">\</span><span class="p">]</span>

 <span class="p">}</span>

 <span class="p">}</span>

 <span class="p">}</span>

 <span class="p">}</span>

 <span class="err">\</span><span class="p">],</span>

 <span class="s">&#34;outputs&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;labVMId&#34;</span><span class="p">:</span> <span class="p">{</span>

 <span class="s">&#34;type&#34;</span><span class="p">:</span> <span class="s">&#34;string&#34;</span><span class="p">,</span>

 <span class="s">&#34;value&#34;</span><span class="p">:</span> <span class="s">&#34;\[variables(&#39;vmId&#39;)\]&#34;</span>

 <span class="p">}</span>

 <span class="p">}</span>

<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>NOTE</strong>: if you‚Äôre using option B you won‚Äôt have the artifact node for the VSTS agent.</p>
<p>This JSON file will be used as the base to create our VMs from the Azure DevOps pipeline. This is known as <a href="https://docs.microsoft.com/en-us/azure/devops/learn/what-is-infrastructure-as-code?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Infrastructure as Code</a> (IaC) and it‚Äôs a way of defining our infrastructure in a file as it were code. It‚Äôs another part of the DevOps practice that should solve the ‚Äúit works on my machine‚Äù issue.</p>
<p>If we take a look to the JSON‚Äôs parameters node there‚Äôs the following information:</p>
<ul>
<li>newVMName and labName will be the name of the VM and the DevTest Labs lab we‚Äôre using. The VM name is not really important because we‚Äôll set the name later in the pipeline.</li>
<li>size is the VM size, a D3 V2 in the example above, but we can change it and will do it later.</li>
<li>userName &amp; passWord will be the credentials to access the VM and must be the same we‚Äôve used to configure the Azure DevOps agent.</li>
<li>Configure_WinRM_hostName is the artifact we added to the VM template that will allow the pipelines to run in this machine.</li>
</ul>
<p>To do it faster and for demo purposes I‚Äôm using a plain text password in the ARM template, changing the password node to something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="s2">&#34;password&#34;</span><span class="err">:</span> <span class="p">{</span>

 <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;string&#34;</span><span class="p">,</span>

 <span class="nt">&#34;defaultValue&#34;</span><span class="p">:</span> <span class="s2">&#34;yourPassword&#34;</span>

 <span class="p">}</span><span class="err">,</span>
</code></pre></td></tr></table>
</div>
</div><p>I will do the same with all the <em>secureString</em> nodes, but you shouldn‚Äôt and should instead use an Azure KeyVault which comes with the DevTest Labs account.</p>
<p>Of course <strong>you would never upload this template to Azure DevOps with a password in plain text</strong>. There‚Äôs plenty of resources online that teach how to use parameters, Azure KeyVault, etc. to accomplish this, for example this one: <a href="https://devkimchi.com/2019/04/24/6-ways-passing-secrets-to-arm-templates/" target="_blank" rel="noopener noreferrer">6 Ways Passing Secrets to ARM Templates</a>.</p>
<p>OK, now grab that file and save it to your Azure DevOps repo. I‚Äôve created a folder in my repo‚Äôs root called ARM where I‚Äôm saving all the ARM templates:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs2.png" title="ARM templates on Azure DevOps" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs2.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 10</h2><p>ARM templates on Azure DevOps</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 10</figcaption>
    </figure></p>
<p>ARM templates on Azure DevOps</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnopreparing-the-vmpreparing-the-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#preparing-the-vm" target="_blank" rel="noopener noreferrer"></a>Preparing the VM</h2>
<p>The VHD image you download can be used as a developer VM with no additional work, just run Visual Studio, connect it to your AZDO project and done. But if you want to use it as a build box you need to do several things first.</p>
<p>Remember that the default user and password for these VHDs are Administrator and Pass@word1.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnodisable-servicesdisable-services"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#disable-services" target="_blank" rel="noopener noreferrer"></a>Disable services</h3>
<p>First of all we will stop and disable services like the Batch, Management Reporter, SSAS, SSIS, etc. Anything you see that‚Äôs not needed to run a build.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocreate-a-new-sql-usercreate-a-new-sql-user"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#create-a-new-sql-user" target="_blank" rel="noopener noreferrer"></a>Create a new SQL user</h3>
<p>Open <a href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15&amp;WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">SSMS</a> (as an Administrator) and create a new SQL user as a copy of the axdbadmin one. Then open the web.config file and update the DB user and password to use the one you‚Äôve just created.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoprepare-ssrs-optionalprepare-ssrs-optional"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#prepare-ssrs-optional" target="_blank" rel="noopener noreferrer"></a>Prepare SSRS (optional)</h3>
<p>If you want to deploy reports as part of your build pipeline you need to go to SSMS again (and as an Admin again), and open a new query in the reporting DB to execute the following query:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="k">exec</span><span class="w"> </span><span class="n">DeleteEncryptedContent</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnopowershell-scriptspowershell-scripts"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#powershell-scripts" target="_blank" rel="noopener noreferrer"></a>PowerShell Scripts</h3>
<p>The default build definition that runs on a build VM uses several PowerShell scripts to run some tasks. I‚Äôm adding an additional script called PrepareForAgent.</p>
<p>The scripts can be found in the C:\DynamicsSDK folder of the VM.</p>
<h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoprepareforbuildprepareforbuild"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#prepareforbuild" target="_blank" rel="noopener noreferrer"></a>PrepareForBuild</h4>
<p>This script comes with the VM and <strong>we need to modify it</strong> to avoid one thing: the PackagesLocalDirectory backup which is usually done in the first build. We need to get rid of this or we‚Äôll waste around an hour per run until the files are copied.</p>
<p>We don‚Äôt need this because our VM will be new each time we run the pipeline!</p>
<p>So open the script, go to line 696 and look for this piece of code:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="p">\</span><span class="c"># Create packages backup (if it does not exist).</span>

<span class="nv">$NewBackupCreated</span> <span class="p">\=</span> <span class="nb">Backup-AX7Packages</span> <span class="p">\</span><span class="n">-BackupPath</span> <span class="nv">$PackagesBackupPath</span> <span class="p">\</span><span class="n">-DeploymentPackagesPath</span> <span class="nv">$DeploymentPackagesPath</span> <span class="p">\</span><span class="n">-LogLocation</span> <span class="nv">$LogLocation</span>

<span class="p">\</span><span class="c"># Restore packages backup (unless a new backup was just created).</span>

<span class="k">if</span> <span class="p">(!</span><span class="nv">$NewBackupCreated</span><span class="p">)</span>

<span class="p">{</span>

 <span class="nb">Restore-AX7Packages</span> <span class="p">\</span><span class="n">-BackupPath</span> <span class="nv">$PackagesBackupPath</span> <span class="p">\</span><span class="n">-DeploymentPackagesPath</span> <span class="nv">$DeploymentPackagesPath</span> <span class="p">\</span><span class="n">-LogLocation</span> <span class="nv">$LogLocation</span> <span class="p">\</span><span class="n">-RestoreAllFiles</span><span class="err">:</span><span class="nv">$RestorePackagesAllFiles</span>

<span class="p">}</span>

<span class="k">if</span> <span class="p">(!</span><span class="nv">$DatabaseBackupToRestore</span><span class="p">)</span>

<span class="p">{</span>

 <span class="nv">$DatabaseBackupPath</span> <span class="p">\=</span> <span class="nb">Get-BackupPath</span> <span class="p">\</span><span class="n">-Purpose</span> <span class="s2">&#34;Databases&#34;</span>

 <span class="nb">Backup-AX7Database</span> <span class="p">\</span><span class="n">-BackupPath</span> <span class="nv">$DatabaseBackupPath</span>

<span class="p">}</span>

<span class="k">else</span>

<span class="p">{</span>

 <span class="p">\</span><span class="c"># Restore a database backup (if specified).</span>

 <span class="nb">Restore-AX7Database</span> <span class="p">\</span><span class="n">-DatabaseBackupToRestore</span> <span class="nv">$DatabaseBackupToRestore</span>

<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>We need to modify it until we end up with this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="k">if</span> <span class="p">(</span><span class="nv">$DatabaseBackupToRestore</span><span class="p">)</span>

<span class="p">{</span>

 <span class="nb">Restore-AX7Database</span> <span class="p">\</span><span class="n">-DatabaseBackupToRestore</span> <span class="nv">$DatabaseBackupToRestore</span>

<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>We just need the DB restore part and skip the backup, otherwise we‚Äôll be losing 45 minutes in each run for something we don‚Äôt need because the VM will be deleted when the build is completed.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooptional-but-recommended-install-d365fo-toolsoptional-but-recommended-install-d365fotoolshttpsgithubcomd365collaboratived365fotools"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#optional-but-recommended-install-d365fo-tools" target="_blank" rel="noopener noreferrer"></a><strong>Optional (but recommended)</strong>: install <a href="https://github.com/d365collaborative/d365fo.tools" target="_blank" rel="noopener noreferrer">d365fo.tools</a></h3>
<p>Just run this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="nb">Install-Module</span> <span class="p">\</span><span class="n">-Name</span> <span class="n">d365fo</span><span class="p">.</span><span class="n">tools</span>
</code></pre></td></tr></table>
</div>
</div><p>We can use the tools to do a module sync, partial sync or deploy just our reports instead of all.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocreate-a-new-imagecreate-a-new-image"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#create-a-new-image" target="_blank" rel="noopener noreferrer"></a>Create a new image</h2>
<p>Once we‚Äôve done all these prepare steps we can log out of this VM and stop it. <strong>Do not delete it yet!</strong> Go to ‚ÄúCreate custom image‚Äù, give the new image a name, select ‚ÄúI have not generalized this virtual machine‚Äù and click the ‚ÄúOK‚Äù button.</p>
<p>This will generate a new image that you can use as a base image with all the changes you‚Äôve done to the original VHD.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoazure-devops-pipelinesazure-devops-pipelines"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#azure-devops-pipelines" target="_blank" rel="noopener noreferrer"></a>Azure DevOps Pipelines</h2>
<p>We‚Äôre ready to setup our new build pipeline in Azure DevOps. This pipeline will consist of three steps: create a new VM, run all the build steps, and delete the VM:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs4.png" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 1" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs4.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 11</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 1</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 11</figcaption>
    </figure></p>
<p>First of all check that your pipeline runs on Azure pipelines (aka Azure-hosted):</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-2.png" title="DevTest Labs Azure Pipelines" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-2.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 12</h2><p>DevTest Labs Azure Pipelines</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 12</figcaption>
    </figure></p>
<p>DevTest Labs Azure Pipelines</p>
<p>The create and delete steps will run on the Azure Pipelines pool. The build step will run on our DevTestLabs pool, or the name you gave it when configuring the artifact on DevTest Labs or the script on the VM.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocreate-azure-devtest-labs-vmcreate-azure-devtest-labs-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#create-azure-devtest-labs-vm" target="_blank" rel="noopener noreferrer"></a>Create Azure DevTest Labs VM</h3>
<p>Create a new pipeline and choose the ‚ÄúUse the classic editor‚Äù option. Make sure you‚Äôve selected TFVC as your source and click ‚ÄúContinue‚Äù and ‚ÄúEmpty job‚Äù. Add a new task to the pipeline, look for ‚ÄúAzure DevTest Labs Create VM‚Äù. We just need to fill in the missing parameters with our subscription, lab, etc.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs5.png" title="Create VM Azure DevTest Labs" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/DevTestLabs5.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 13</h2><p>Create VM Azure DevTest Labs</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 13</figcaption>
    </figure></p>
<p>Create VM Azure DevTest Labs</p>
<p>Remember this step must run on the Azure-hosted pipeline.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnobuildbuild"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#build" target="_blank" rel="noopener noreferrer"></a>Build</h3>
<p>This is an easy one. Just export a working pipeline and import it. And this step needs to run on your self-hosted pool:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-3.png" title="Runs on self-hosted pool" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-3.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 14</h2><p>Runs on self-hosted pool</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 14</figcaption>
    </figure></p>
<p>Runs on self-hosted pool</p>
<h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooptional-use-selectivesync-not-recommended-see-next-optionoptional-use-selectivesync-not-recommended-see-next-option"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#optional-use-selectivesync-not-recommended-see-next-option" target="_blank" rel="noopener noreferrer"></a>Optional: use SelectiveSync (not recommended, see next option)</h4>
<p>You can replace the Database Sync task for a PowerShell script that will only sync the tables in your models:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-9.png" title="SelectiveSync.ps1" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-9.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 15</h2><p>SelectiveSync.ps1</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 15</figcaption>
    </figure></p>
<p>SelectiveSync.ps1</p>
<p>Thanks Joris for the tip!</p>
<h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooptional-use-d365fo-tools-to-sync-your-packages-modelsoptional-use-d365fotools-to-sync-your-packagesmodels"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#optional-use-d365fo-tools-to-sync-your-packages-models" target="_blank" rel="noopener noreferrer"></a>Optional: use d365fo.tools to sync your packages/models</h4>
<p>This is a better option than the SelectiveSync above. You can synchronize your packages or models only to gain some time. This cmdlet uses sync.exe like Visual Studio does and should be better than SelectiveSync.</p>
<p>Add a new PowerShell task, select Inline Script and this is the command:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="nb">Invoke-D365DbSyncModule</span> <span class="p">\</span><span class="n">-Module</span> <span class="s2">&#34;Module1&#34;</span><span class="p">,</span> <span class="s2">&#34;Module2&#34;</span> <span class="p">\</span><span class="n">-ShowOriginalProgress</span> <span class="p">\</span><span class="n">-Verbose</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnooptional-use-d365fo-tools-to-deploy-ssrs-reportsoptional-use-d365fotools-to-deploy-ssrs-reports"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#optional-use-d365fo-tools-to-deploy-ssrs-reports" target="_blank" rel="noopener noreferrer"></a>Optional: use d365fo.tools to deploy SSRS reports</h4>
<p>If you really want to add the report deployment step to your pipeline you can save some more extra time using <a href="https://github.com/d365collaborative/d365fo.tools" target="_blank" rel="noopener noreferrer">d365fo.tools</a> and just deploy the reports in your models like we‚Äôve done with the DB sync.</p>
<p>Run this in a new PowerShell task to do it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="nb">Publish-D365SsrsReport</span> <span class="p">\</span><span class="n">-Module</span> <span class="n">YOUR</span><span class="p">\</span><span class="n">_MODULE</span> <span class="p">\</span><span class="n">-ReportName</span> <span class="p">\*</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnodelete-azure-devtest-labs-vmdelete-azure-devtest-labs-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#delete-azure-devtest-labs-vm" target="_blank" rel="noopener noreferrer"></a>Delete Azure DevTest Labs VM</h3>
<p>It‚Äôs almost the same as the create step, complete the subscription, lab and VM fields and done:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image.png" title="Delete VM" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 16</h2><p>Delete VM</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 16</figcaption>
    </figure></p>
<p>Delete VM</p>
<p>And this step, like the create one, will run on the Azure-hosted agent.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnodependencies-and-conditionsdependencies-and-conditions"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#dependencies-and-conditions" target="_blank" rel="noopener noreferrer"></a>Dependencies and conditions</h3>
<p>When all three steps are configured we need to add dependencies and conditions to some of them. For example, to make sure that the delete VM step runs when the build step fails, but it doesn‚Äôt when the create VM step fails.</p>
<h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnobuildbuild-1"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#build" target="_blank" rel="noopener noreferrer"></a>Build</h4>
<p>The build step depends on the create VM step, and will only run if the previous step succeeds:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-4.png" title="Build step dependencies and conditions" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-4.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 17</h2><p>Build step dependencies and conditions</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 17</figcaption>
    </figure></p>
<p>Build step dependencies and conditions</p>
<h4 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnodelete-vmdelete-vm"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#delete-vm" target="_blank" rel="noopener noreferrer"></a>Delete VM</h4>
<p>The delete step depends on all previous steps and must run when the create VM step succeeds. If the create step fails there‚Äôs no VM and we don‚Äôt need to delete it:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-5.png" title="Dependencies and conditions on delete VM step" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-5.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 18</h2><p>Dependencies and conditions on delete VM step</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 18</figcaption>
    </figure></p>
<p>Dependencies and conditions on delete VM step</p>
<p>This is the custom condition we‚Äôll use:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">and(always(), eq(dependencies.Job\_1.status, &#39;Succeeded&#39;))
</code></pre></td></tr></table>
</div>
</div><p>If you need to know your first step‚Äôs job name just export the pipeline to YAML and you‚Äôll find it there:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-6.png" title="Export pipeline to YAML" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-6.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 19</h2><p>Export pipeline to YAML</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 19</figcaption>
    </figure></p>
<p>Export pipeline to YAML</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-7.png" title="Job name on YAML" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-7.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 20</h2><p>Job name on YAML</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 20</figcaption>
    </figure></p>
<p>Job name on YAML</p>
<p>If this step fails when the pipeline is run, wait to delete the VM manually, first change the VM name in the delete step, save your pipeline and then use the dropdown to show the VMs in the selected subscription, and save the pipeline.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnorun-the-buildrun-the-build"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#run-the-build" target="_blank" rel="noopener noreferrer"></a>Run the build</h2>
<p>And, I think, we‚Äôre done and ready to run our Azure DevTest Labs pipeline for Dynamics 365 Finance and Operations‚Ä¶ click ‚ÄúRun pipeline‚Äù and wait‚Ä¶</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-10-382x1024.png" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 2" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-10-382x1024.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 21</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 2</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 21</figcaption>
    </figure></p>
<p>Tadaaaa!!</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnotimestimes"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#times" target="_blank" rel="noopener noreferrer"></a>Times</h2>
<p>The pipeline from the image above is one with real code from a customer but I can‚Äôt compare the times with the Azure-hosted builds because there‚Äôs no sync, or tests there. Regarding the build time the Azure-hosted takes one minute less, but it needs to install the nugets first.</p>
<p>But for example this is a comparison I did:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/B2msVSB4ms.png" title="Azure DevTest Labs B2ms vs B4ms" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/B2msVSB4ms.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 22</h2><p>Azure DevTest Labs B2ms vs B4ms</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 22</figcaption>
    </figure></p>
<p>Azure DevTest Labs B2ms vs B4ms</p>
<p>It takes around 1 hour to create the VM, build, do a full DB synch, deploy reports, run tests, generate a Deployable Package and, finally, delete the VM:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/Full.jpg" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 3" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/Full.jpg" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 23</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 3</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 23</figcaption>
    </figure></p>
<p>If you skip deploying the SSRS reports your build will run in 15 minutes less, that‚Äôs around 45 minutes.</p>
<p>If you use the partial sync process instead of a full DB sync it‚Äôll be 5-7 minutes less.</p>
<p>This would leave us with a 35-40 minutes build.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocomparison-1comparison-1"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#comparison-1" target="_blank" rel="noopener noreferrer"></a>Comparison 1</h3>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/Dtcomp1.png" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 4" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/Dtcomp1.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 24</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 4</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 24</figcaption>
    </figure></p>
<p>No DB Sync</p>
<p>The image above shows a simple package being compiled, without any table, so the selective sync goes really fast. The build times improve with VM size.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocomparison-2comparison-2"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#comparison-2" target="_blank" rel="noopener noreferrer"></a>Comparison 2</h3>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/Dtcomp2.png" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 5" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/Dtcomp2.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 25</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 5</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 25</figcaption>
    </figure></p>
<p>Same code Full DB Sync</p>
<p>This one is compiling the same codebase but is doing a full DB sync. The sync time improves in the B4ms VM compared to the B2ms but it‚Äôs almost the same in the B8ms. Build times are better for larger VM sizes.</p>
<h3 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnocomparison-3comparison-3"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#comparison-3" target="_blank" rel="noopener noreferrer"></a>Comparison 3</h3>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/01/image-14.png" title="Azure DevTest Labs powered builds for Dynamics 365 FnO 6" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/01/image-14.png" data-sub-html="<h2>Azure DevTest Labs powered builds for Dynamics 365 FnO 26</h2><p>Azure DevTest Labs powered builds for Dynamics 365 FnO 6</p>">
        
    </a><figcaption class="image-caption">Azure DevTest Labs powered builds for Dynamics 365 FnO 26</figcaption>
    </figure></p>
<p>Real code + full sync</p>
<p>And in the image above we see a more realistic build. The codebase is larger and we‚Äôre doing a full DB sync.</p>
<p>Similar as the comparison before there a good enhancement between a B2ms and a B4ms, but not between a B4ms and B8ms.</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnoshow-me-the-moneyshow-me-the-money"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#show-me-the-money" target="_blank" rel="noopener noreferrer"></a>Show me the money!</h2>
<p>I think this is the interesting comparison. How did a Tier-1 MS-hosted build VM cost? Around 400‚Ç¨? How does it compare to using the Azure DevTest Labs alternative?</p>
<p>There‚Äôs only one fix cost when using Azure DevTest Labs: the blob storage where the VHD is uploaded. The VHD‚Äôs size is around 130GB and this should have a cost of, more or less, 5 euros/month. Keep in mind that <strong>you need to clean up your custom images when yours is prepared</strong>, the new ones are created as snapshots and also take space in the storage account.</p>
<p>Then we have the variable costs that come with the deployment of a VM each build but it‚Äôs just <strong>absurd</strong>. Imagine we‚Äôre using a B4ms VM, with a 256GB Premium SSD disk, we would pay 0.18‚Ç¨/hour for the VM plus the proportional part of 35.26‚Ç¨/month of the SSD disk, which would be like 5 cents/hour?</p>
<p>But this can run on a B2ms VM too which is half the compute price of the VM, down to 9 cents per hour.</p>
<p>If we run this build once a day each month, 30 times, the cost of a B4ms would be like‚Ä¶ 7‚Ç¨? Add the blob storage and we‚Äôll be paying <strong>12‚Ç¨ per month to run our builds with DB sync and tests</strong>.</p>
<p>Is it cheaper than deploying a cloud-hosted environment, and starting and stopping it using <a href="https://github.com/d365collaborative/d365fo.tools" target="_blank" rel="noopener noreferrer">the new d365fo.tools Cmdlets</a> each time we run the build? <strong>Yes it is!</strong> Because if we deploy a CHE we‚Äôll be paying the price of the SSD disk for the whole month!</p>
<h2 id="httpsaristeinfoen202102azure-devtest-labs-build-dynamics-365-fnosome-final-remarkssome-final-remarks"><a href="https://ariste.info/en/2021/02/azure-devtest-labs-build-dynamics-365-fno/#some-final-remarks" target="_blank" rel="noopener noreferrer"></a>Some final remarks</h2>
<ol>
<li>I have accomplished this <strong>mostly through trial-and-error</strong>. There‚Äôs lots of enhancements and best practices to be applied to all the process, specially using an <a href="https://docs.microsoft.com/en-us/azure/key-vault/general/overview?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Azure Key Vault</a> to store all the secrets to be used in the Azure DevOps Agent artifact and the pipeline.</li>
<li>This in another clear example that <a href="https://ariste.info/en/2019/07/do-you-want-to-become-a-better-x-developer/" target="_blank" rel="noopener noreferrer">X++ developers need to step outside of X++</a> and Dynamics 365 FnO. We‚Äôre not X++ only developers anymore, we‚Äôre very lucky to be working on a product that is using Azure.</li>
<li>I‚Äôm sure there‚Äôs scenarios where using DevTest Labs to create a build VM is useful. Maybe not for an implementation partner, but maybe it is for an ISV partner. It‚Äôs just an additional option.</li>
<li>The only bad thing to me is that we need to apply the version upgrades manually to the VHDs because they‚Äôre published only twice a year.</li>
<li>As I said at the beginning of the post, it may have worked to me with all these steps, but if you try you maybe need to change some things. But it‚Äôs a good way to start.</li>
</ol>
]]></description>
</item><item>
    <title>Develop custom Data Entities for Dual-write</title>
    <link>https://nuxulu.com/2021-05-02-develop-custom-data-entities-for-dual-write/</link>
    <pubDate>Sun, 02 May 2021 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2021-05-02-develop-custom-data-entities-for-dual-write/</guid>
    <description><![CDATA[<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dual-write</a> has been around for almost two years now. It‚Äôs one of the ways of <strong>integrating Dynamics 365 Finance and Operations and <a href="https://docs.microsoft.com/en-us/powerapps/maker/data-platform?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dataverse</a></strong> along with <a href="https://ariste.info/en/2020/09/dynamics-365-odata-cds-virtual-entities/" target="_blank" rel="noopener noreferrer">Virtual Entities</a>.</p>
<p>The standard solution comes with many <strong>out-of-the-box entities</strong> available to synchronize. This has been one of the great improvements since Dual-write was made available in preview, when <a href="https://jatomas.com/" target="_blank" rel="noopener noreferrer">Juanan</a> and I <a href="https://www.youtube.com/watch?v=z_dLGDF7Ci0" target="_blank" rel="noopener noreferrer">demoed it in the 2019 Dynamics Saturday in Madrid</a>.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW-1024x1024.png" title="Dual write" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW-1024x1024.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 1</h2><p>Dual write</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 1</figcaption>
    </figure></p>
<p>This is how Dual write really works</p>
<p>But what if we need to develop a <strong>new custom Data Entity in MSDyn365FO</strong> and use it in Dual-write? It‚Äôs easy but there‚Äôs some things we need to remember when doing it.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writedual-writedual-write"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#dual-write" target="_blank" rel="noopener noreferrer"></a>Dual-write</h2>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dual-write</a> is a bidirectional integration that will synchronously write in Dataverse when data is created, updated or deleted in MSDyn365FO in near-real-time. On the Finance and Operations side it uses data entities to export data to Dataverse.</p>
<p>Right now there‚Äôs a set of several OOB entities that come ready to be synchronized, and thanks to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/initial-sync-guidance?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Initial Sync</a> we can populate data in Dataverse choosing FnO as the source when starting the sync, or also choose Dataverse as the source.</p>
<p>If you want to learn more about Dual-write you can:</p>
<ul>
<li>Read <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">the docs</a> which have plenty of information. <strong>Read the docs</strong>. Always.</li>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/connection-setup?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Guidance for Dual-Write setup</a></li>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/requirements-and-prerequisites?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">System requirements and prerequisites</a></li>
<li>Watch some of <a href="https://daxture.blogspot.com/" target="_blank" rel="noopener noreferrer">Faisal Fareed</a>‚Äòs sessions about Dual-write: <a href="https://dynamicscon.com/" target="_blank" rel="noopener noreferrer">DynamicsCon</a> 2020: <a href="https://www.youtube.com/watch?v=DbyLLQswM5o" target="_blank" rel="noopener noreferrer">The Power of Dual-write</a> or Scottish Summit 2021: <a href="https://www.youtube.com/watch?v=O2iuM6dWklI" target="_blank" rel="noopener noreferrer">D365 FO integration with Dataverse ‚Äì Dual write, Virtual Entities, OR Data Integrator</a>. He‚Äôs got some more which you can find on Youtube.</li>
</ul>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-the-data-entitycreate-the-data-entity"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-the-data-entity" target="_blank" rel="noopener noreferrer"></a>Create the Data-entity</h2>
<p>In Visual Studio we need to create the entity from our table. I‚Äôve created a new table called AASBookTable with just four fields: BookId, Author, Name and ISBN. Its primary key is the BookId field which is also its <strong>alternate key</strong> and will be used as natural key in the entity.</p>
<p>Next, we create the data entity and make sure we‚Äôre marking the ‚Äú<strong>Enable data management capabilities</strong>‚Äù checkbox:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW1.png" title="Dynamics 365 Finance and Operations Data entity wizard" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW1.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 2</h2><p>Dynamics 365 Finance and Operations Data entity wizard</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 2</figcaption>
    </figure></p>
<p>Enable data management capabilities must be checked</p>
<p>If the entity doesn‚Äôt have data management enabled it won‚Äôt be displayed in the list in the Dual-write tables setup.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-a-table-in-dataversecreate-a-table-in-dataverse"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-a-table-in-dataverse" target="_blank" rel="noopener noreferrer"></a>Create a table in Dataverse</h2>
<p>Now we need to create a table in our Dataverse environment. This table must have at least some of the fields we want to synchronize to Dataverse <strong>AND</strong> a company field. <strong>The <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/company-data?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">company</a> concept doesn‚Äôt exist in Dataverse/CRM</strong> but thanks to the OOB mappings and <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/initial-sync-guidance?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Initial Sync</a> we can solve this with just a few clicks and will have a company table in Dataverse with all our FnO legal entities.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW2.png" title="Company field related to table company" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW2.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 3</h2><p>Company field related to table company</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 3</figcaption>
    </figure></p>
<p>Company field related to table company</p>
<p>Following my example I‚Äôve created a table with the same four fields and a company field with the <strong>data type Lookup</strong> and its related table Company, where the FnO legal entities are synchronized.</p>
<p>As I said, if we don‚Äôt create this field we won-t be able to setup Dual-write for this table.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-table-mapcreate-table-map"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-table-map" target="_blank" rel="noopener noreferrer"></a>Create table map</h2>
<p>Our table and data entity are ready, and now <strong>we need to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/enable-entity-map?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">create a mapping</a> between them</strong> in the Dual-write workspace in FnO. Click the ‚ÄúAdd table map‚Äù button:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW3.png" title="Dynamics 365 Dual-write add table map" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW3.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 4</h2><p>Dynamics 365 Dual-write add table map</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 4</figcaption>
    </figure></p>
<p>Dynamics 365 Dual-write add table map</p>
<p>A new dialog will open and we need to select the FnO entity and the Dataverse table:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW4-edited.png" title="Entity map" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW4-edited.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 5</h2><p>Entity map</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 5</figcaption>
    </figure></p>
<p>Entity map</p>
<p>Select the entity and table we‚Äôve created and click save. Then we can define the field mapping:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW13-1024x629.png" title="Dynamics 365 Dual-write field maps" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW13-1024x629.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 6</h2><p>Dynamics 365 Dual-write field maps</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 6</figcaption>
    </figure></p>
<p>Dynamics 365 Dual-write field maps</p>
<p>Because I‚Äôve created both it‚Äôs clear what to map. And after doing this we can click save and it‚Äôs done, right? No! <strong>WRONG</strong>! If we do just this we‚Äôll get an error, this error:</p>
<blockquote>
<p>Project validation failed. SourceEntitySchema: Books has a primaryCompanyField set to DataAreaId and DestinationEntitySchema: cr008_bookses doesn‚Äôt have primary company field set. Dual-write only supports mapping between cross-company entities or company-specific entities from both sides..keys are missing for either AX or CRM.keys are missing for either CRM or AX</p>
</blockquote>
<p>Or we can also get an error regarding a missing integration key for the company field. In the end both are caused because <strong>we‚Äôve missed defining the integration key</strong> for this new Dataverse table:</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writeintegration-keyintegration-key"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#integration-key" target="_blank" rel="noopener noreferrer"></a>Integration key</h2>
<p>Go back to the main Dual-write form and click on the ‚ÄúIntegration key‚Äù button:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW7.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW7.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 7</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 7</figcaption>
    </figure></p>
<p>Dual-write integration key</p>
<p>The integration key will be <strong>the same as the FnO data entity key, plus the company</strong> if your data entity has a company context. Remember that when we create indexes in FnO the DataAreaId field isn‚Äôt included in the field, but it is in the SQL Server index along the partition field.</p>
<p>The integration key for our custom Dual-write mapping will look like this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW11.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW11.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 8</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 8</figcaption>
    </figure></p>
<p>Dual/write integration key</p>
<p>Remember we‚Äôve added the company field to our Dataverse table? You can see in the image above that the field includes the relation to the Company table in Dataverse. We won‚Äôt be able to save the field mapping if we create the key using our Dataverse table‚Äôs company field instead of its Company table relation, like this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW9.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW9.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 9</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 9</figcaption>
    </figure></p>
<p>Dual/write integration key</p>
<p>See the difference? In the first image the field reads <em>c008_company.cdm_companycode</em> while in the second one it‚Äôs <em>c008_company</em>. If we set the integration key using the field in our table instead of the related table and save the fields‚Äô mapping we‚Äôll get an error saying the company is missing in the key because it‚Äôs expecting the relation!</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writeactionaction"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#action" target="_blank" rel="noopener noreferrer"></a>Action!</h2>
<p>The table and field mappings are ready, just click run and go create a new book in the FnO form:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW14.png" title="Finance and Operations form" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW14.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 10</h2><p>Finance and Operations form</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 10</figcaption>
    </figure></p>
<p>Finance and Operations form</p>
<p>Then we go to our Dataverse table and check its data‚Ä¶</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW15.png" title="Dataverse table data" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW15.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 11</h2><p>Dataverse table data</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 11</figcaption>
    </figure></p>
<p>Dataverse table data</p>
<p>It‚Äôs there! And of course it‚Äôs working in both directions. If I create a record in Dataverse it‚Äôll be created in FnO too. I‚Äôll use the Excel add-in to add a new book:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW16.png" title="Dataverse Excel add-in" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW16.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 12</h2><p>Dataverse Excel add-in</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 12</figcaption>
    </figure></p>
<p>Dataverse Excel add-in</p>
<p>And after refreshing the form in FnO we can see it there too:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW17.png" title="Develop custom Data Entities for Dual-write 1" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW17.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 13</h2><p>Develop custom Data Entities for Dual-write 1</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 13</figcaption>
    </figure></p>
<p>This is a really simple example of how we can create a custom table, use it in a data entity and then use this entity in our dual-write setup. It‚Äôs something that can be easily done but we need to <strong>remember the ‚Äúcompany thing‚Äù</strong>, otherwise this will never work!</p>
<p>Dual-write is even easier to configure nowadays thanks to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/lcs-setup?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">LCS allowing us to create and link a new Dataverse environment when we deploy a new Finance and Operations environment</a>.</p>
]]></description>
</item><item>
    <title>AUTOMATE YOUR TESTS FOR DYNAMICS 365 FINANCE AND OPERATIONS</title>
    <link>https://nuxulu.com/2021-01-01-automate-your-tests-for-dynamics-365-finance/</link>
    <pubDate>Fri, 01 Jan 2021 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2021-01-01-automate-your-tests-for-dynamics-365-finance/</guid>
    <description><![CDATA[<p>A new article for you the community. More specifically, all project managers, functional and technical consultants, as well as customer-side decision-makers on the deployment of Dynamics 365 Finance and Operations.</p>
<p>I told myself that it would be important to offer you a global article on all the testing capabilities (manual or automatic) for Dynamics 365 Finance and Operations. It is the result of quite a long work but which I hope will help you to improve your code delivery and upgrade processes.</p>
<p>As you know, updates to version 10.x are monthly and therefore require operational tests on a regular basis ! I don‚Äôt know for you, but for some customers that I know it can take almost 1 week or more for 3 consultants‚Ä¶</p>
<p>In addition, if you want to be in an agile process of continuous delivery in production, it is often necessary to take time with the Key Users or the IT team to ensure that we do not have a regression in any part of the ERP. The more development you add, the longer and more difficult it will be to test all of your processes: this will therefore lower the quality of your deployments and repetitions of bugs in the chain: which will necessarily have a cost but also psychological in trust of the tool and your team.</p>
<p>For my part, I know that this part is often the least urgent in a process, however if this is done from the start of your GoLive and in continuity, you will gain enormously, therefore automating your tests as much as possible to allow time your team to manage more strategic cases (training, designs) that a machine will not be able to automate. This is the motto of the PowerAutomate tool of the PowerPlatform :</p>
<blockquote>
<p>‚ÄúTake Care of what‚Äôs important. Automate the rest‚Äù</p>
</blockquote>
<p>Before going into the details of each testing feature that you can use with Dynamics 365 for Finance and Operations, it is important to clarify a few things, such as :</p>
<ul>
<li>
<p>You CAN‚ÄôT test everything‚Ä¶ well automatically in fact. As you will see in this article, testing some SSRS Reports, layouts, interfaces or other tools will be very complicated to achieve, and a machine is not a human‚Ä¶ So keep in mind that all these features will help you to automate <strong>as much as possible</strong> long tests process, but you will need to do something‚Ä¶ Like of course analyzing Plan test reports, see errors log, correct them, tests manual process : but at the end, maybe you will gain 90% of your testing time ! So clearly I invite you to use all the elements that I will present to you.</p>
</li>
<li>
<p>I will not go very deeper in each parts, because it will be too long ! So of course, you can go directly in each Microsoft documentations to go further in details. But keep in mind, that all documentations are presented separately and it seemed important to me to report everything to you in a single document.</p>
</li>
<li>
<p><strong>Data integration testing</strong></p>
<p>Do not use RSAT (as you will see after) for integration tests, instead rely on the data management framework (also known as DIXF). <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/data-task-automation?WT.mc_id=BA-MVP-5003744" target="_blank" rel="noopener noreferrer">The¬†Data task automation¬†framework</a> enables you to configure and automate the testing of your data integration scenarios.</p>
</li>
</ul>
<hr>
<p>Now, we can go !</p>
<p>So, in Dynamics 365 Finance and Operations, you have <strong>3 parts</strong> of testing.</p>
<p>While the functional validation of an ERP application can‚Äôt be fully data agnostic, there are multiple phases and approaches for testing. These testing phases include:</p>
<ul>
<li>
<p>SysTest framework</p>
</li>
<li>
<p>ATL frameowrk</p>
</li>
<li>
<p>Regression Suite Automation Tool (RSAT)</p>
</li>
</ul>
<h2 id="overview"><strong>Overview</strong></h2>
<ul>
<li>
<p><strong>SysTest framework</strong>¬†‚Äì The SysTest framework is reliable for writing unit tests. Because unit tests are generally testing a method or function, they should always be data agnostic and dependent only on the input data that is provided as part of the test.</p>
</li>
<li>
<p><strong>ATL framework</strong>¬†‚Äì Microsoft has an ATL framework that is an abstraction on the SysTest framework and makes functional test writing much more simple and reliable. This framework should be used for writing component tests or simple integration tests.</p>
</li>
<li>
<p><strong>RSAT</strong>¬†‚Äì The RSAT is used for integration tests and business cycle tests. The business cycle tests, also called the regression validation tests, are dependent on existing data. However, these tests can become data agnostic if you consider additional factors.</p>
<ul>
<li>
<p>Where unit tests and component tests are low level and can fully be data agnostic (not dependent on existing dataset), the business cycle or regression validation tests are dependent on some existing data. This data includes setup, configuration settings (parameters), and master data (customer, vendors, items, etc.), but never transaction data. Make sure that during the test, if any of these are being changed, that they are reverted back as part of the final test.</p>
</li>
<li>
<p>Select master data based on certain criteria instead of selecting a particular record. For example, if you want to select an item based on its dimension values and stock availability, filter the product list with those values, select the first item, and copy the number to be used for future tests. If it‚Äôs a simple master data line such as customer, vendor, or item, it can be created as part of the automation and used in future tests through chaining.</p>
</li>
<li>
<p>Enter the unique identifiers, such as invoice numbers, through the number sequence or by using Microsoft Excel functions such as =TEXT(NOW(),&ldquo;yyyymmddhhmm&rdquo;). This function will provide a unique number every minute, which allows you to track when the action happened. This can be used for variables such as product receipt numbers and vendor invoice numbers. These tests continue to work on the same database again and again, without requiring any restoration.</p>
</li>
<li>
<p>Always set the¬†<strong>Edit mode</strong>¬†of the environment to¬†<strong>Read</strong>¬†or¬†<strong>Edit</strong>¬†as the first test case because the default option is¬†<strong>Auto</strong>. The¬†<strong>Auto</strong>¬†options always uses the previous setting and can cause unreliable tests. You can change it in the TEST account that will be used in RSAT (User Option)</p>
</li>
<li>
<p>Only validate after you filter on a particular transaction instead of generic validation. For example, for the number of records, filter for the transaction number or the transaction date so that the validation excludes all other transactions.</p>
</li>
<li>
<p>If you are checking a customer balance or budget check, save the value first and then add your transaction value to validate the expected result instead of validating a fixed expected value.</p>
</li>
</ul>
</li>
</ul>
<p></p>
<p>![rsat-data-agnostic-testing-01.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/rsat-data-agnostic-testing-01.png)</p>
<hr>
<h2 id="1-lcs--bpm--azuredevops-via-task-recorder"><strong>1/ LCS &lt;=&gt; BPM &lt;=&gt; AzureDevOps (via Task Recorder)</strong></h2>
<p>You aren&rsquo;t required to use the Business process modeler (BPM) tool in LCS. However, BPM is the recommended tool if you want to enable the management and distribution of test libraries across projects and tenants. These capabilities are especially useful for Microsoft partners and independent software vendors (ISVs). BPM enables the distribution of test libraries as part of LCS solutions. If you are not using BPM, you can manually create test cases in Azure DevOps and attach developer recording files to your Azure DevOps test cases. You can create developer recording files directly from the Task recorder pane.</p>
<p>On my side, I will show you how to create BPM in LCS before going to record all my process with the Task Recorders.</p>
<p>So, go to your LCS project first. I will assume also that you have already connect LCS and Azure DevOps together.</p>
<p>You can after go to the Business Process Modeler part.</p>
<p></p>
<p>![Screenshot 2020-04-20_21-19-53-857.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-19-53-857.png)</p>
<p>As you will notice here, you have your own BPM and also some done by Microsoft. Of course, in your own company/customer, it‚Äôs somehow complicated to have a standard &amp; global but it will be helpful to check the Microsoft BPM to see how it works.</p>
<p></p>
<p>![Screenshot 2020-04-20_21-21-34-605.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-21-34-605.png)</p>
<p>On my side I will create a complete new one to handle testing purpose. ‚ÄúNormally‚Äù before a GoLive it‚Äôs a task very highly recommended to do with your Key Users, Project Manager and Functional Consultant.</p>
<p></p>
<p>![Screenshot 2020-04-20_21-25-13-784.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-25-13-784.png)</p>
<p>So as you can see, I‚Äôve created a very basic one, just for an example. My process is only to model my customer creation process.</p>
<p>After you can add other child flows, dependent processes etc‚Ä¶</p>
<p>Also in BPM, you can have a VISIO model of Flow charts, of all your process in the ERP, has defined in LCS. It can be also a good way to add requirements in AzureDevOps before jumping to do customization. Clearly it‚Äôs high level definition, but useful also to not forget some specific process, as well as doing some tutorials practices based on that : as you will see also in Task Recorder, you can do your training documentation with screenshots. That‚Äôs why if you do it at the very beginning stage of your implementation, all these process conception will help you not just for testing purpose after or before GoLive !!<br>
If you want to learn more, you‚Äôll to go there in the Microsoft documentation below :</p>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/lifecycle-services/bpm-overview?WT.mc_id=BA-MVP-5003744" target="_blank" rel="noopener noreferrer">Learn more on BPM in LCS</a></p>
<p>Now that I‚Äôve done my BPM in LCS, i will need to go to FinOps instance to record all my process flow.</p>
<p><strong><em>Quick tips</em></strong> : Download the Extension to have the featue for Google Chrome to take screenshots (good way for training documentation) :</p>
<p><a href="https://chrome.google.com/webstore/detail/d365-for-finance-and-oper/inifapcodikhojbnbafaalgbgkfmnlob/related?hl=en-GB" target="_blank" rel="noopener noreferrer">https://chrome.google.com/webstore/detail/d365-for-finance-and-oper/inifapcodikhojbnbafaalgbgkfmnlob/related?hl=en-GB</a></p>
<p>Go like in an UAT instance, where you have some DEMO data in it or maybe already a copy of your production/live database. Of course, the mandatory data is to have all your reference and master data in it in order to have a whole complete process. (like for my customer flow : Customer Group, Tax Group etc‚Ä¶)</p>
<p>When you are in FinOps, go to the top right !</p>
<p></p>
<p>![Screenshot 2020-04-20_21-43-54-968.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-43-54-968.png)</p>
<p>Click on ‚ÄúCreate recording‚Äù</p>
<p>Give it a name and description if you want. (good if you have multiple different type of flows to create a customer) - activate take screenshots option if you also intend to generate documentation, in addition to being able to recover the trace file for automated tests.</p>
<p></p>
<p>![Screenshot 2020-04-20_21-48-41-193.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-48-41-193.png)</p>
<p>Well, next, you need to do your process :)</p>
<p>After end your task recorder, and keep in a safe place your .AXTR files ; like in a Sharepoint folder.</p>
<p></p>
<p>![Screenshot 2020-04-20_21-54-08-943.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_21-54-08-943.png)</p>
<p><strong>Keep in mind that Task Records will need to be adjust in your lifecycle of your project, maybe if you change your process or maybe because you have added a new custom field.</strong><br>
And here are few more best practices :</p>
<p>Follow these guidelines when authoring and recording your test cases, especially if you are planning to automate test execution. The process and tools described in this article apply to business process acceptance tests. They are not meant to replace component and unit testing that is typically owned by developers.</p>
<ul>
<li>
<p>Author a limited number of test cases that, when combined, cover complete end-to-end processes.</p>
</li>
<li>
<p>Focus on business processes that have been customized.</p>
</li>
<li>
<p>An individual test case (recording) should cover one or two business tasks only, typically executed by one person. This simplifies task recording maintenance. Do not combine a complete end-to-end business process such as &ldquo;Procure to Pay&rdquo; or &ldquo;Order to Cash&rdquo; into one large task recording. For example, instead of having RFQ &gt; Purchase Order &gt; Product Receipt &gt; Vendor Invoice &gt; Vendor Payment as one test case, divide the process into three or four test cases. You will have the opportunity to combine these tests into an ordered test suite later.</p>
</li>
<li>
<p>A test case should have at least one validation. Try to validate critical fields that cover the impact of other fields. For example: Validation of totals on sales or purchase orders cover the unit price/quantity/discount/tax &hellip;etc.</p>
</li>
<li>
<p>Avoid printing a report in a test case. If a test case needs to print a report, it should be selected on screen.</p>
</li>
<li>
<p>80+% of test cases should be of transactions or source documents. Master data should be limited to up to 20% of test cases only.</p>
</li>
</ul>
<p>Saying that, let‚Äôs go again in our BPM library that we have created earlier. We will attach our task recorder file in it.</p>
<p>For that, just click on upload.</p>
<p></p>
<p>![Screenshot 2020-04-20_22-01-29-423.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-01-29-423.png)</p>
<p>Now we will sync it directly to our AzureDevOps Project, to create all our test plan and create every unit test case for every process that you have attached a task recorder file.</p>
<p>You will need to click on the 3 dots, right after the Collapse button and click on the two like me :</p>
<p></p>
<p>![Screenshot 2020-04-20_22-03-46-975.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-03-46-975.png)</p>
<p>Now you can go to your Azure DevOps / VSTS tenant.</p>
<p>You will need an account that have a MSDN subscription or at least a Basic Licence + test plan in order to do automate testing. So take 1 or 2 licences, essentially for the account that will configure all test plan. The basic licence is at 5 euro/month/user and the basic + test plan is more than 40 euro/month/user so not the same cost, but compared to the gain in effort by continuing to carry out only manual tests, believe me you will necessarily largely recover that‚Ä¶</p>
<p>I have created a Test Plan called : RSAT for the tool Regression Suite Automation Tool that I will explain after. But you can call it more with a friendly name, like ‚ÄúRegression test for 10.0.9 upgrade‚Äù. Of course it‚Äôs like a folder of every test case suite that we will attach after, to have a global overview of every tests cases.</p>
<p>It will be also here that you can see Chart, progression testing report, based on a time purpose, priority, logs. You can copy/past a whole test plan, every week-month, like for upgrade process.</p>
<p>Attach like me the test cases that are normally been in VSTS, since you have synced in LCS before in the BPM.</p>
<p></p>
<p>![Screenshot 2020-04-20_22-13-33-236.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-13-33-236.png)</p>
<p>You will see in a test case, like the Customer flow that I‚Äôve done before some informations. The tag ‚ÄúLCS:TestCases‚Äù in order to quickly see all synced tests with BPM in LCS. You will see every steps actions, and in attachment you will have the .AXTR file needed for automate the test with RSAT after.</p>
<p></p>
<p>![Screenshot 2020-04-20_22-17-06-855.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-17-06-855.png)</p>
<hr>
<h2 id="2-rsat---regression-suite-automation-tool"><strong>2/ RSAT - Regression Suite Automation Tool</strong></h2>
<p><strong>Overview</strong></p>
<p>The Regression suite automation tool (RSAT) significantly reduces the time and cost of user acceptance testing (UAT). UAT is typically required before you take a Microsoft application update, or before you apply custom code and configurations to your production environment. RSAT lets functional power users record business tasks by using Task recorder and then convert the recordings into a suite of automated tests, without having to write source code. For more information about Task recorder, see <a href="https://www.powerazure365.com/user-interface/task-recorder" target="_blank" rel="noopener noreferrer">Task recorder resources</a>.</p>
<p>RSAT is fully integrated with Microsoft Azure DevOps for test execution, reporting, and investigation. Test parameters are decoupled from test steps and stored in Microsoft Excel files.</p>
<p>RSAT usage is described here in this schema :</p>
<p></p>
<p>![end-to-end.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/end-to-end.png)</p>
<p>First, you will need to install it :)</p>
<p>Windows 10 and needed also Excel app.</p>
<p><a href="https://www.microsoft.com/download/details.aspx?WT.mc_id=BA-MVP-5003744&amp;id=57357" target="_blank" rel="noopener noreferrer">Download RSAT</a></p>
<p>But before going to RSAT directly, go back to your Azure DevOps, you will need a Personal Access Token.</p>
<p></p>
<p>![Sans titre.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Sans+titre.png)</p>
<p></p>
<p>![Screenshot 2020-04-20_23-51-45-050.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-51-45-050.png)</p>
<p>Create a new one for RSAT, and make him as expiration date in 1 year, to be safe :)</p>
<p>After you need to configure it, to link of course on which environment you need to do your automate testing and. also the Azure DevOps project in which you have setup all test cases.</p>
<p></p>
<p>![RSAT-1.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-1.png)</p>
<p>Change your Azure DevOps URL, put your Personal Access Token generated before, you will now use your Project and the Test Plan created in Azure DevOps before.</p>
<p></p>
<p>![RSAT-2.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-2.png)</p>
<p>After it‚Äôs a little more complicated.</p>
<p>Put your hostname, the URL of your FinOps instance without HTTPS.</p>
<p>For the SOAP Hostname, it‚Äôs the same but with <strong>aossoap</strong> between the firstpart of your hostname and .sandbox part. Like me below :</p>
<p></p>
<p>![RSAT-3.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-3.png)</p>
<p>Put your admin user name email address. The account that will launch every test in your instance. And the company name / legal entity. Keep in mind that we can change on every test the legal entity in a parameter file.</p>
<p>For the Thumbprint, it‚Äôs a certificate to generate on your computer. Click on new. Copy the number. You will need a technical guy to put it in the environment where you plan to execute the TEST.</p>
<p>In the wif.config located in K:\AosService\WebRoot</p>
<p>-&gt; Don‚Äôt forget to apply on each AOS Server !</p>
<pre><code>&lt;authority name=&quot;CN=127.0.0.1&quot;&gt;
    &lt;keys&gt;
        &lt;add thumbprint=&quot;xxxxxxxxxxxxxxxxxxxxxxxxx&quot; /&gt;
    &lt;/keys&gt;
        &lt;validIssuers&gt;
            &lt;add name=&quot;CN=127.0.0.1&quot; /&gt;
        &lt;/validIssuers&gt;
&lt;/authority&gt;    
</code></pre>
<p>Save a Working Directory folder and also Default Browser to Google Chrome. Don‚Äôt forget after configuration to click on Save As, in order to save the configuration and maybe share it for other consultants in your project.<br>
Load your test plan and click after on Generate Test Execution and Parameters files.</p>
<p></p>
<p>![RSAT-3.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-3(1).png)</p>
<p></p>
<p>![You need to have all your test cases here and now you can check on each the Parameter files and change everything needed.](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-4.png)</p>
<p>You need to have all your test cases here and now you can check on each the Parameter files and change everything needed.</p>
<p></p>
<p></p>
<p></p>
<p>![RSAT-5.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-5.png)![RSAT-6.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-6.png)![RSAT-7.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-7.png)</p>
<p>You can pick one, like the Customer RSAT process. And click on ‚ÄúRUN‚Äù ; before a small warning , click on YES.</p>
<p></p>
<p>![RSAT-8.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-8.png)</p>
<p>Normally, Google Chrome will launch automatically and test everything without any actions on your hand !!</p>
<p>So maybe a good way is to install RSAT on a network server machine or a VM in Azure and launch every tests on night, without to keep your local machine / PC turned on : because it can takes some time, depending on the amount of test you have.</p>
<p>At the end, you can see the result directly in RSAT on each of them.</p>
<p>But the best way is after to upload the result directly on Azure DevOps. So that everyone, especially Technical Guys can get the log files in there if they are some errors.</p>
<p>For that, click on Upload part and ‚Äúall modified automation files‚Äù</p>
<p></p>
<p>![RSAT-9.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/RSAT-9.png)</p>
<p>Now go to your Azure DevOps Test Plan.</p>
<p>You can see all Recent test runs</p>
<p></p>
<p>![Screenshot 2020-04-21_00-30-44-231.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-21_00-30-44-231.png)</p>
<p>If we go to the one of RSAT that goes well.</p>
<p></p>
<p>![Screenshot 2020-04-21_00-32-06-314.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-21_00-32-06-314.png)</p>
<p>You can have all the Log needed, tracked by RSAT.</p>
<p>On something that went wrong‚Ä¶ but in unit test with SysTestFramework that we will see after, the developer can have the .AXTR file generated for her/him.<br>
Also we can generate automatically a Bug/Work Item based on a failed test and alert me :)</p>
<p></p>
<p>![Screenshot 2020-04-21_00-31-37-242.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-21_00-31-37-242.png)</p>
<p>For Project Manager, we have also a report that we can change if you want !</p>
<p></p>
<p>![Screenshot 2020-04-21_00-33-18-567.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-21_00-33-18-567.png)</p>
<p>To conclude RSAT, yes we can deeper. I don‚Äôt have setup this kind of thing in this example, but you can of course :</p>
<ul>
<li>
<p>Create derivated test case : The Regression suite automation tool (RSAT) lets you to use the same task recording with multiple test cases, so that you can run a task with different data configurations. To do this, select a test case in the Regression suite automation tool and then select¬†<strong>New &gt; Create Derived Test Case</strong>. This creates a child test case in Azure DevOps. The resulting derived test case is linked to its parent test case in Azure DevOps. It has an Excel parameters file attached but no recording file. The derived test case will appear in the Regression suite automation tool grid under the same test suite with the¬†<strong>Derived</strong>¬†column selected. Derived test cases are named after their parent test case with a numeric suffix.</p>
</li>
<li>
<p>Chaining : One of the key features of the Regression Suite Automation Tool is the chaining of test cases, that is, the ability of a test to pass values to other tests. Test cases are executed according to their defined order in the Azure DevOps test plan, which can also be updated in the test tool itself. It is important to correctly order the tests if you want to pass variables from one test case to the other.</p>
<p>To save the value of a variable while recording the test in Task Recorder, right-click the field and select¬†<strong>Task recorder &gt; Copy</strong>, as shown below. This will save the variable in the recording file. This variable can be used in subsequent tests.</p>
</li>
<li>
<p>Validate expected values : An important component of a test case is validation of expected values. You can define validation parameters during the authoring of your test cases using Task Recorder. While recording, right-click on a control and select¬†<strong>CurrentValue</strong>¬†under the¬†<strong>Task Recorder &gt; Validate</strong>¬†menu. This action becomes a validation step that you can use with the Regression suite automation tool. The control value will become a validation variable in the automatically generated Excel parameters file. The menu item is shown in the following image.</p>
</li>
</ul>
<p></p>
<p>![When RSAT generates the Excel parameter file for a test case, validation steps are added as shown in the image below. You can enter the expected value to use during execution of the test case.](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/validate-test-case.png)</p>
<p>When RSAT generates the Excel parameter file for a test case, validation steps are added as shown in the image below. You can enter the expected value to use during execution of the test case.</p>
<p></p>
<p>![rsat-validate-variables.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/rsat-validate-variables.png)</p>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/perf-test/rsat/rsat-validate-expected?WT.mc_id=BA-MVP-5003744" target="_blank" rel="noopener noreferrer">Learn more RSAT</a></p>
<hr>
<h2 id="3-systestframework-and-atl--acceptance-test-library"><strong>3/ SysTestFramework and ATL : Acceptance test library</strong></h2>
<p></p>
<p>![54.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/54.png)</p>
<h2 id="key-concepts"><strong>Key concepts</strong></h2>
<ul>
<li>
<p>Use SysTest Framework to author unit/component test code.</p>
</li>
<li>
<p>Test isolation</p>
</li>
<li>
<p>Test module creation to manage test code and FormAdaptors.</p>
</li>
<li>
<p>Import Task Recorder recordings into Visual Studio to generate test code.</p>
</li>
<li>
<p>Overview of the ATL framework</p>
</li>
<li>
<p>Integrate a Test module with a build machine.</p>
</li>
</ul>
<p>Clearly this part is mostly for developers, but I think it‚Äôs useful also for project manager or functional consultant to know which unit test in the code can be done, despite the RSAT tool that we see before. In fact, all task recorders can be a good start to include it in the Development machine to generate simple test case, but I will show also other Framework that developers can use to be more confident before pushing a new development in a TEST environment‚Ä¶</p>
<p>So, first best practice, before going to start writing tests, you will need a new model for that ! To achieve that, go to your Visual Studio and create a new one like me :</p>
<p></p>
<p>![Screenshot 2020-04-20_22-43-39-536.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-43-39-536.png)</p>
<p>Important after, select your reference package. Like me, I select my main package of custom codes - solution to TEST</p>
<p></p>
<p>![Screenshot 2020-04-20_22-44-11-534.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-44-11-534.png)</p>
<p>Check : Create new project, it will here where you will place all your unit tests - and don‚Äôt of course make it as the default model for new projects.</p>
<p></p>
<p>![Screenshot 2020-04-20_22-44-49-881.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-44-49-881.png)</p>
<p>After the model is created, change the reference packages, to include <strong>ALL FormsAdaptators models,</strong> and the main one : <strong>Test essentials model</strong> !</p>
<p>Also put your main VS project as the Startup object !</p>
<p></p>
<p>![Screenshot 2020-04-20_22-46-10-271.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-46-10-271.png)</p>
<p>So now, you have your TEST model, all referenced packages included, include your main one of course. You can now built custom test unit code with SysTestFramework;</p>
<p>On my side, I will use the Task Recorder Add-in in VS, but of course, <strong>you can built your own one without addin</strong>. Especially to test custom method on a custom class etc‚Ä¶</p>
<p>To generate test class automatically, click on Addins / Import Task Recording</p>
<p></p>
<p>![Screenshot 2020-04-20_22-56-02-444.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_22-56-02-444.png)</p>
<p>Import the file that you have in the AzureDevOps Unit Test case that we see before (like me : Recording.xml) : as you can see BPM / LCS and Azure DevOps is not only for RSAT !<br>
Select of course your new model for testing purpose.</p>
<p></p>
<p>![Screenshot 2020-04-20_23-01-07-796.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-01-07-796.png)</p>
<p>You will have a new generate class, like me</p>
<p>Change just the top of the class, like adding a SysTestCategory, it will be helpful by doing some filters in the BUILD pipeline of Azure DevOps. Select the legal entity where you want to achieve your test and also add an AutoRollback statement in order to erase all your data after testing process.</p>
<p>This class is of course simulate each UI testing, as well as data / business process testing.</p>
<p></p>
<p>![Screenshot 2020-04-20_23-03-17-041.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-03-17-041.png)</p>
<p>You can of course directly after run &amp; check if your TEST is OK in your DEV environment by going in the Test Explorer view.</p>
<p></p>
<p>![Screenshot 2020-04-20_23-04-06-977.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-04-06-977.png)</p>
<p>This test can be now included in your version control to be used as the BUILD pipeline step in order to automatically runs every night all your SysTest Framework test.</p>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/perf-test/systest-filtering?WT.mc_id=BA-MVP-5003744" target="_blank" rel="noopener noreferrer">Learn more on SysTest Framework</a></p>
<p>Since 10.0.2 I think, we have now a new Test Framework in order to achieve more testing class, as far as I seen it‚Äôs really much better &amp; easier than SysTestFramework.</p>
<p>The Acceptance test library (ATL) is an X++ test library that offers the following benefits:</p>
<ul>
<li>
<p>It lets you create consistent test data.</p>
</li>
<li>
<p>It increases the readability of test code.</p>
</li>
<li>
<p>It provides improved discoverability of the methods that are used to create test data.</p>
</li>
<li>
<p>It hides the complexity of setting up prerequisites.</p>
</li>
<li>
<p>It supports high performance of test cases.</p>
</li>
</ul>
<p>Since I don‚Äôt want to rewrite all the Microsoft documentation and since it‚Äôs very well good documented, I highly recommend to have a look on it for developer.</p>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/perf-test/acceptance-test-library?WT.mc_id=BA-MVP-5003744" target="_blank" rel="noopener noreferrer">Learn more on ATL Framework</a></p>
<hr>
<h2 id="4-change-your-build--release-pipeline-in-azuredevops"><strong>4/ Change your BUILD &amp; Release pipeline in AzureDevOps</strong></h2>
<p>Now go to your AzureDevOps project, on the BUILD pipeline part. We will change the pipeline to include automate testing from SysTest Framework or ATL that we saw before.</p>
<p>On my side, I‚Äôve got a BUILD Main, only one. So of course, change &amp; adapt on your needs. Enable the 3 tasks at the end : <strong>Test Setup, Execute and End Tests.</strong></p>
<p></p>
<p>![Screenshot 2020-04-20_23-22-37-415.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-22-37-415.png)</p>
<p>For these 3 steps, don‚Äôt need to change large setup, Just use Task version 2.* and the only change is on the Variable part, to include the SysTestCategory that I had before, remember :) also added my main model.dll that host all my test class.</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p>![Screenshot 2020-04-20_23-22-51-535.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-22-51-535.png)![Screenshot 2020-04-20_23-23-24-739.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-23-24-739.png)![Screenshot 2020-04-20_23-23-38-414.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-23-38-414.png)![Screenshot 2020-04-20_23-24-24-388.png](./Automate your tests for Dynamics 365 Finance and Operations ‚Äî PowerAzure365_files/Screenshot+2020-04-20_23-24-24-388.png)</p>
<p>So here we are you are a Pro of Automate testing in Dynamics 365 Finance and Operations.</p>
<p>To conclude, we can also use PowerAutomate with AzureDevops : doing a morning a test plan report email ? Also create an adaptive card for deployment approval on release pipeline after seeing the test report ?</p>
<p>Well as you can see, you have now all in your hands features to achieve a lot automate testing.</p>
]]></description>
</item><item>
    <title>Testing Dynamics 365 Finance Database Movement API with Postman</title>
    <link>https://nuxulu.com/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/</link>
    <pubDate>Mon, 17 Aug 2020 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman.png" referrerpolicy="no-referrer">
            </div><p>Microsoft provides a versioned set of capabilities that you can currently use to copy databases between environments, and to list and download database backups.</p>
<p>what you can do with Database movement API so far:</p>
<ul>
<li>List database backups</li>
<li>Create database refresh</li>
<li>Create a database export</li>
<li>Get operation activity status</li>
</ul>
<p>More supported actions will be added in later releases.</p>
<p>The endpoint uses <strong>impersonation authentication</strong> base, please follow to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/database/api/dbmovement-api-authentication##register-a-new-application-by-using-the-azure-portal" target="_blank" rel="noopener noreferrer">register a new application by using the Azure portal</a></p>
<h2 id="1-postman-environment-setup">1. Postman environment setup</h2>
<blockquote>
<p>Open Postman -&gt; manage environments -&gt; Add</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text">tenant_id: {tenant_id get from AAD}
client_id: {get from the application that you have created before}
client_secret: {get from the application that you have created before}
username: {LCS user name with owner permission}
password: {LCS user password}
grant_type: password
resource: https://lcsapi.lcs.dynamics.com
projectId: {Your LCS Project ID}
bearerToken: {this will be populated when authentication}
</code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_1.png" title="Postman environment setup" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_1.png" data-sub-html="<h2>Postman environment setup</h2><p>Postman environment setup</p>">
        
    </a><figcaption class="image-caption">Postman environment setup</figcaption>
    </figure></p>
<h2 id="2-authentication-with-postman">2. Authentication with Postman</h2>
<p>You get the authentication bearer with <strong>POST</strong> method and <a href="https://login.microsoftonline.com/%7b%7btenant_id%7d%7d/oauth2/token" target="_blank" rel="noopener noreferrer">https://login.microsoftonline.com/{{tenant_id}}/oauth2/token</a> endpoint.</p>
<p>In the request Body, please do following:</p>
<p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_2.png" title="Authentication with Postman" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_2.png" data-sub-html="<h2>Authentication with Postman</h2><p>Authentication with Postman</p>">
        
    </a><figcaption class="image-caption">Authentication with Postman</figcaption>
    </figure></p>
<p>Click <strong>Send</strong>, and you will have access token to start using the API.</p>
<p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_3.png" title="token" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_3.png" data-sub-html="<h2>token</h2><p>token</p>">
        
    </a><figcaption class="image-caption">token</figcaption>
    </figure></p>
<h2 id="3-cosnume-the-apis-with-postman">3. Cosnume the APIs with Postman</h2>
<p>To call the Database Movement API, you attach the access token as a bearer token to the authorization header in your HTTP request. So in Postman, modify the headers tab like bellow</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Authorization:Bearer {{bearerToken}}
x-ms-version:&#39;2017-09-15&#39;
Content-Type:application/json
</code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_4.png" title="Cosnume" data-thumbnail="/2020-08-17-testing-dynamics-365-finance-database-movement-api-with-postman/testing-dynamics-365-finance-database-movement-api-with-postman_4.png" data-sub-html="<h2>Cosnume</h2><p>Cosnume</p>">
        
    </a><figcaption class="image-caption">Cosnume</figcaption>
    </figure></p>
<h3 id="31-list-database-backups">3.1. List database backups</h3>
<p><code>GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/databases/project/{{projectId}}</code></p>
<p>And we‚Äôll get a JSON with a list of the DB backups on our LCS Asset Library:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;DatabaseAssets&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
            <span class="nt">&#34;Id&#34;</span><span class="p">:</span> <span class="s2">&#34;12314234-862e-4a6a-800d-0c64e982284a&#34;</span><span class="p">,</span>
            <span class="nt">&#34;ProjectId&#34;</span><span class="p">:</span> <span class="mi">123123</span><span class="p">,</span>
            <span class="nt">&#34;OrganizationId&#34;</span><span class="p">:</span> <span class="mi">123124</span><span class="p">,</span>
            <span class="nt">&#34;Name&#34;</span><span class="p">:</span> <span class="s2">&#34;backup&#34;</span><span class="p">,</span>
            <span class="nt">&#34;FileName&#34;</span><span class="p">:</span> <span class="s2">&#34;ATbackup.bacpac&#34;</span><span class="p">,</span>
            <span class="nt">&#34;FileDescription&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
            <span class="nt">&#34;FileLocation&#34;</span><span class="p">:</span> <span class="s2">&#34;https://uswedpl1catalog.blob.core.windows.net/product-ax7productname/******&#34;</span><span class="p">,</span>
            <span class="nt">&#34;ModifiedDateTime&#34;</span><span class="p">:</span> <span class="s2">&#34;2020-08-17T09:52:50.077&#34;</span><span class="p">,</span>
            <span class="nt">&#34;CreatedDateTime&#34;</span><span class="p">:</span> <span class="s2">&#34;2020-08-17T09:52:45.297&#34;</span><span class="p">,</span>
            <span class="nt">&#34;CreatedByName&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
            <span class="nt">&#34;ModifiedByName&#34;</span><span class="p">:</span> <span class="kc">null</span>
        <span class="p">}</span>
    <span class="p">],</span>
    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;5053e0dd-66e3-4832-a9f8-1e2d621562e1&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="32-create-database-refresh">3.2. Create database refresh</h3>
<p><code>POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/refresh/project/{projectId}/source/{sourceEnvironmentId}/target/{targetEnvironmentId}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="33-create-a-database-export">3.3. Create a database export</h3>
<p><code>POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/export/project/{projectId}/environment/{environmentId}/backupName/{backupName}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="34-get-operation-activity-status">3.4. Get operation activity status</h3>
<p><code>GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/fetchstatus/project/{projectId}/environment/{environmentId}/operationactivity/{operationactivityId}</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;IsSuccess&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nt">&#34;OperationActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;6a90b45f-1764-4077-b924-3f4671540237&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ErrorMessage&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nt">&#34;VersionEOL&#34;</span><span class="p">:</span> <span class="s2">&#34;9999-12-31T23:59:59.9999999&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ProjectId&#34;</span><span class="p">:</span> <span class="s2">&#34;12345&#34;</span><span class="p">,</span>
    <span class="nt">&#34;EnvironmentId&#34;</span><span class="p">:</span> <span class="s2">&#34;5362377c-bc37-4f92-b30e-fe0c1e664cc0&#34;</span><span class="p">,</span>
    <span class="nt">&#34;ActivityId&#34;</span><span class="p">:</span> <span class="s2">&#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6&#34;</span><span class="p">,</span>
    <span class="nt">&#34;CompletionDate&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nt">&#34;OperationStatus&#34;</span><span class="p">:</span> <span class="s2">&#34;InProgress&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
