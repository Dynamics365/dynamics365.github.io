<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Dynamics 365 for finance and operations - Tag - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/tags/dynamics-365-for-finance-and-operations/</link>
        <description>Dynamics 365 for finance and operations - Tag - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com</managingEditor>
            <webMaster>luan52@outlook.com</webMaster><lastBuildDate>Mon, 07 Aug 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/dynamics-365-for-finance-and-operations/" rel="self" type="application/rss+xml" /><item>
    <title>Exception Handling in Dynamics 365 For Finance and Operation</title>
    <link>https://nuxulu.com/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</link>
    <pubDate>Mon, 07 Aug 2017 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://nuxulu.com/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</guid>
    <description><![CDATA[<p>When we write a code, or make a customization to Dynamics 365 For Operation which is using X++ should make use of Exception Handling to provide some context for the message or a different more useful message. In this article, I will be exploring how I can come up with a uniform way to catch multiple types of exception that can be raised in X++.</p>
<h3 id="1-exception-type">1. Exception type</h3>
<p>There are many several types of exception and the type differs depending on what caused the error. Much of exception types are determined by the kernel and are not normally thrown by application code. All <strong>exception types</strong>, however, can be caught, and it is the developers’ responsibility to decide which exceptions need to be handled.</p>
<p>The exception type is identified using the system-based enumeration called an exception. Because it is a system Enum, it cannot be modified, so users cannot add new exception types.</p>
<p>The following table shows the exception literals that are the values of the Exception enumeration.</p>
<figure class='center '>
  <a href="/imagesposts/2017-08-07_10h00_37.png#center"></a>
</figure>]]></description>
</item><item>
    <title>Management reporter in new AX, Dynamics 365 For Operation</title>
    <link>https://nuxulu.com/2017-07-24-management-reporter-in-dynamics-365-for-operation/</link>
    <pubDate>Mon, 24 Jul 2017 01:33:44 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://nuxulu.com/2017-07-24-management-reporter-in-dynamics-365-for-operation/</guid>
    <description><![CDATA[<h3 id="1-overview-management-reporter-in-new-ax">1. Overview Management Reporter in New AX</h3>
<p>Management Reporter is now <strong>Financial reports</strong>.</p>
<p>As you know Management Reporter is a real-time financial reporting application that is designed to empower information workers to quickly and easily create, generate, secure, and publish financial statements, such as Profit and Loss statements, balance sheets, and cash flow reports.</p>
<p>In Dynamics 365 For Operation, I can access these reports within AX means directly <em>from the web client in the browser</em>. This feature allows me to run financial statements, such as a balance sheet and income statements.</p>
<p>The <strong>22 default</strong> reports that are included, default financial reports including income statements, balance sheet reports, cash flow statements, and general ledger reports, which can be modified depending on your company’s requirements.</p>
<p>Here is the list</p>
<figure class='center '>
  <a href="/imagesposts/Financial_reports.png#center"></a>
</figure>]]></description>
</item></channel>
</rss>
