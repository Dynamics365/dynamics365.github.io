<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>operator - Tag - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/tags/operator/</link>
        <description>operator - Tag - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 24 Nov 2016 08:22:39 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/operator/" rel="self" type="application/rss+xml" /><item>
    <title>The Type system of Dynamics AX 2012</title>
    <link>https://nuxulu.com/2016-11-25-the-type-system-of-dynamics-ax-2012/</link>
    <pubDate>Thu, 24 Nov 2016 08:22:39 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2016-11-25-the-type-system-of-dynamics-ax-2012/</guid>
    <description><![CDATA[<p>The Microsoft Dynamics AX runtime manages the storage of <em>value type</em> data on the <strong>call stack</strong> and <em>reference type objects</em> on the <strong>memory heap</strong>.</p>
<p><strong>The call stack</strong> is the memory structure that holds data about the active methods called during program execution. <strong>The memory heap</strong> is the memory area that allocates storage for objects that are destroyed automatically by the Microsoft Dynamics AX run-time.</p>
<h2 id="value-types" class="headerLink"><a href="#value-types" class="header-mark"></a>Value types</h2><p>Value types include the built-in <code>primitive types, extended data types, enumeration types, and built-in collection types</code>.</p>
<ul>
<li><strong>The primitive types</strong> are boolean, int, int64, real, date, utcDateTime, timeofday, str, and guid.</li>
<li><strong>The extended data types</strong> are specialized primitive types and specialized base enumerations.</li>
<li><strong>The enumeration types</strong> are base enumerations and extended data types.</li>
<li><strong>The collection types</strong> are the built-in array and container types.</li>
</ul>]]></description>
</item><item>
    <title>DefaultValue ComboBox in Dynamics AX with X&#43;&#43;</title>
    <link>https://nuxulu.com/2015-11-03-defaultvale-combobox-in-x/</link>
    <pubDate>Fri, 13 Nov 2015 06:57:46 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2015-11-03-defaultvale-combobox-in-x/</guid>
    <description><![CDATA[Beside modify metadata on form properties, as best practice we can use code like below to assign default value for combobox.
 You can use this code in the form&rsquo;s init method after super():  {% highlight csharp %} ComboBoxName.selection(ComboBoxName::DefaultValue); {% endhighlight %}
 If this is a table field we should you best practice overriding the initValue method in the table:  {% highlight csharp %} this.ComboBoxName = ComboBoxName::DefaultValue; {% endhighlight %}]]></description>
</item><item>
    <title>HOW TO USE &#34;LIKE&#34; OPERATOR IN QueryBuildRange</title>
    <link>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</link>
    <pubDate>Fri, 13 Nov 2015 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</guid>
    <description><![CDATA[To make something as the LIKE operator in a query, just assign a value to the QueryRange including a wildcard.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  static void QueryBuildRange_Sample(Args _args) { Query query = new Query(); QueryRun queryRun; QueryBuildDataSource qbds; QueryBuildRange queryRange; CustTable custTable; qbds.addDataSource(tableNum(CustTable)); queryRange = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange.value(&#34;axd*&#34;); queryRun = new QueryRun(query); while(queryRun.]]></description>
</item></channel>
</rss>
