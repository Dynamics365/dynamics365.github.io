<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>X&#43;&#43; on Dynamics 365 Finance Operations &amp; Power Platform</title>
    <link>https://nuxulu.com/tags/x&#43;&#43;/</link>
    <description>Recent content in X&#43;&#43; on Dynamics 365 Finance Operations &amp; Power Platform</description>
    <image>
      <url>https://nuxulu.com/47</url>
      <link>https://nuxulu.com/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 07 Aug 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/x++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exception Handling in Dynamics 365 For Finance and Operation</title>
      <link>https://nuxulu.com/posts/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-08-07-exception-handling-in-dynamics-365-for-finance-and-operation/</guid>
      <description>&lt;p&gt;When we write a code, or make a customization to Dynamics 365 For Operation which is using X++ should make use of Exception Handling to provide some context for the message or a different more useful message. In this article, I will be exploring how I can come up with a uniform way to catch multiple types of exception that can be raised in X++.&lt;/p&gt;
&lt;h3 id=&#34;1-exception-type&#34;&gt;1. Exception type&lt;/h3&gt;
&lt;p&gt;There are many several types of exception and the type differs depending on what caused the error. Much of exception types are determined by the kernel and are not normally thrown by application code. All &lt;strong&gt;exception types&lt;/strong&gt;, however, can be caught, and it is the developersâ€™ responsibility to decide which exceptions need to be handled.&lt;/p&gt;
&lt;p&gt;The exception type is identified using the system-based enumeration called an exception. Because it is a system Enum, it cannot be modified, so users cannot add new exception types.&lt;/p&gt;
&lt;p&gt;The following table shows the exception literals that are the values of the Exception enumeration.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>How to create main menu in Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2017-03-29-how-to-create-main-menu-in-dynamics-ax-2012/</link>
      <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-03-29-how-to-create-main-menu-in-dynamics-ax-2012/</guid>
      <description>&lt;p&gt;All main entry points to the UI and reports are access though the menu structure. This is presented in three ways: the left-hand navigation pane, the content area, and the navigation bar (at the top of the client). The menu design is controlled from the Menus node in the AOT.&lt;/p&gt;
&lt;p&gt;Each module will have a menu, which is created by adding a menu reference (or shortcut) to the main menu:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;This matches the list of modules shown in the client&amp;rsquo;s left-hand navigation pane.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Number sequence farmework overview in Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;For this demo, I will create New module along with NumberSequence, about creating Number Sequence &lt;em&gt;without&lt;/em&gt; module you also use same steps just leave some steps base on Design picture above.&lt;/p&gt;
&lt;h2 id=&#34;etd&#34;&gt;ETD&lt;/h2&gt;
&lt;p&gt;Create ETD &lt;code&gt;ContosoId&lt;/code&gt; extends &lt;code&gt;num&lt;/code&gt; datatype.&lt;/p&gt;
&lt;h2 id=&#34;table&#34;&gt;Table&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;Contoso&lt;/code&gt; Table with &lt;code&gt;ContosoId&lt;/code&gt; field.&lt;/p&gt;
&lt;h2 id=&#34;enum&#34;&gt;Enum&lt;/h2&gt;
&lt;p&gt;Create a new enum value &lt;code&gt;Contoso&lt;/code&gt; in BaseEnum &lt;code&gt;NumberSeqModule&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This value will be used to link number sequence to the module and to restrict displayed number sequence by module in Form.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
