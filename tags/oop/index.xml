<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>OOP - Tag - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/tags/oop/</link>
        <description>OOP - Tag - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com</managingEditor>
            <webMaster>luan52@outlook.com</webMaster><lastBuildDate>Tue, 11 Apr 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/oop/" rel="self" type="application/rss+xml" /><item>
    <title>Basic C# OOP Concept</title>
    <link>https://nuxulu.com/2017-04-10-oops_concept/</link>
    <pubDate>Tue, 11 Apr 2017 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://nuxulu.com/2017-04-10-oops_concept/</guid>
    <description><![CDATA[<blockquote>
<p>There are many explanations that we can find in internet about C# OOP, but here in my article I will give a very simple example. In this article, I will use a “House (like the houses we live in) “as a real-time example for easy understanding of OOP Concept in C#.</p>
</blockquote>
<h3 id="1-class">1. Class</h3>
<p><strong>Class</strong> is a like a Blueprint.</p>
<p>Blueprint is outline drawing of our actual plan. For example if we plan to build our new house, the Engineer will explain our new house plan with a blue print as shown in the image below. Once we finalized the plan the engineer will start building the house with same plan.</p>
<p>Same like blueprint class is an outline of program. Using the class we can write our own method and declare the variables and using the objects we can access the class Method and Variables. The class will be complete with Variables, Methods and Objects.</p>
<figure class='center '>
  <a href="/imagesposts/Blueprint.jpg"></a>
</figure>]]></description>
</item></channel>
</rss>
