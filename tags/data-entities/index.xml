<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>Data Entities - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</title>
        <link>https://nuxulu.com/tags/data-entities/</link>
        <description>Data Entities - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor>
            <webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Sun, 02 May 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/data-entities/" rel="self" type="application/rss+xml" /><item>
    <title>Develop custom Data Entities for Dual-write</title>
    <link>https://nuxulu.com/2021-05-02-develop-custom-data-entities-for-dual-write/</link>
    <pubDate>Sun, 02 May 2021 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Max Nguyen</dc:creator><guid>https://nuxulu.com/2021-05-02-develop-custom-data-entities-for-dual-write/</guid>
    <description><![CDATA[<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dual-write</a> has been around for almost two years now. It’s one of the ways of <strong>integrating Dynamics 365 Finance and Operations and <a href="https://docs.microsoft.com/en-us/powerapps/maker/data-platform?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dataverse</a></strong> along with <a href="https://ariste.info/en/2020/09/dynamics-365-odata-cds-virtual-entities/" target="_blank" rel="noopener noreferrer">Virtual Entities</a>.</p>
<p>The standard solution comes with many <strong>out-of-the-box entities</strong> available to synchronize. This has been one of the great improvements since Dual-write was made available in preview, when <a href="https://jatomas.com/" target="_blank" rel="noopener noreferrer">Juanan</a> and I <a href="https://www.youtube.com/watch?v=z_dLGDF7Ci0" target="_blank" rel="noopener noreferrer">demoed it in the 2019 Dynamics Saturday in Madrid</a>.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW-1024x1024.png" title="Dual write" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW-1024x1024.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 1</h2><p>Dual write</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 1</figcaption>
    </figure></p>
<p>This is how Dual write really works</p>
<p>But what if we need to develop a <strong>new custom Data Entity in MSDyn365FO</strong> and use it in Dual-write? It’s easy but there’s some things we need to remember when doing it.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writedual-writedual-write"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#dual-write" target="_blank" rel="noopener noreferrer"></a>Dual-write</h2>
<p><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Dual-write</a> is a bidirectional integration that will synchronously write in Dataverse when data is created, updated or deleted in MSDyn365FO in near-real-time. On the Finance and Operations side it uses data entities to export data to Dataverse.</p>
<p>Right now there’s a set of several OOB entities that come ready to be synchronized, and thanks to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/initial-sync-guidance?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Initial Sync</a> we can populate data in Dataverse choosing FnO as the source when starting the sync, or also choose Dataverse as the source.</p>
<p>If you want to learn more about Dual-write you can:</p>
<ul>
<li>Read <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/dual-write-home-page?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">the docs</a> which have plenty of information. <strong>Read the docs</strong>. Always.</li>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/connection-setup?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Guidance for Dual-Write setup</a></li>
<li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/requirements-and-prerequisites?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">System requirements and prerequisites</a></li>
<li>Watch some of <a href="https://daxture.blogspot.com/" target="_blank" rel="noopener noreferrer">Faisal Fareed</a>‘s sessions about Dual-write: <a href="https://dynamicscon.com/" target="_blank" rel="noopener noreferrer">DynamicsCon</a> 2020: <a href="https://www.youtube.com/watch?v=DbyLLQswM5o" target="_blank" rel="noopener noreferrer">The Power of Dual-write</a> or Scottish Summit 2021: <a href="https://www.youtube.com/watch?v=O2iuM6dWklI" target="_blank" rel="noopener noreferrer">D365 FO integration with Dataverse – Dual write, Virtual Entities, OR Data Integrator</a>. He’s got some more which you can find on Youtube.</li>
</ul>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-the-data-entitycreate-the-data-entity"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-the-data-entity" target="_blank" rel="noopener noreferrer"></a>Create the Data-entity</h2>
<p>In Visual Studio we need to create the entity from our table. I’ve created a new table called AASBookTable with just four fields: BookId, Author, Name and ISBN. Its primary key is the BookId field which is also its <strong>alternate key</strong> and will be used as natural key in the entity.</p>
<p>Next, we create the data entity and make sure we’re marking the “<strong>Enable data management capabilities</strong>” checkbox:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW1.png" title="Dynamics 365 Finance and Operations Data entity wizard" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW1.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 2</h2><p>Dynamics 365 Finance and Operations Data entity wizard</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 2</figcaption>
    </figure></p>
<p>Enable data management capabilities must be checked</p>
<p>If the entity doesn’t have data management enabled it won’t be displayed in the list in the Dual-write tables setup.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-a-table-in-dataversecreate-a-table-in-dataverse"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-a-table-in-dataverse" target="_blank" rel="noopener noreferrer"></a>Create a table in Dataverse</h2>
<p>Now we need to create a table in our Dataverse environment. This table must have at least some of the fields we want to synchronize to Dataverse <strong>AND</strong> a company field. <strong>The <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/company-data?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">company</a> concept doesn’t exist in Dataverse/CRM</strong> but thanks to the OOB mappings and <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/initial-sync-guidance?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">Initial Sync</a> we can solve this with just a few clicks and will have a company table in Dataverse with all our FnO legal entities.</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW2.png" title="Company field related to table company" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW2.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 3</h2><p>Company field related to table company</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 3</figcaption>
    </figure></p>
<p>Company field related to table company</p>
<p>Following my example I’ve created a table with the same four fields and a company field with the <strong>data type Lookup</strong> and its related table Company, where the FnO legal entities are synchronized.</p>
<p>As I said, if we don’t create this field we won-t be able to setup Dual-write for this table.</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writecreate-table-mapcreate-table-map"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#create-table-map" target="_blank" rel="noopener noreferrer"></a>Create table map</h2>
<p>Our table and data entity are ready, and now <strong>we need to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/enable-entity-map?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">create a mapping</a> between them</strong> in the Dual-write workspace in FnO. Click the “Add table map” button:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW3.png" title="Dynamics 365 Dual-write add table map" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW3.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 4</h2><p>Dynamics 365 Dual-write add table map</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 4</figcaption>
    </figure></p>
<p>Dynamics 365 Dual-write add table map</p>
<p>A new dialog will open and we need to select the FnO entity and the Dataverse table:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW4-edited.png" title="Entity map" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW4-edited.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 5</h2><p>Entity map</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 5</figcaption>
    </figure></p>
<p>Entity map</p>
<p>Select the entity and table we’ve created and click save. Then we can define the field mapping:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW13-1024x629.png" title="Dynamics 365 Dual-write field maps" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW13-1024x629.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 6</h2><p>Dynamics 365 Dual-write field maps</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 6</figcaption>
    </figure></p>
<p>Dynamics 365 Dual-write field maps</p>
<p>Because I’ve created both it’s clear what to map. And after doing this we can click save and it’s done, right? No! <strong>WRONG</strong>! If we do just this we’ll get an error, this error:</p>
<blockquote>
<p>Project validation failed. SourceEntitySchema: Books has a primaryCompanyField set to DataAreaId and DestinationEntitySchema: cr008_bookses doesn’t have primary company field set. Dual-write only supports mapping between cross-company entities or company-specific entities from both sides..keys are missing for either AX or CRM.keys are missing for either CRM or AX</p>
</blockquote>
<p>Or we can also get an error regarding a missing integration key for the company field. In the end both are caused because <strong>we’ve missed defining the integration key</strong> for this new Dataverse table:</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writeintegration-keyintegration-key"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#integration-key" target="_blank" rel="noopener noreferrer"></a>Integration key</h2>
<p>Go back to the main Dual-write form and click on the “Integration key” button:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW7.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW7.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 7</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 7</figcaption>
    </figure></p>
<p>Dual-write integration key</p>
<p>The integration key will be <strong>the same as the FnO data entity key, plus the company</strong> if your data entity has a company context. Remember that when we create indexes in FnO the DataAreaId field isn’t included in the field, but it is in the SQL Server index along the partition field.</p>
<p>The integration key for our custom Dual-write mapping will look like this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW11.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW11.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 8</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 8</figcaption>
    </figure></p>
<p>Dual/write integration key</p>
<p>Remember we’ve added the company field to our Dataverse table? You can see in the image above that the field includes the relation to the Company table in Dataverse. We won’t be able to save the field mapping if we create the key using our Dataverse table’s company field instead of its Company table relation, like this:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW9.png" title="Dual/write integration key" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW9.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 9</h2><p>Dual/write integration key</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 9</figcaption>
    </figure></p>
<p>Dual/write integration key</p>
<p>See the difference? In the first image the field reads <em>c008_company.cdm_companycode</em> while in the second one it’s <em>c008_company</em>. If we set the integration key using the field in our table instead of the related table and save the fields’ mapping we’ll get an error saying the company is missing in the key because it’s expecting the relation!</p>
<h2 id="httpsaristeinfoen202103develop-custom-data-entities-dual-writeactionaction"><a href="https://ariste.info/en/2021/03/develop-custom-data-entities-dual-write/#action" target="_blank" rel="noopener noreferrer"></a>Action!</h2>
<p>The table and field mappings are ready, just click run and go create a new book in the FnO form:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW14.png" title="Finance and Operations form" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW14.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 10</h2><p>Finance and Operations form</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 10</figcaption>
    </figure></p>
<p>Finance and Operations form</p>
<p>Then we go to our Dataverse table and check its data…</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW15.png" title="Dataverse table data" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW15.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 11</h2><p>Dataverse table data</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 11</figcaption>
    </figure></p>
<p>Dataverse table data</p>
<p>It’s there! And of course it’s working in both directions. If I create a record in Dataverse it’ll be created in FnO too. I’ll use the Excel add-in to add a new book:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW16.png" title="Dataverse Excel add-in" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW16.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 12</h2><p>Dataverse Excel add-in</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 12</figcaption>
    </figure></p>
<p>Dataverse Excel add-in</p>
<p>And after refreshing the form in FnO we can see it there too:</p>
<p><figure><a class="lightgallery" href="https://static.ariste.info/wp-content/uploads/2021/03/DW17.png" title="Develop custom Data Entities for Dual-write 1" data-thumbnail="https://static.ariste.info/wp-content/uploads/2021/03/DW17.png" data-sub-html="<h2>Develop custom Data Entities for Dual-write 13</h2><p>Develop custom Data Entities for Dual-write 1</p>">
        
    </a><figcaption class="image-caption">Develop custom Data Entities for Dual-write 13</figcaption>
    </figure></p>
<p>This is a really simple example of how we can create a custom table, use it in a data entity and then use this entity in our dual-write setup. It’s something that can be easily done but we need to <strong>remember the “company thing”</strong>, otherwise this will never work!</p>
<p>Dual-write is even easier to configure nowadays thanks to <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/dual-write/lcs-setup?WT.mc_id=BA-MVP-5003976" target="_blank" rel="noopener noreferrer">LCS allowing us to create and link a new Dataverse environment when we deploy a new Finance and Operations environment</a>.</p>
]]></description>
</item><item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 2)</title>
    <link>https://nuxulu.com/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</link>
    <pubDate>Sun, 28 Jun 2020 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Kome Hoang</dc:creator><guid>https://nuxulu.com/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</guid>
    <description><![CDATA[<h3 id="1-example-two-a-new-forms-response-is-submitted-then-flow-promts-for-an-approval-request-before-a-new-record-is-created-in-vendors-table">1. Example two: A new Forms response is submitted then Flow promts for an approval request before a new record is created in Vendors table</h3>
<p>In the last example, we created a simple Flow to create a new Vendor Account from submitted Forms responses. The process was made as simple as it could be: When a new Forms response if submitted, a new Vendor Account will be created on D365FO client.</p>
<p>To make the process more reliable, we will now add an approval step to the Flow. It means before a new Vendor Account is created, the user will have the right to <code>Approve</code> or <code>Reject</code> the request.</p>
<h4 id="11-step-1-add-a-new-step-to-the-flow">1.1. <strong>Step 1: Add a new step to the Flow</strong></h4>
<p>The flow that we have is like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-1-Flow-1.png" title="Flow step 1" data-thumbnail="/imagesposts/E2-1-Flow-1.png" data-sub-html="<h2>The old flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">The old flow</figcaption>
    </figure></p>
<p>We will add a step right before the new record is created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-2-Flow-2.png" title="Flow step 2" data-thumbnail="/imagesposts/E2-2-Flow-2.png" data-sub-html="<h2>Add a new step</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Add a new step</figcaption>
    </figure></p>
<p>We will go with <code>Approval &gt; Start and wait for an approval</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-3-Flow-3.png" title="Flow step 3" data-thumbnail="/imagesposts/E2-3-Flow-3.png" data-sub-html="<h2>Add approval request</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Add approval request</figcaption>
    </figure></p>
<p>This step will offer several types of approval in which the most common ones are <code>All users must approve</code> or <code>First approve/reject from any user</code>. To make it simple, we will go with <code>First approval</code> because in this example, we will have only one user.</p>
<p>As straightforward as they seem, the fields explain themselves. We will start an approval request, set a title for it and assign it to a user (only users in the same organisation as you).</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-4-Flow-4.png" title="Flow step 4" data-thumbnail="/imagesposts/E2-4-Flow-4.png" data-sub-html="<h2>Single approval</h2><p>Flow step 4</p>">
        
    </a><figcaption class="image-caption">Single approval</figcaption>
    </figure></p>
<p><em><strong>Note 2-1</strong></em></p>
<blockquote>
<p><em>Almost all fields including <code>Title</code>, <code>Details</code>, etc. are fully customisable by using <code>Dynamic content</code>.</em></p>
</blockquote>
<p>The flow now will look like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-5-Flow-5.png" title="Flow step 5" data-thumbnail="/imagesposts/E2-5-Flow-5.png" data-sub-html="<h2>Revised flow</h2><p>Flow step 5</p>">
        
    </a><figcaption class="image-caption">Revised flow</figcaption>
    </figure></p>
<h4 id="12-step-2-testing-out">1.2. <strong>Step 2: Testing out</strong></h4>
<p>Trigger a <code>test</code> run of the flow.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-6-Flow-6.png" title="Flow step 6" data-thumbnail="/imagesposts/E2-6-Flow-6.png" data-sub-html="<h2>Test run</h2><p>Flow step 6</p>">
        
    </a><figcaption class="image-caption">Test run</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-7-Flow-7.png" title="Flow step 7" data-thumbnail="/imagesposts/E2-7-Flow-7.png" data-sub-html="<h2>Test run triggered</h2><p>Flow step 7</p>">
        
    </a><figcaption class="image-caption">Test run triggered</figcaption>
    </figure></p>
<p>The <code>test</code> run is ready, waiting for the input from <code>MS Forms</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-8-Flow-8.png" title="Flow step 8" data-thumbnail="/imagesposts/E2-8-Flow-8.png" data-sub-html="<h2>Test run ready</h2><p>Flow step 8</p>">
        
    </a><figcaption class="image-caption">Test run ready</figcaption>
    </figure></p>
<p>Submit a new response.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-9-Flow-9.png" title="Flow step 9" data-thumbnail="/imagesposts/E2-9-Flow-9.png" data-sub-html="<h2>Form new response</h2><p>Flow step 9</p>">
        
    </a><figcaption class="image-caption">Form new response</figcaption>
    </figure></p>
<p>The flow will run. The process will show that an approval is being waited from the assigned user.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-10-Flow-10.png" title="Flow step 10" data-thumbnail="/imagesposts/E2-10-Flow-10.png" data-sub-html="<h2>Waiting for an approval</h2><p>Flow step 10</p>">
        
    </a><figcaption class="image-caption">Waiting for an approval</figcaption>
    </figure></p>
<p>An approval request will be sent to the mailbox of the assigned user. That user can check the request in <code>Office.com &gt; Outlook</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-11-Flow-11.png" title="Flow step 11" data-thumbnail="/imagesposts/E2-11-Flow-11.png" data-sub-html="<h2>Approval request</h2><p>Flow step 11</p>">
        
    </a><figcaption class="image-caption">Approval request</figcaption>
    </figure></p>
<p>Upon approval, the flow will finish its pending step and a new record will be created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E2-12-Flow-12.png" title="Flow step 12" data-thumbnail="/imagesposts/E2-12-Flow-12.png" data-sub-html="<h2>Flow finishes</h2><p>Flow step 12</p>">
        
    </a><figcaption class="image-caption">Flow finishes</figcaption>
    </figure></p>
<h3 id="2-example-three-from-the-created-record-in-vendors-table-add-related-records-in-other-tables">2. Example three: From the created record in Vendors table, add related records in other tables</h3>
<p>In the last example, we added an Approval step to the Flow which will allow users to give <code>Approve</code> or <code>Reject</code> action toward the request coming from the Form.</p>
<p>We can actually utilise the Flow one step further: To create additional records on different tables that might depend on the created record in VendTable.</p>
<p>To make it easier to understand, the process is like this:</p>
<ul>
<li>Create a new <code>Vendor Account</code> by using input from the Form.</li>
<li>Create a new <code>Bank Account</code> with the <code>Bank Account ID</code> exactly similar to the <code>Vendor Account</code>.</li>
<li>Add some contact details to the <code>Vendor Account</code>.</li>
</ul>
<p>Which entities should we target to? They are:</p>
<ul>
<li>For <code>Vendor Bank Account</code>: VendorBankAccounts</li>
<li>For <code>Vendor Contact Details</code>: PartyContacts</li>
</ul>
<p>You can play around in Visual Studio to get used to looking for an Entity that might fulfil the requirements of your intergration. Check out the next part of this article to get some quick tips into that.</p>
<p>Assuming that we now have a Flow as we configured in the last two examples, we can add some more steps like these underneath.</p>
<h4 id="21-step-1-add-a-new-step-to-add-a-new-record-to-vendorbankaccounts-and-partycontacts">2.1. <strong>Step 1: Add a new step to add a new record to VendorBankAccounts and PartyContacts</strong></h4>
<p>Given the case that we had a Vendor Account and Bank Account for that Vendor Account, the records would be like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-1-SSMSBank.png" title="SSMSBank" data-thumbnail="/imagesposts/E3-1-SSMSBank.png" data-sub-html="<h2>Relation in SSMS</h2><p>SSMSBank</p>">
        
    </a><figcaption class="image-caption">Relation in SSMS</figcaption>
    </figure></p>
<p>The relation should be: <code>VendTable.AccountNum</code> = <code>VendBankAccount.VendAccount</code></p>
<p>On the client, the information should be illustrated like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-2-VendBank1.png" title="VendBank1" data-thumbnail="/imagesposts/E3-2-VendBank1.png" data-sub-html="<h2>Vendor Bank Account</h2><p>VendBank1</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Account</figcaption>
    </figure></p>
<p>And, when checking the Bank Account details, we would find.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-3-VenkBank2.png" title="VendBank2" data-thumbnail="/imagesposts/E3-3-VenkBank2.png" data-sub-html="<h2>Vendor Bank Details</h2><p>VendBank2</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Details</figcaption>
    </figure></p>
<p>Now, to do so, we will add a new step right after the creation of VendTable record.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-4-Flow-1.png" title="VendBank3" data-thumbnail="/imagesposts/E3-4-Flow-1.png" data-sub-html="<h2>A new step</h2><p>VendBank3</p>">
        
    </a><figcaption class="image-caption">A new step</figcaption>
    </figure></p>
<ul>
<li><code>Instance</code> = <code>Environment URL</code> (same as any other steps)</li>
<li><code>Entity name</code> = <code>VendorBankAccounts</code> (check my post about good tips with Visual Studio to know how to find the Data Entity)</li>
<li><code>Supplier account</code> = <code>Supplier account</code> from last step</li>
<li><code>Bank account</code>= <code>Supplier account</code> from last step (Because I would like to have same Vendor Account and Bank Account)</li>
</ul>
<p>When saying &ldquo;from the last step&rdquo;, I meant this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-5-Flow-2.png" title="DynamicsContent" data-thumbnail="/imagesposts/E3-5-Flow-2.png" data-sub-html="<h2>Selecting Dynamic Content from former steps</h2><p>DynamicsContent</p>">
        
    </a><figcaption class="image-caption">Selecting Dynamic Content from former steps</figcaption>
    </figure></p>
<p>In MS FLow, any steps that are already executed will have outputs. We, in this step, are taking the <code>Supplier Account</code> from the last step of creating a new record in VendTable . This dynamic content was generated when the new record is created.</p>
<p><em><strong>Note 3-1</strong></em></p>
<blockquote>
<p><em>Keep in mind that if the last step is not &ldquo;Creating a new record&rdquo;, chance is that you cannot take the output from it because there&rsquo;s simply none.</em></p>
</blockquote>
<p>Click on <code>Show advanced options</code> so we can add more information to the Vendor Bank Account.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-6-Flow-3.png" title="AdvancedOptions" data-thumbnail="/imagesposts/E3-6-Flow-3.png" data-sub-html="<h2>Select Show advanced options</h2><p>AdvancedOptions</p>">
        
    </a><figcaption class="image-caption">Select Show advanced options</figcaption>
    </figure></p>
<p>Add more details to the bank account:</p>
<ul>
<li><code>Name</code> = <code>Bank account name</code> chosen from the Form using Dynamic Content (we don&rsquo;t want to copy any more values from the VendTable record - we actually will specify a bank account name when composing a response on the Form)</li>
<li><code>Bank account number</code> = <code>Bank account number</code> chosen from the Form using Dynamic Content</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E3-7-Flow-4.png" title="BankDetails" data-thumbnail="/imagesposts/E3-7-Flow-4.png" data-sub-html="<h2>Add more details to bank account</h2><p>BankDetails</p>">
        
    </a><figcaption class="image-caption">Add more details to bank account</figcaption>
    </figure></p>
<p>We finished with Vendor Bank Account.</p>
<p>We will do just the same with the record in PartyContacts.</p>
<ul>
<li><code>Party ID</code> = <code>Party ID</code> from VendTable record</li>
<li><code>Contact number/address</code> = <code>Email</code> from the Form (in this case, I would like to add an email address - it is totally up to you to opt to add phone number, Skype, Twitter and some other contact detail that D365FO is supporting)</li>
<li><code>Purpose</code> = I am &ldquo;hard-coding&rdquo; this <code>&quot;Business&quot;</code> (the supported purpose of Contact can be found on Vendor Card on D356FO client - this purpose should mainly be used when sending emails, i.e. D365FO want to send Purchase Order Confirmation to any email addresses with purpose <code>&quot;Invoice&quot;</code>)</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E3-8-Flow-5.png" title="VendorContact" data-thumbnail="/imagesposts/E3-8-Flow-5.png" data-sub-html="<h2>Vendor Contact Details</h2><p>VendorContact</p>">
        
    </a><figcaption class="image-caption">Vendor Contact Details</figcaption>
    </figure></p>
<h4 id="22-step-2-testing-out">2.2. <strong>Step 2: Testing out</strong></h4>
<p>Form input.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-9-Flow-6.png" title="FormInput1" data-thumbnail="/imagesposts/E3-9-Flow-6.png" data-sub-html="<h2>Company details</h2><p>FormInput1</p>">
        
    </a><figcaption class="image-caption">Company details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-10-Flow-7.png" title="FormInput2" data-thumbnail="/imagesposts/E3-10-Flow-7.png" data-sub-html="<h2>Bank details</h2><p>FormInput2</p>">
        
    </a><figcaption class="image-caption">Bank details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-11-Flow-8.png" title="FormInput3" data-thumbnail="/imagesposts/E3-11-Flow-8.png" data-sub-html="<h2>Contact details</h2><p>FormInput3</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p>Results on D365FO client.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-12-Flow-9.png" title="Result1" data-thumbnail="/imagesposts/E3-12-Flow-9.png" data-sub-html="<h2>Contact details</h2><p>Result1</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-13-Flow-10.png" title="Result2" data-thumbnail="/imagesposts/E3-13-Flow-10.png" data-sub-html="<h2>Bank account</h2><p>Result2</p>">
        
    </a><figcaption class="image-caption">Bank account</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/imagesposts/E3-14-Flow-11.png" title="Result3" data-thumbnail="/imagesposts/E3-14-Flow-11.png" data-sub-html="<h2>Bank account details</h2><p>Result3</p>">
        
    </a><figcaption class="image-caption">Bank account details</figcaption>
    </figure></p>
<p>There you go, simple integration between MS Forms, MS Automate and D365FO client. I am seeing that Microsoft is improving such by adding more actions on MS Automate. I believe we will be able to do many more jobs with the built-in utilities of MS Automate.</p>
<h3 id="3-how-to-determine-the-data-entity-that-should-be-used-in-the-power-automate">3. How to determine the Data Entity that should be used in the Power Automate</h3>
<p>The names of the target entity on <code>D365FO client</code> and being found in <code>Power Automate</code> should be different. You can always find them out by testing several import/export but, with the help of <code>Visual Studio</code>, you will be able to save a lot of time. This, however, requires a certain extent of experience working with data integration on D365FO.</p>
<p>Given the case that we would like to import data to All Vendors, we will start our search in <code>Workspaces &gt; Data Management &gt; Data Entities</code>. Apply several filters here and there, and looking for potential ones that we usually do, we will finally end our search at the VendVendorV2Entity</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-1-Entity-1.png" title="Data Entities" data-thumbnail="/imagesposts/VS-1-Entity-1.png" data-sub-html="<h2>Data Entities</h2><p>Data Entities</p>">
        
    </a><figcaption class="image-caption">Data Entities</figcaption>
    </figure></p>
<p>Making our way to <code>Visual Studio</code>, it is not a difficult task for us to find out the Entity.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-2-Entity-2.png" title="VendVendorV2Entity" data-thumbnail="/imagesposts/VS-2-Entity-2.png" data-sub-html="<h2>VendVendorV2Entity</h2><p>VendVendorV2Entity</p>">
        
    </a><figcaption class="image-caption">VendVendorV2Entity</figcaption>
    </figure></p>
<p>Check out the <code>Properties</code>, we will need to get details in the <code>Public</code> group.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-3-Properties.png" title="Properties" data-thumbnail="/imagesposts/VS-3-Properties.png" data-sub-html="<h2>Properties</h2><p>Properties</p>">
        
    </a><figcaption class="image-caption">Properties</figcaption>
    </figure></p>
<p>In <code>Public</code>:</p>
<ul>
<li>Is Public: If it is <code>Yes</code>, the entity can be found in Power Automate; otherwise, <code>No</code>.</li>
<li>Public Collection Name: <code>Entity name</code> on Power Automate.</li>
</ul>
<p>The information should be displayed here:</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-12-Flow-10.png" title="Info on Automate" data-thumbnail="/imagesposts/E1-12-Flow-10.png" data-sub-html="<h2>Info on Automate</h2><p>Info on Automate</p>">
        
    </a><figcaption class="image-caption">Info on Automate</figcaption>
    </figure></p>
<p>Furthermore, by checking the <code>Entity</code>&rsquo;s fields, we can get the information of mapping between the <code>Entity</code> and the physical table <code>VendTable</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/VS-4-EntityFields.png" title="Entity fields" data-thumbnail="/imagesposts/VS-4-EntityFields.png" data-sub-html="<h2>Entity fields</h2><p>Entity fields</p>">
        
    </a><figcaption class="image-caption">Entity fields</figcaption>
    </figure></p>
<p>Give yourself some time to play around between <code>MS Forms</code>, <code>MS Automate</code> and <code>Visual Studio</code>. You will finally see the relations between them.</p>
]]></description>
</item><item>
    <title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 1)</title>
    <link>https://nuxulu.com/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</link>
    <pubDate>Sun, 24 May 2020 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Kome Hoang</dc:creator><guid>https://nuxulu.com/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</guid>
    <description><![CDATA[<p><em>With any D365FO users, Data Management workspace and Data Entities should have become one of the most used and well-known tools in the system. We all agree how powerful such integration framework is, especially when it comes to a large number of records that we would need to import into different tables.</em></p>
<p><em>The classic method that we have been utilizing is to include all source data in a single (or multiple, much depending on the purpose and order of data integration) Excel sheet, trigger an import execution, pass any validation layers that present and ultimately have the data available on D365FO. Now, I would like to propose another method that might come useful in some circumstances: Using Microsoft Forms.</em></p>
<p><figure><a class="lightgallery" href="/imagesposts/Introduction.png" title="Introduction" data-thumbnail="/imagesposts/Introduction.png" data-sub-html="<h2>The trio</h2><p>Introduction</p>">
        
    </a><figcaption class="image-caption">The trio</figcaption>
    </figure></p>
<h2 id="when">When</h2>
<p>This method should be at its finest when you are planning to outsource the input to any external users.</p>
<p>Imagine you are a company who is using D365FO to leverage your daily work. You now want to add many local vendors to your system in form of new Vendor Accounts. It is fine to collect all information from them (i.e. Vendor Company’s name, their address, their contact details and so on), put everything in an Excel sheet and import it. Yet, chance is that it would take (a lot of) time for you to finish this task. You would then be very likely to try coming up with some methods to cut down time for it.</p>
<p>That demand should raise two questions:</p>
<ul>
<li>How can we let the vendors enter their information by themselves?</li>
<li>And, how can we then have all such information in our system?</li>
</ul>
<h2 id="what">What</h2>
<p>What should be needed?</p>
<ul>
<li><a href="https://forms.office.com/" target="_blank" rel="noopener noreferrer">Microsoft Forms</a>: To establish a process in which you will publish a prepared form. Any vendors out there will have the access to it and they can fill any fields on in.</li>
<li><a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreferrer">Microsoft Power Automate aka. Microsoft Flow</a>: To set up a protocol to push the input information (form responses) to the target (D365FO Data Entities).</li>
<li><em>(Optional)</em> Access to Visual Studio on your virtual machine: To help you determine the target Data Entities more easily and efficiently.</li>
</ul>
<h2 id="how">How</h2>
<p>The flow should go like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/Biggest-Flow.png" title="Biggest FLow" data-thumbnail="/imagesposts/Biggest-Flow.png" data-sub-html="<h2>The Biggest FLow</h2><p>Biggest FLow</p>">
        
    </a><figcaption class="image-caption">The Biggest FLow</figcaption>
    </figure></p>
<p>To make it short, when a response is submitted in Microsoft Form, the Flow in MS Power Automate is triggered automatically. An approval request will be sent to your Outlook mailbox and if it is approved, a new record will be created in the target data entity.</p>
<p>Let go through three examples in the next articles in the series (from the simplest to a more complicated) so we will see the logic behind this process.</p>
<p>As easy as it sounds, in this example, we will create a new Vendor Account from Microsoft Forms with only a small number of fields being populate.
<strong>Note</strong></p>
<blockquote>
<p><em>To help simplify the example, the number of fields is minimised. In other words, we will import just enough fields so the new Vendor Account is valid.</em>
<em>Given that, only <code>Vendor Account</code> and <code>Vendor Group</code> are chosen to be imported.</em></p>
</blockquote>
<h3 id="step-1-create-a-ms-form">Step 1: Create a MS Form</h3>
<p>To do so, we will access <a href="https://forms.office.com/" target="_blank" rel="noopener noreferrer">Microsoft Forms</a> and create a new form. To make the new form usable, we will create two questions asking for inputs of Vendor Account and Vendor Group.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-1-NewForm.png" title="Example 1 Form" data-thumbnail="/imagesposts/E1-1-NewForm.png" data-sub-html="<h2>Example 1 Form</h2><p>Example 1 Form</p>">
        
    </a><figcaption class="image-caption">Example 1 Form</figcaption>
    </figure></p>
<p>Note all information on the form is customisable.
<strong>Note 1-1</strong></p>
<blockquote>
<p>We can make the questions&hellip;any questions that suit the purpose of the form. Say, in reality, the question can be <code>&quot;What is your company's name?&quot;</code> if you want to send this form to any external vendor users. The question does not change the usability of the returned response&rsquo;s value. It can still be mapped to VendAccount not matter what the question is.
<strong>Note 1-2</strong>
The second question is being set in form of a Choice question. The given choices should match with available Vendor Group values found on your D365FO client. If this question is a Text one, chance is that its response might not match with any available Vendor Group values, thus, will return an error during Flow runtime.
Vendor Groups can be found under <code>Account Payable &gt; Vendors &gt; Vendor Groups</code>. In this example, <code>TopVendor</code> and <code>Others</code> are two available Vendor Groups in my D365FO client.</p>
</blockquote>
<p><figure><a class="lightgallery" href="/imagesposts/E1-2-VendorGroups.png" title="Vendor Groups" data-thumbnail="/imagesposts/E1-2-VendorGroups.png" data-sub-html="<h2>Vendor Groups</h2><p>Vendor Groups</p>">
        
    </a><figcaption class="image-caption">Vendor Groups</figcaption>
    </figure></p>
<h3 id="step-2-create-a-ms-flow">Step 2: Create a MS Flow</h3>
<p>To do so, we will access <a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreferrer">Microsoft Power Automate</a> and create a new flow. We will go with an <code>Automated</code> one in this case.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-3-Flow-1.png" title="Flow step 1" data-thumbnail="/imagesposts/E1-3-Flow-1.png" data-sub-html="<h2>Automated flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">Automated flow</figcaption>
    </figure></p>
<p>Search for <code>form</code> and choose the trigger <code>When a new response is submitted</code>. Hit <code>Create</code> to create a new flow.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-4-Flow-2.png" title="Flow step 2" data-thumbnail="/imagesposts/E1-4-Flow-2.png" data-sub-html="<h2>Form trigger</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Form trigger</figcaption>
    </figure></p>
<p>Choose the <code>form</code> that we just created using the dropdown list.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-5-Flow-3.png" title="Flow step 3" data-thumbnail="/imagesposts/E1-5-Flow-3.png" data-sub-html="<h2>Choose form</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Choose form</figcaption>
    </figure></p>
<p>Press <code>New step</code>, search for <code>form</code> and go with <code>Get response details</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-6-Flow-4.png" title="FLow step 4" data-thumbnail="/imagesposts/E1-6-Flow-4.png" data-sub-html="<h2>New step: Get response details</h2><p>FLow step 4</p>">
        
    </a><figcaption class="image-caption">New step: Get response details</figcaption>
    </figure></p>
<p>In the new step, choose the <code>Form ID</code>. As soon as we move the cursor to the <code>Response ID</code> field, the <code>FLow</code> will suggest the <code>Dynamics content</code> that we can use. In this case, there should be only one dynamic content, which is <code>List of response notifications Response ID</code>. We will go with it by choosing it.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-7-Flow-5.png" title="FLow step 5" data-thumbnail="/imagesposts/E1-7-Flow-5.png" data-sub-html="<h2>Get response details</h2><p>FLow step 5</p>">
        
    </a><figcaption class="image-caption">Get response details</figcaption>
    </figure></p>
<p>After doing so, the flow should look like this.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-8-Flow-6.png" title="FLow step 6" data-thumbnail="/imagesposts/E1-8-Flow-6.png" data-sub-html="<h2>Form done</h2><p>FLow step 6</p>">
        
    </a><figcaption class="image-caption">Form done</figcaption>
    </figure></p>
<p>Now, the reponse details will be sent from the <code>Form</code> to the <code>Flow</code> when a new response is submitted. Next, we will set up the step to create a new Vendor Account.</p>
<p>Create a new step, search for <code>dynamics</code> and go with <code>Dynamics 365 for Finance and Operations</code>.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-9-Flow-7.png" title="FLow step 7" data-thumbnail="/imagesposts/E1-9-Flow-7.png" data-sub-html="<h2>Dynamics 365 FinOps</h2><p>FLow step 7</p>">
        
    </a><figcaption class="image-caption">Dynamics 365 FinOps</figcaption>
    </figure></p>
<p>Choose <code>Create record</code> action.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-10-Flow-8.png" title="FLow step 8" data-thumbnail="/imagesposts/E1-10-Flow-8.png" data-sub-html="<h2>Create record action</h2><p>FLow step 8</p>">
        
    </a><figcaption class="image-caption">Create record action</figcaption>
    </figure></p>
<p>Choose the Dynamics 365 FinOps <code>Instance</code> from the dropdown list. If your client does not appear here, choose <code>Enter custom value</code>. For privacy, environments' name will be censored in our example.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-11-Flow-9.png" title="FLow step 9" data-thumbnail="/imagesposts/E1-11-Flow-9.png" data-sub-html="<h2>Set D365FO instance</h2><p>FLow step 9</p>">
        
    </a><figcaption class="image-caption">Set D365FO instance</figcaption>
    </figure></p>
<p>The <code>Instance</code> should be the <code>link</code> to your D365FO client. Set <code>Entity name</code> VendorsV2.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-12-Flow-10.png" title="FLow step 10" data-thumbnail="/imagesposts/E1-12-Flow-10.png" data-sub-html="<h2>Set Instance and Entity</h2><p>FLow step 10</p>">
        
    </a><figcaption class="image-caption">Set Instance and Entity</figcaption>
    </figure></p>
<p><code>Note 1-3</code></p>
<blockquote>
<p><em>Later in this series, we will see how to find the exact <code>Entity name</code> using <code>Visual Studio</code>. Also, we will see in which condition, the Entity can be used in <code>Power Automate</code>.</em></p>
</blockquote>
<p>Populate the fields that we want to import. In this example, we will populate only 3 fields: <code>Group (VendorGroupID)</code>, <code>Company (DataAreaId)</code> and <code>Supplier Account (VendorAccountNumber)</code>.</p>
<p><code>Dynamic content</code> will be suggested automatically when the cursor is placed in each field.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-13-Flow-11.png" title="FLow step 11" data-thumbnail="/imagesposts/E1-13-Flow-11.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 11</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We can map <code>Form fields</code> with <code>Automate fields</code> or <code>hardcode</code> in these fields:</p>
<ul>
<li><code>Group</code> = Response of <code>What is the Vendor Group?</code> question.</li>
<li><code>Company</code> = <em>(hardcode)</em> <code>usmf</code>.</li>
<li><code>Supplier Account</code> = Response of <code>What is the Vendor Account?</code> question.</li>
<li><code>Name</code> = <code>Supplier Account</code> =  Response of <code>What is the Vendor Account?</code> question (<code>Show advanced option</code> on the Flow to find the field <code>Name (VendorOrganisationName)</code>).
These fields should be required when creating a new Vendor Account on D365FO client.</li>
</ul>
<p><figure><a class="lightgallery" href="/imagesposts/E1-14-Flow-12.png" title="FLow step 12" data-thumbnail="/imagesposts/E1-14-Flow-12.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 12</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We are done here with the set up.</p>
<h3 id="step-3-testing-out">Step 3: Testing out</h3>
<p>On <code>Forms</code>, choose the form that we just created, click on <code>Preview</code> so we can submit a form response.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-15-Flow-13.png" title="FLow step 13" data-thumbnail="/imagesposts/E1-15-Flow-13.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 13</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>Check out <code>All Vendors (VendTableListPage)</code> on the client to find a new Vendor Account is created.</p>
<p><figure><a class="lightgallery" href="/imagesposts/E1-16-Flow-14.png" title="FLow step 14" data-thumbnail="/imagesposts/E1-16-Flow-14.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 14</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p><code>Note 1-4</code></p>
<blockquote>
<p><em>Use <code>Test</code> option in Power Automate to follow the process of the Flow. This, in other words, is so-called <code>&quot;Run Flow with Debug&quot;</code> option.</em></p>
</blockquote>
]]></description>
</item></channel>
</rss>
