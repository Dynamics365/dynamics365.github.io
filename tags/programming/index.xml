<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Dynamics 365 Finance Operations &amp; Power Platform</title>
    <link>https://nuxulu.com/tags/programming/</link>
    <description>Recent content in programming on Dynamics 365 Finance Operations &amp; Power Platform</description>
    <image>
      <url>https://nuxulu.com/47</url>
      <link>https://nuxulu.com/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Number sequence farmework overview in Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-19-number-sequence-farmework-in-dynamics-ax-2012/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;For this demo, I will create New module along with NumberSequence, about creating Number Sequence &lt;em&gt;without&lt;/em&gt; module you also use same steps just leave some steps base on Design picture above.&lt;/p&gt;
&lt;h2 id=&#34;etd&#34;&gt;ETD&lt;/h2&gt;
&lt;p&gt;Create ETD &lt;code&gt;ContosoId&lt;/code&gt; extends &lt;code&gt;num&lt;/code&gt; datatype.&lt;/p&gt;
&lt;h2 id=&#34;table&#34;&gt;Table&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;Contoso&lt;/code&gt; Table with &lt;code&gt;ContosoId&lt;/code&gt; field.&lt;/p&gt;
&lt;h2 id=&#34;enum&#34;&gt;Enum&lt;/h2&gt;
&lt;p&gt;Create a new enum value &lt;code&gt;Contoso&lt;/code&gt; in BaseEnum &lt;code&gt;NumberSeqModule&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This value will be used to link number sequence to the module and to restrict displayed number sequence by module in Form.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recalculate InventSum in Dynamics AX</title>
      <link>https://nuxulu.com/posts/2017-01-02-recalculate-inventsum/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-02-recalculate-inventsum/</guid>
      <description>Recalculate InventSum in Dynamics AX</description>
    </item>
    
    <item>
      <title>Difference between QUERYFILTER and QUERYBUILDRANGE</title>
      <link>https://nuxulu.com/posts/2017-01-01-difference-between-queryfilter-and-querybuildrange/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2017-01-01-difference-between-queryfilter-and-querybuildrange/</guid>
      <description>Difference between QUERYFILTER and QUERYBUILDRANGE</description>
    </item>
    
    <item>
      <title>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>CRUD Purchase order using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Purchase order using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>Insert, update, Delete order line through AIF In AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</guid>
      <description>Insert, update, Delete order line through AIF In AX 2012 R3</description>
    </item>
    
    <item>
      <title>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</title>
      <link>https://nuxulu.com/posts/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</guid>
      <description>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</description>
    </item>
    
    <item>
      <title>The Type system of Dynamics AX 2012</title>
      <link>https://nuxulu.com/posts/2016-11-25-the-type-system-of-dynamics-ax-2012/</link>
      <pubDate>Thu, 24 Nov 2016 08:22:39 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-11-25-the-type-system-of-dynamics-ax-2012/</guid>
      <description>&lt;p&gt;The Microsoft Dynamics AX runtime manages the storage of &lt;em&gt;value type&lt;/em&gt; data on the &lt;strong&gt;call stack&lt;/strong&gt; and &lt;em&gt;reference type objects&lt;/em&gt; on the &lt;strong&gt;memory heap&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The call stack&lt;/strong&gt; is the memory structure that holds data about the active methods called during program execution. &lt;strong&gt;The memory heap&lt;/strong&gt; is the memory area that allocates storage for objects that are destroyed automatically by the Microsoft Dynamics AX run-time.&lt;/p&gt;
&lt;h2 id=&#34;value-types&#34;&gt;Value types&lt;/h2&gt;
&lt;p&gt;Value types include the built-in &lt;code&gt;primitive types, extended data types, enumeration types, and built-in collection types&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The primitive types&lt;/strong&gt; are boolean, int, int64, real, date, utcDateTime, timeofday, str, and guid.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The extended data types&lt;/strong&gt; are specialized primitive types and specialized base enumerations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The enumeration types&lt;/strong&gt; are base enumerations and extended data types.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The collection types&lt;/strong&gt; are the built-in array and container types.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Evolution of programming languages</title>
      <link>https://nuxulu.com/posts/2016-09-06-evolution-of-programming-languages/</link>
      <pubDate>Tue, 06 Sep 2016 18:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-09-06-evolution-of-programming-languages/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create record in DimensionAttributeValueCombination table manually.</title>
      <link>https://nuxulu.com/posts/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</link>
      <pubDate>Tue, 05 Jul 2016 18:47:00 +0900</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-07-05-create-record-in-dimensionattributevaluecombination-manually/</guid>
      <description>&lt;p&gt;Sometime we need this &lt;code&gt;RecId&lt;/code&gt; value in &lt;code&gt;DimansionAttributeValueCombination&lt;/code&gt; Table for some reasons likes putting new dimension in &lt;code&gt;LedgerDimension&lt;/code&gt; field in &lt;code&gt;LedgerJournalTrans&lt;/code&gt; Table, or somewhere else.&lt;/p&gt;
&lt;p&gt;Suppose my Account structure likes: &lt;em&gt;&lt;strong&gt;MainAcct - Dept - Woker - SubAcct - Item&lt;/strong&gt;&lt;/em&gt;,
you can custom base on your struture.&lt;/p&gt;
&lt;p&gt;This code is for creating a record into &lt;code&gt;DimansionAttributeValueCombination&lt;/code&gt; in code and then get &lt;code&gt;RecID&lt;/code&gt; of this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createDimensionAttributeValueCombination&lt;/span&gt;(Args _args)
{
    DimensionAttributeValueContract     ValueContract;
    DimensionAttributeValueCombination  davc;
    MainAccount                         valueMainAccount;
    DimensionStorage                    dimStorage;

    DimensionServiceProvider DimensionServiceProvider   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionServiceProvider();
    LedgerAccountContract LedgerAccountContract         &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; LedgerAccountContract();
    List ListValueContract                              &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List(Types&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Class);
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// Get main account with structure : Mainacct - DE - woker - subacct - item
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    valueMainAccount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MainAccount&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;findByMainAccountId(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;910001&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Get main account
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Department&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6020&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Department
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Worker&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;000001&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension ExpenseCode
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;SubAcct&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;교보생명&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Project
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    ValueContract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DimensionAttributeValueContract();
    ValueContract.parmName(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;Item&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;) ;
    ValueContract.parmValue(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;110329&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//Value for dimension Project
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ListValueContract.addEnd(ValueContract);

    LedgerAccountContract.parmMainAccount(valueMainAccount.MainAccountId);
    LedgerAccountContract.parmValues(ListValueContract);

    &lt;span style=&#34;color:#75715e&#34;&gt;//if combination is not exist then create new one
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    dimStorage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DimensionServiceProvider&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;buildDimensionStorageForLedgerAccount(LedgerAccountContract);
    davc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DimensionAttributeValueCombination&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;find(dimStorage.save());
    info(strFmt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RecId : %1 - DisplayValue : %2&amp;#34;&lt;/span&gt;, davc.RecId, davc.DisplayValue));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Only integrated security is supported for AX queries</title>
      <link>https://nuxulu.com/posts/2016-01-15-only-integrated-security-is-supported-for-ax-queries/</link>
      <pubDate>Sun, 17 Jan 2016 16:22:50 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-01-15-only-integrated-security-is-supported-for-ax-queries/</guid>
      <description>I updated my dynamics Ax development Environment by restoring Database from Production Database . After the restoring the database, when I run any report form Dynamics Ax, all gave error “Only integrated security is supported for AX queries.”
The reporting Services are still working fine.
For this, best way to redeploy them, create a new report folder, open Microsoft Dynamics Ax 2012 Management Shell (make sure you run Powershell as Administrator).</description>
    </item>
    
    <item>
      <title>SSRS Report Server Settings Validation Error- AX 2012 R3 CU9</title>
      <link>https://nuxulu.com/posts/2016-01-15-ssrs-report-server-settings-validation-error-ax-2012-r3-cu9/</link>
      <pubDate>Fri, 15 Jan 2016 16:22:50 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2016-01-15-ssrs-report-server-settings-validation-error-ax-2012-r3-cu9/</guid>
      <description>Recently I updated my dynamics Ax development Environment by restoring Database from Production Dynamics AX DB and I got this problem
Make sure that SQL Server Reporting Services is configured correctly. Verify the Web Service URL and Report Manager URL configuration in the SQL Reporting Services Configuration Manager.
Anyway, The reporting Services are still working fine and i have already granted the AX Admin as System Administrator under site settings, Home folder settings and DynamicsAX folder with “Browser, Content Manager, DynamicsAXBrowser, My Reports, Publisher, Report Builder” roles.</description>
    </item>
    
    <item>
      <title>Caching form into AOS to increase performance for Dynamics AX</title>
      <link>https://nuxulu.com/posts/2015-11-17-caching-form-into-aos-to-increase-performance-for-dynamics-ax/</link>
      <pubDate>Tue, 17 Nov 2015 03:13:45 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-11-17-caching-form-into-aos-to-increase-performance-for-dynamics-ax/</guid>
      <description>Scenario:
Normally when we open form for the first time in Dynamics AX, it will take sometimes to compilte and cache into AOS. That&amp;rsquo;s why at second time always faster. If we often restart AOS, how can we keep performance ?
Solution:
After restart AOS we can let some scripts run to open up some often used forms then cache to AOS, then close those forms.
Here is the code</description>
    </item>
    
    <item>
      <title>DefaultValue ComboBox in Dynamics AX with X&#43;&#43;</title>
      <link>https://nuxulu.com/posts/2015-11-03-defaultvale-combobox-in-x/</link>
      <pubDate>Fri, 13 Nov 2015 06:57:46 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-11-03-defaultvale-combobox-in-x/</guid>
      <description>Beside modify metadata on form properties, as best practice we can use code like below to assign default value for combobox.
 You can use this code in the form&amp;rsquo;s init method after super():  {% highlight csharp %} ComboBoxName.selection(ComboBoxName::DefaultValue); {% endhighlight %}
 If this is a table field we should you best practice overriding the initValue method in the table:  {% highlight csharp %} this.ComboBoxName = ComboBoxName::DefaultValue; {% endhighlight %}</description>
    </item>
    
    <item>
      <title>HOW TO USE &#34;LIKE&#34; OPERATOR IN QUERYBUILDRANGE</title>
      <link>https://nuxulu.com/posts/2015-11-13-how-to-use-like-operator-in-querybuildrange/</link>
      <pubDate>Fri, 13 Nov 2015 06:57:46 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-11-13-how-to-use-like-operator-in-querybuildrange/</guid>
      <description>To make something as the LIKE operator in a query, just assign a value to the QueryRange including a wildcard.
static void QueryBuildRange_Sample(Args _args) { Query query = new Query(); QueryRun queryRun; QueryBuildDataSource qbds; QueryBuildRange queryRange; CustTable custTable; qbds.addDataSource(tableNum(CustTable)); queryRange = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange.value(&amp;#34;axd*&amp;#34;); queryRun = new QueryRun(query); while(queryRun.next()) { custTable = queryRun.get(tableNum(CustTable)); print custTable.AccountNum; } pause; } </description>
    </item>
    
    <item>
      <title>Rename a Database in SQL Server</title>
      <link>https://nuxulu.com/posts/2015-11-03-rename-a-database-in-sql-server/</link>
      <pubDate>Tue, 03 Nov 2015 03:45:13 +0700</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-11-03-rename-a-database-in-sql-server/</guid>
      <description>Open Microsoft SQL Server Management Studio.
  Connect to the server where in the DB you want to rename is located.
  Modify the following script and run it
  -- Replace all MyDBs with the name of the DB you want to change its name USE [MyDB]; -- Changing Physical names and paths -- Replace all NewMyDB with the new name you want to set for the DB -- Replace &amp;#39;C:.</description>
    </item>
    
    <item>
      <title>Execute external database Stored Procedure from X&#43;&#43; code using ODBC connectivity</title>
      <link>https://nuxulu.com/posts/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</link>
      <pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/</guid>
      <description>Execute external database Stored Procedure from X&#43;&#43; code using ODBC connectivity</description>
    </item>
    
    <item>
      <title>Execute Stored Procedure from X&#43;&#43; code</title>
      <link>https://nuxulu.com/posts/2015-05-12-execute-stored-procedure-from-x-code/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-05-12-execute-stored-procedure-from-x-code/</guid>
      <description>Execute Stored Procedure from X&#43;&#43; code</description>
    </item>
    
    <item>
      <title>X&#43;&#43; Performance tips</title>
      <link>https://nuxulu.com/posts/2015-02-12-x-performance-tips/</link>
      <pubDate>Thu, 12 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-02-12-x-performance-tips/</guid>
      <description>X&#43;&#43; Performance tips</description>
    </item>
    
    <item>
      <title>Create and write to XML file in Dynamics AX</title>
      <link>https://nuxulu.com/posts/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-02-04-create-and-write-to-xml-file-in-dynamics-ax/</guid>
      <description>Create and write to XML file in Dynamics AX</description>
    </item>
    
    <item>
      <title>What is the difference difference between menu item Display, Output and Action</title>
      <link>https://nuxulu.com/posts/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nuxulu.com/posts/2015-01-27-what-is-the-difference-difference-between-menu-item-display-output-and-action-in-dynamics-ax/</guid>
      <description>The answer is that there is no difference, the difference is a conceptual one rather than a functional or a technical one. So I think you will make a better choice for your scenario base on functional side.
Display Menu item This folder is used to contain menu items that reference runnable application objects that primarily present forms, ddialog and so on, to the user. May be this forms, dialog called from another forms.</description>
    </item>
    
  </channel>
</rss>
