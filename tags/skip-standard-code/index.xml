<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
    <channel>
        <title>skip standard code - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</title>
        <link>https://nuxulu.com/tags/skip-standard-code/</link>
        <description>skip standard code - Tag - Dynamics 365 &amp; Power Platform | nuxulu.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor>
            <webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Thu, 09 Apr 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/tags/skip-standard-code/" rel="self" type="application/rss+xml" /><item>
    <title>How to skip standard code in Dynamics 365 finance and operations</title>
    <link>https://nuxulu.com/2020-04-09-how-to-ignore-standard-code-in-dynamics-365-finance-and-operations/</link>
    <pubDate>Thu, 09 Apr 2020 00:00:00 &#43;0000</pubDate><author>luan52@outlook.com</author><dc:creator>Alex Ong</dc:creator><guid>https://nuxulu.com/2020-04-09-how-to-ignore-standard-code-in-dynamics-365-finance-and-operations/</guid>
    <description><![CDATA[Disclaimers: Try at your own risk, this is consider as a bug and it will be fixed soon. {:.error}
According to this MS article about Chain Of Command https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/extensibility/method-wrapping-coc#wrapper-methods-must-always-call-next
 &ldquo;Wrapper methods must always call next Wrapper methods in an extension class must always call next, so that the next method in the chain and, finally, the original implementation are always called. This restriction helps guarantee that every method in the chain contributes to the result.]]></description>
</item></channel>
</rss>
