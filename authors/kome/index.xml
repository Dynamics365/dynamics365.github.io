<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Kome - Author - Dynamics 365 Finance &amp; Operations | nuxulu.com</title><link>https://dynamics365.github.io/authors/kome/</link><description>Kome - Author - Dynamics 365 Finance &amp; Operations | nuxulu.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor><webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dynamics365.github.io/authors/kome/" rel="self" type="application/rss+xml"/><item><title>A good example of Trace Parser, Visual Studio and Excel</title><link>https://dynamics365.github.io/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>Kome Hoang</author><guid>https://dynamics365.github.io/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/</guid><description><![CDATA[<h2 id="prerequisite"><strong>Prerequisite</strong></h2>
<p>Before analysing a trace file, you might need to create a database for trace data. When you do troubleshooting actions on any VMs lower than D365FO 10.X.X (i.e. AX2012, D365FO 7.X, D365FO 8.X), no database was pre-created for trace&rsquo;s data. You will need to register a new one. Please <a href="/2020-06-30-create-a-new-database-for-trace-parser/" rel="">check here</a>.</p>
<p>A good tip of using Excel to analyse INSERT INTO statement captured in a Trace file: <a href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/" rel="">Check here</a>.</p>
<p>Now we are good to get ourselves into this beautiful example.</p>
<h2 id="the-beautiful-example"><strong>The beautiful example</strong></h2>
<h3 id="the-given-case"><strong>The given case</strong></h3>
<p>I had a case which was solved by analysing a trace file. That case gave me a huge happiness so I would like to share with you all. This case required some skills of analysing the trace file, understanding the logic of D365 indexes, navigating through Visual Studio, using SSMS queries to find the things we need. So, I believe this is a very nice example yet simple enough for everyone to start learning how to use such tools, especially Trace Parser.</p>
<h4 id="issue-description"><em>Issue description</em></h4>
<p>When I tried to authorise some Adjusted <strong>Demand Forecast</strong> records, I failed. System threw one error saying <code>The record already exists</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-1.png" title="Issue" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-1.png" data-sub-html="<h2>Issue</h2><p>Issue</p>">
        
    </a><figcaption class="image-caption">Issue</figcaption>
    </figure></p>
<!-- <figure><figcaption>
            <h4>Issue</h4>
        </figcaption>
</figure>
 -->
<h4 id="self-issue-scoping"><em>Self issue-scoping</em></h4>
<p>The error message was pretty straightforward. It can be understood as: Cannot create a record in table <strong>Demand Forecast</strong> (with its name in <code>[AxDB].[ForecastSales]</code>) because the record already exists in such table.</p>
<blockquote>
<p><em><strong>Note</strong></em></p>
<p>In fact, different records in D365FO can be distinguished by some different key values of them. Such key values are unique for each record. So, for example, 2 records might have exactly similar details of <code>Sales Order</code> or <code>Sales Quantity</code> but they can be deemed different if they have different <code>RecID</code> values.</p>
</blockquote>
<p>In this case, due to some reasons, the system was trying to insert a new record into ForecastSales table with some values which are already existing in such table. And, thus, failed.</p>
<p>We need to find what is/are that duplicated value(s) and try to fix it (them).</p>
<h3 id="troubleshooting"><strong>Troubleshooting</strong></h3>
<h4 id="visual-studio-checking-indexes"><em>Visual Studio: Checking indexes</em></h4>
<p>First and foremost, for any <em><strong>&ldquo;Record has been existed&rdquo;</strong></em> issues, the very first thing that we would need to check is the indices of the tables because the indices are the ones which decide the duplication rule (Allowed or Not allowed).</p>
<p>I would need to find which values in <code>ForecastSales</code> table do not allow duplicated values. This can be done by check <code>ForecastSales.Indexes</code> using <code>Visual Studio</code>.</p>
<p>Open <code>Visual Studio</code> and look for <code>forecastsales</code> table in the AOT.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-2.png" title="Find the table" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-2.png" data-sub-html="<h2>Find the table</h2><p>Find the table</p>">
        
    </a><figcaption class="image-caption">Find the table</figcaption>
    </figure></p>
<p>Right-click on it &gt; <code>Open Designer</code> to open Table designer. Expand <code>Indexes</code> (this is somewhat bugging me for a long time because the plural form of <em>Index</em> should be <em>Indices</em> rather than <em>Indexes</em>, yet never mind).</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-3.png" title="The Index" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-3.png" data-sub-html="<h2>The Index</h2><p>The Index</p>">
        
    </a><figcaption class="image-caption">The Index</figcaption>
    </figure></p>
<p>Choose <code>View</code> (on Menu bar) &gt; <code>Properties Window</code> to open Properties window. Or, we can simply press <code>F4</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-4.png" title="Properties" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-4.png" data-sub-html="<h2>Properties</h2><p>Properties</p>">
        
    </a><figcaption class="image-caption">Properties</figcaption>
    </figure></p>
<p>Check all indexes to see if any indexes <em><strong>DO NOT</strong></em> allow duplicate. Those should be the indexes that we should tackle.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-5.png" title="Properties of Indices" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-5.png" data-sub-html="<h2>Properties of Indices</h2><p>Properties of Indices</p>">
        
    </a><figcaption class="image-caption">Properties of Indices</figcaption>
    </figure></p>
<p>After analysing, I found that two indexes which do not allow duplicate. They were <code>ExpandIdx</code> and <code>ForecastEntryNumberIdx</code>. Expand those indexes to find which fields are included. They were (1) the combination of <code>ExpandID</code> and <code>RecID</code> and (2) <code>ForecastEntryNumber</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-6.png" title="Found the ones" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-6.png" data-sub-html="<h2>Found the ones</h2><p>Found the ones</p>">
        
    </a><figcaption class="image-caption">Found the ones</figcaption>
    </figure></p>
<p>We would need to take note these fields.</p>
<h4 id="trace-parser-analysing-the-trace-file"><em>Trace parser: Analysing the trace file</em></h4>
<p>Before analysing any trace files, we would need to have the ID of the session in which we captured the file.</p>
<p>Go to <code>Question mark</code> on the upper-right corner of your browser &gt; <code>Feedback</code> &gt; Find the session ID.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-7.png" title="Session ID" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-7.png" data-sub-html="<h2>Session ID</h2><p>Session ID</p>">
        
    </a><figcaption class="image-caption">Session ID</figcaption>
    </figure></p>
<p>Open <code>Trace Parser</code> from Start menu and <code>Import</code> the trace file that we captured.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-8.png" title="Import trace file" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-8.png" data-sub-html="<h2>Import trace file</h2><p>Import trace file</p>">
        
    </a><figcaption class="image-caption">Import trace file</figcaption>
    </figure></p>
<p>Select grouping with same <code>Session</code> that we just took note.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-9.png" title="Import trace file" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-9.png" data-sub-html="<h2>Import trace file</h2><p>Import trace file</p>">
        
    </a><figcaption class="image-caption">Import trace file</figcaption>
    </figure></p>
<p>Usually, we will need to analyse Call Tree, X++ and SQL included in the trace file to understand the issue&rsquo;s cause. The approach much depends on the issue. In my case, I would look into SQL queries because I assumed that an <code>INSERT INTO</code> statement was made to the table <code>ForecastSales</code>.</p>
<p>Switch to SQL tab and search for <em>&ldquo;forecastsales&rdquo;</em> (pay attention to the asterisks). This means we want to search for any queries containing <code>&quot;forecastsales&quot;</code> no matter where the keyword is in the queries.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-10.png" title="The statement" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-10.png" data-sub-html="<h2>statement</h2><p>The statement</p>">
        
    </a><figcaption class="image-caption">statement</figcaption>
    </figure></p>
<p>Luckily, I found one.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-11.png" title="The problematic one" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-11.png" data-sub-html="<h2>The problematic one</h2><p>The problematic one</p>">
        
    </a><figcaption class="image-caption">The problematic one</figcaption>
    </figure></p>
<p>By analysing the INSERT INTO statement using Excel, I found the values that system tried inserting into <code>ForecastSales</code> table:</p>
<ul>
<li><code>ExpandID</code> = &lsquo;0&rsquo;</li>
<li><code>RecID</code> = &lsquo;5637233827&rsquo;</li>
<li><code>ForecastEntryNumber</code> = &lsquo;PAU-000063760&rsquo;</li>
</ul>
<p>We would need to memorise these values or write them down somewhere.</p>
<h4 id="ssms-finding-the-duplicated-values"><em>SSMS: Finding the duplicated values</em></h4>
<p>Open <code>Microsoft SQL Server Management Studio</code> from Start menu and log in with default Windows Authentication.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-12.png" title="SSMS" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-12.png" data-sub-html="<h2>SSMS</h2><p>SSMS</p>">
        
    </a><figcaption class="image-caption">SSMS</figcaption>
    </figure></p>
<p>Open a <code>New Query</code> window by choosing <code>Databases</code> &gt; <code>AxDB</code> &gt; <code>New Query</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-13.png" title="New query" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-13.png" data-sub-html="<h2>New query</h2><p>New query</p>">
        
    </a><figcaption class="image-caption">New query</figcaption>
    </figure></p>
<p>I would execute 3 different queries because I wanted to look for duplicated values in 3 fields:</p>
<ul>
<li>ExpandID = &lsquo;0&rsquo;</li>
<li>RecID = &lsquo;5637233827&rsquo;</li>
<li>ForecastEntryNumber = &lsquo;PAU-000063760&rsquo;</li>
</ul>
<p>Type queries in the window &gt; Press <code>F5</code> or <code>Alt+X</code> or <code>Execute</code> button to execute the queries.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-14.png" title="Query result" data-thumbnail="/2020-06-30-a-good-example-of-trace-parser-visual-studio-and-excel/Pic1-14.png" data-sub-html="<h2>Query result</h2><p>Query result</p>">
        
    </a><figcaption class="image-caption">Query result</figcaption>
    </figure></p>
<p>Examination:</p>
<ul>
<li><code>ExpandID</code>: Hmm, quite a lot of records having a same value of &lsquo;0&rsquo;, but when involving all these &lsquo;0&rsquo; with the unique <code>RecID</code>, the combination should be different (we can actually double check this one using the query <code>select RECID, count(RECID) as Number from FORECASTSALES group by RECID order by Number desc</code>, any Number &gt;= 2 are the duplicated ones)</li>
<li><code>RecID</code>: No records were found &ndash;&gt; This means there should be no problem when inserting a new record with RecID = &lsquo;5637233827&rsquo; into this table.</li>
<li><code>ForecastEntryNumber</code>: One record was found &ndash;&gt; This means the system will throw such error &ldquo;A record is existing in the table&rdquo; when it tries inserting a new record because this field does not allow duplicate.</li>
</ul>
<p>We found it.</p>
<h4 id="d360fo-client--number-sequence"><em>D360FO client &gt; Number Sequence</em></h4>
<p>The solution for this particular issue should be simple: Find our way to the Number Sequence that is for ForecastEntryNumber and increase the <code>Next</code> value by 1.</p>
<p>I showed no solution here because the main purpose of this post is to demonstrate the way that we can co-use such available tools to approach an issue. Yet, each issue requires more or less different approaches. I hope that some quick look into these might plant some hints and you all can develop your own way of using them.</p>
<p>Happy Troubleshooting!</p>
]]></description></item><item><title>A good tip of using Excel to analyse INSERT INTO statement captured in a Trace file</title><link>https://dynamics365.github.io/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>Kome Hoang</author><guid>https://dynamics365.github.io/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/</guid><description><![CDATA[<p>More than often, you will come across INSERT INTO statements when analysing D365FO trace files.</p>
<p>Below is a good trick to know which values that the system was trying to insert into the tables.</p>
<p>First, copy everything from the statement (click on the <code>Code</code> section &gt; <code>Ctrl + A</code> &gt; <code>Ctrl + C</code>).</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-1.png" title="Copy the query" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-1.png" data-sub-html="<h2>copy the query</h2><p>Copy the query</p>">
        
    </a><figcaption class="image-caption">copy the query</figcaption>
    </figure></p>
<p>Paste the script into Excel.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-2.png" title="Paste to Excel" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-2.png" data-sub-html="<h2>Paste to Excel</h2><p>Paste to Excel</p>">
        
    </a><figcaption class="image-caption">Paste to Excel</figcaption>
    </figure></p>
<p>Remove any empty rows.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-3.png" title="Remove the empty rows" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-3.png" data-sub-html="<h2>Remove the empty rows</h2><p>Remove the empty rows</p>">
        
    </a><figcaption class="image-caption">Remove the empty rows</figcaption>
    </figure></p>
<p>Find the <code>VALUES</code> keyword (usually after <code>RECID</code>). Insert a new row right below that row you found and cut the VALUES part to it.</p>
<p><em>Before</em></p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-4.png" title="Values part before" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-4.png" data-sub-html="<h2>Values part before</h2><p>Values part before</p>">
        
    </a><figcaption class="image-caption">Values part before</figcaption>
    </figure></p>
<p><em>After</em></p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-5.png" title="Values part after" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-5.png" data-sub-html="<h2>Values part after</h2><p>Values part after</p>">
        
    </a><figcaption class="image-caption">Values part after</figcaption>
    </figure></p>
<p>Copy from VALUES to the end of the script (Choose the VALUES cell &gt; <code>Shift + Ctrl + Down Arrow</code>).</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-6.png" title="Copy the part" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-6.png" data-sub-html="<h2>Copy the part</h2><p>Copy the part</p>">
        
    </a><figcaption class="image-caption">Copy the part</figcaption>
    </figure></p>
<p>Paste the copied values to any next columns, starting from the row where the very first column of the table appears.</p>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-7.png" title="Move the part" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-7.png" data-sub-html="<h2>Move the part</h2><p>Move the part</p>">
        
    </a><figcaption class="image-caption">Move the part</figcaption>
    </figure></p>
<p>There, you can look for the columns with their inserted corresponding values.</p>
<p>For example:</p>
<ul>
<li>ExpandID = &lsquo;0&rsquo;</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-8.png" title="ExpandID" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-8.png" data-sub-html="<h2>ExpandID</h2><p>ExpandID</p>">
        
    </a><figcaption class="image-caption">ExpandID</figcaption>
    </figure></p>
<ul>
<li>RecID = &lsquo;5637233827&rsquo;</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-9.png" title="RecID" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-9.png" data-sub-html="<h2>RecID</h2><p>RecID</p>">
        
    </a><figcaption class="image-caption">RecID</figcaption>
    </figure></p>
<ul>
<li>ForecastEntryNumber = &lsquo;PAU-000063760&rsquo;</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-10.png" title="ForecastEntryNumber" data-thumbnail="/2020-06-30-a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/Pic3-10.png" data-sub-html="<h2>ForecastEntryNumber</h2><p>ForecastEntryNumber</p>">
        
    </a><figcaption class="image-caption">ForecastEntryNumber</figcaption>
    </figure></p>
]]></description></item><item><title>Create a new database for Trace parser</title><link>https://dynamics365.github.io/2020-06-30-create-a-new-database-for-trace-parser/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><author>Kome Hoang</author><guid>https://dynamics365.github.io/2020-06-30-create-a-new-database-for-trace-parser/</guid><description><![CDATA[<p>When you do troubleshooting actions on any VM lower than D365FO 10.X.X (i.e. AX2012, D365FO 7.X, D365FO 8.X), chance is that no database was pre-created for trace&rsquo;s data. You will need to register a new one.</p>
<p>Open <code>Trace Parser</code> from Start meu. Choose <code>File</code> &gt; <code>Register</code>.</p>
<p><figure><a class="lightgallery" href="./Pic2-1.png" title="Open" data-thumbnail="./Pic2-1.png" data-sub-html="<h2>Open</h2><p>Open</p>">
        
    </a><figcaption class="image-caption">Open</figcaption>
    </figure></p>
<p>Register a new database. <strong>DO NOT</strong> choose any existing database.</p>
<p><figure><a class="lightgallery" href="./Pic2-2.png" title="New DB" data-thumbnail="./Pic2-2.png" data-sub-html="<h2>New DB</h2><p>New DB</p>">
        
    </a><figcaption class="image-caption">New DB</figcaption>
    </figure></p>
<p>A new box will appear asking if you want to create it. Choose <code>Yes</code>.</p>
<p><figure><a class="lightgallery" href="./Pic2-3.png" title="Confirmation" data-thumbnail="./Pic2-3.png" data-sub-html="<h2>Confirmation</h2><p>Confirmation</p>">
        
    </a><figcaption class="image-caption">Confirmation</figcaption>
    </figure></p>
<p>A new database will be created for you in <code>SSMS</code>.</p>
<p><figure><a class="lightgallery" href="./Pic2-4.png" title="New DB" data-thumbnail="./Pic2-4.png" data-sub-html="<h2>New DB</h2><p>New DB</p>">
        
    </a><figcaption class="image-caption">New DB</figcaption>
    </figure></p>
<p>Now, you can start analysing trace files using <code>Trace Parser</code>.</p>
]]></description></item><item><title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 2)</title><link>https://dynamics365.github.io/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</link><pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate><author>Kome Hoang</author><guid>https://dynamics365.github.io/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/</guid><description><![CDATA[<h3 id="1-example-two-a-new-forms-response-is-submitted-then-flow-promts-for-an-approval-request-before-a-new-record-is-created-in-vendors-table">1. Example two: A new Forms response is submitted then Flow promts for an approval request before a new record is created in Vendors table</h3>
<p>In the last example, we created a simple Flow to create a new Vendor Account from submitted Forms responses. The process was made as simple as it could be: When a new Forms response if submitted, a new Vendor Account will be created on D365FO client.</p>
<p>To make the process more reliable, we will now add an approval step to the Flow. It means before a new Vendor Account is created, the user will have the right to <code>Approve</code> or <code>Reject</code> the request.</p>
<h4 id="11-step-1-add-a-new-step-to-the-flow">1.1. <strong>Step 1: Add a new step to the Flow</strong></h4>
<p>The flow that we have is like this.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-1-Flow-1.png" title="Flow step 1" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-1-Flow-1.png" data-sub-html="<h2>The old flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">The old flow</figcaption>
    </figure></p>
<p>We will add a step right before the new record is created.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-2-Flow-2.png" title="Flow step 2" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-2-Flow-2.png" data-sub-html="<h2>Add a new step</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Add a new step</figcaption>
    </figure></p>
<p>We will go with <code>Approval &gt; Start and wait for an approval</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-3-Flow-3.png" title="Flow step 3" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-3-Flow-3.png" data-sub-html="<h2>Add approval request</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Add approval request</figcaption>
    </figure></p>
<p>This step will offer several types of approval in which the most common ones are <code>All users must approve</code> or <code>First approve/reject from any user</code>. To make it simple, we will go with <code>First approval</code> because in this example, we will have only one user.</p>
<p>As straightforward as they seem, the fields explain themselves. We will start an approval request, set a title for it and assign it to a user (only users in the same organisation as you).</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-4-Flow-4.png" title="Flow step 4" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-4-Flow-4.png" data-sub-html="<h2>Single approval</h2><p>Flow step 4</p>">
        
    </a><figcaption class="image-caption">Single approval</figcaption>
    </figure></p>
<p><em><strong>Note 2-1</strong></em></p>
<blockquote>
<p><em>Almost all fields including <code>Title</code>, <code>Details</code>, etc. are fully customisable by using <code>Dynamic content</code>.</em></p>
</blockquote>
<p>The flow now will look like this.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-5-Flow-5.png" title="Flow step 5" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-5-Flow-5.png" data-sub-html="<h2>Revised flow</h2><p>Flow step 5</p>">
        
    </a><figcaption class="image-caption">Revised flow</figcaption>
    </figure></p>
<h4 id="12-step-2-testing-out">1.2. <strong>Step 2: Testing out</strong></h4>
<p>Trigger a <code>test</code> run of the flow.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-6-Flow-6.png" title="Flow step 6" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-6-Flow-6.png" data-sub-html="<h2>Test run</h2><p>Flow step 6</p>">
        
    </a><figcaption class="image-caption">Test run</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-7-Flow-7.png" title="Flow step 7" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-7-Flow-7.png" data-sub-html="<h2>Test run triggered</h2><p>Flow step 7</p>">
        
    </a><figcaption class="image-caption">Test run triggered</figcaption>
    </figure></p>
<p>The <code>test</code> run is ready, waiting for the input from <code>MS Forms</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-8-Flow-8.png" title="Flow step 8" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-8-Flow-8.png" data-sub-html="<h2>Test run ready</h2><p>Flow step 8</p>">
        
    </a><figcaption class="image-caption">Test run ready</figcaption>
    </figure></p>
<p>Submit a new response.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-9-Flow-9.png" title="Flow step 9" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-9-Flow-9.png" data-sub-html="<h2>Form new response</h2><p>Flow step 9</p>">
        
    </a><figcaption class="image-caption">Form new response</figcaption>
    </figure></p>
<p>The flow will run. The process will show that an approval is being waited from the assigned user.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-10-Flow-10.png" title="Flow step 10" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-10-Flow-10.png" data-sub-html="<h2>Waiting for an approval</h2><p>Flow step 10</p>">
        
    </a><figcaption class="image-caption">Waiting for an approval</figcaption>
    </figure></p>
<p>An approval request will be sent to the mailbox of the assigned user. That user can check the request in <code>Office.com &gt; Outlook</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-11-Flow-11.png" title="Flow step 11" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-11-Flow-11.png" data-sub-html="<h2>Approval request</h2><p>Flow step 11</p>">
        
    </a><figcaption class="image-caption">Approval request</figcaption>
    </figure></p>
<p>Upon approval, the flow will finish its pending step and a new record will be created.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-12-Flow-12.png" title="Flow step 12" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E2-12-Flow-12.png" data-sub-html="<h2>Flow finishes</h2><p>Flow step 12</p>">
        
    </a><figcaption class="image-caption">Flow finishes</figcaption>
    </figure></p>
<h3 id="2-example-three-from-the-created-record-in-vendors-table-add-related-records-in-other-tables">2. Example three: From the created record in Vendors table, add related records in other tables</h3>
<p>In the last example, we added an Approval step to the Flow which will allow users to give <code>Approve</code> or <code>Reject</code> action toward the request coming from the Form.</p>
<p>We can actually utilise the Flow one step further: To create additional records on different tables that might depend on the created record in VendTable.</p>
<p>To make it easier to understand, the process is like this:</p>
<ul>
<li>Create a new <code>Vendor Account</code> by using input from the Form.</li>
<li>Create a new <code>Bank Account</code> with the <code>Bank Account ID</code> exactly similar to the <code>Vendor Account</code>.</li>
<li>Add some contact details to the <code>Vendor Account</code>.</li>
</ul>
<p>Which entities should we target to? They are:</p>
<ul>
<li>For <code>Vendor Bank Account</code>: VendorBankAccounts</li>
<li>For <code>Vendor Contact Details</code>: PartyContacts</li>
</ul>
<p>You can play around in Visual Studio to get used to looking for an Entity that might fulfil the requirements of your intergration. Check out the next part of this article to get some quick tips into that.</p>
<p>Assuming that we now have a Flow as we configured in the last two examples, we can add some more steps like these underneath.</p>
<h4 id="21-step-1-add-a-new-step-to-add-a-new-record-to-vendorbankaccounts-and-partycontacts">2.1. <strong>Step 1: Add a new step to add a new record to VendorBankAccounts and PartyContacts</strong></h4>
<p>Given the case that we had a Vendor Account and Bank Account for that Vendor Account, the records would be like this.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-1-SSMSBank.png" title="SSMSBank" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-1-SSMSBank.png" data-sub-html="<h2>Relation in SSMS</h2><p>SSMSBank</p>">
        
    </a><figcaption class="image-caption">Relation in SSMS</figcaption>
    </figure></p>
<p>The relation should be: <code>VendTable.AccountNum</code> = <code>VendBankAccount.VendAccount</code></p>
<p>On the client, the information should be illustrated like this.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-2-VendBank1.png" title="VendBank1" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-2-VendBank1.png" data-sub-html="<h2>Vendor Bank Account</h2><p>VendBank1</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Account</figcaption>
    </figure></p>
<p>And, when checking the Bank Account details, we would find.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-3-VenkBank2.png" title="VendBank2" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-3-VenkBank2.png" data-sub-html="<h2>Vendor Bank Details</h2><p>VendBank2</p>">
        
    </a><figcaption class="image-caption">Vendor Bank Details</figcaption>
    </figure></p>
<p>Now, to do so, we will add a new step right after the creation of VendTable record.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-4-Flow-1.png" title="VendBank3" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-4-Flow-1.png" data-sub-html="<h2>A new step</h2><p>VendBank3</p>">
        
    </a><figcaption class="image-caption">A new step</figcaption>
    </figure></p>
<ul>
<li><code>Instance</code> = <code>Environment URL</code> (same as any other steps)</li>
<li><code>Entity name</code> = <code>VendorBankAccounts</code> (check my post about good tips with Visual Studio to know how to find the Data Entity)</li>
<li><code>Supplier account</code> = <code>Supplier account</code> from last step</li>
<li><code>Bank account</code>= <code>Supplier account</code> from last step (Because I would like to have same Vendor Account and Bank Account)</li>
</ul>
<p>When saying &ldquo;from the last step&rdquo;, I meant this.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-5-Flow-2.png" title="DynamicsContent" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-5-Flow-2.png" data-sub-html="<h2>Selecting Dynamic Content from former steps</h2><p>DynamicsContent</p>">
        
    </a><figcaption class="image-caption">Selecting Dynamic Content from former steps</figcaption>
    </figure></p>
<p>In MS FLow, any steps that are already executed will have outputs. We, in this step, are taking the <code>Supplier Account</code> from the last step of creating a new record in VendTable . This dynamic content was generated when the new record is created.</p>
<p><em><strong>Note 3-1</strong></em></p>
<blockquote>
<p><em>Keep in mind that if the last step is not &ldquo;Creating a new record&rdquo;, chance is that you cannot take the output from it because there&rsquo;s simply none.</em></p>
</blockquote>
<p>Click on <code>Show advanced options</code> so we can add more information to the Vendor Bank Account.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-6-Flow-3.png" title="AdvancedOptions" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-6-Flow-3.png" data-sub-html="<h2>Select Show advanced options</h2><p>AdvancedOptions</p>">
        
    </a><figcaption class="image-caption">Select Show advanced options</figcaption>
    </figure></p>
<p>Add more details to the bank account:</p>
<ul>
<li><code>Name</code> = <code>Bank account name</code> chosen from the Form using Dynamic Content (we don&rsquo;t want to copy any more values from the VendTable record - we actually will specify a bank account name when composing a response on the Form)</li>
<li><code>Bank account number</code> = <code>Bank account number</code> chosen from the Form using Dynamic Content</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-7-Flow-4.png" title="BankDetails" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-7-Flow-4.png" data-sub-html="<h2>Add more details to bank account</h2><p>BankDetails</p>">
        
    </a><figcaption class="image-caption">Add more details to bank account</figcaption>
    </figure></p>
<p>We finished with Vendor Bank Account.</p>
<p>We will do just the same with the record in PartyContacts.</p>
<ul>
<li><code>Party ID</code> = <code>Party ID</code> from VendTable record</li>
<li><code>Contact number/address</code> = <code>Email</code> from the Form (in this case, I would like to add an email address - it is totally up to you to opt to add phone number, Skype, Twitter and some other contact detail that D365FO is supporting)</li>
<li><code>Purpose</code> = I am &ldquo;hard-coding&rdquo; this <code>&quot;Business&quot;</code> (the supported purpose of Contact can be found on Vendor Card on D356FO client - this purpose should mainly be used when sending emails, i.e. D365FO want to send Purchase Order Confirmation to any email addresses with purpose <code>&quot;Invoice&quot;</code>)</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-8-Flow-5.png" title="VendorContact" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-8-Flow-5.png" data-sub-html="<h2>Vendor Contact Details</h2><p>VendorContact</p>">
        
    </a><figcaption class="image-caption">Vendor Contact Details</figcaption>
    </figure></p>
<h4 id="22-step-2-testing-out">2.2. <strong>Step 2: Testing out</strong></h4>
<p>Form input.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-9-Flow-6.png" title="FormInput1" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-9-Flow-6.png" data-sub-html="<h2>Company details</h2><p>FormInput1</p>">
        
    </a><figcaption class="image-caption">Company details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-10-Flow-7.png" title="FormInput2" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-10-Flow-7.png" data-sub-html="<h2>Bank details</h2><p>FormInput2</p>">
        
    </a><figcaption class="image-caption">Bank details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-11-Flow-8.png" title="FormInput3" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-11-Flow-8.png" data-sub-html="<h2>Contact details</h2><p>FormInput3</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p>Results on D365FO client.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-12-Flow-9.png" title="Result1" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-12-Flow-9.png" data-sub-html="<h2>Contact details</h2><p>Result1</p>">
        
    </a><figcaption class="image-caption">Contact details</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-13-Flow-10.png" title="Result2" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-13-Flow-10.png" data-sub-html="<h2>Bank account</h2><p>Result2</p>">
        
    </a><figcaption class="image-caption">Bank account</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-14-Flow-11.png" title="Result3" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/E3-14-Flow-11.png" data-sub-html="<h2>Bank account details</h2><p>Result3</p>">
        
    </a><figcaption class="image-caption">Bank account details</figcaption>
    </figure></p>
<p>There you go, simple integration between MS Forms, MS Automate and D365FO client. I am seeing that Microsoft is improving such by adding more actions on MS Automate. I believe we will be able to do many more jobs with the built-in utilities of MS Automate.</p>
<h3 id="3-how-to-determine-the-data-entity-that-should-be-used-in-the-power-automate">3. How to determine the Data Entity that should be used in the Power Automate</h3>
<p>The names of the target entity on <code>D365FO client</code> and being found in <code>Power Automate</code> should be different. You can always find them out by testing several import/export but, with the help of <code>Visual Studio</code>, you will be able to save a lot of time. This, however, requires a certain extent of experience working with data integration on D365FO.</p>
<p>Given the case that we would like to import data to All Vendors, we will start our search in <code>Workspaces &gt; Data Management &gt; Data Entities</code>. Apply several filters here and there, and looking for potential ones that we usually do, we will finally end our search at the VendVendorV2Entity</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-1-Entity-1.png" title="Data Entities" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-1-Entity-1.png" data-sub-html="<h2>Data Entities</h2><p>Data Entities</p>">
        
    </a><figcaption class="image-caption">Data Entities</figcaption>
    </figure></p>
<p>Making our way to <code>Visual Studio</code>, it is not a difficult task for us to find out the Entity.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-2-Entity-2.png" title="VendVendorV2Entity" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-2-Entity-2.png" data-sub-html="<h2>VendVendorV2Entity</h2><p>VendVendorV2Entity</p>">
        
    </a><figcaption class="image-caption">VendVendorV2Entity</figcaption>
    </figure></p>
<p>Check out the <code>Properties</code>, we will need to get details in the <code>Public</code> group.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-3-Properties.png" title="Properties" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-3-Properties.png" data-sub-html="<h2>Properties</h2><p>Properties</p>">
        
    </a><figcaption class="image-caption">Properties</figcaption>
    </figure></p>
<p>In <code>Public</code>:</p>
<ul>
<li>Is Public: If it is <code>Yes</code>, the entity can be found in Power Automate; otherwise, <code>No</code>.</li>
<li>Public Collection Name: <code>Entity name</code> on Power Automate.</li>
</ul>
<p>The information should be displayed here:</p>
<p><figure><a class="lightgallery" href="E1-12-Flow-10.png" title="Info on Automate" data-thumbnail="E1-12-Flow-10.png" data-sub-html="<h2>Info on Automate</h2><p>Info on Automate</p>">
        
    </a><figcaption class="image-caption">Info on Automate</figcaption>
    </figure></p>
<p>Furthermore, by checking the <code>Entity</code>&rsquo;s fields, we can get the information of mapping between the <code>Entity</code> and the physical table <code>VendTable</code>.</p>
<p><figure><a class="lightgallery" href="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-4-EntityFields.png" title="Entity fields" data-thumbnail="/2020-06-28-dynamics-365-finops-data-integration-using-microsoft-forms-part-2/VS-4-EntityFields.png" data-sub-html="<h2>Entity fields</h2><p>Entity fields</p>">
        
    </a><figcaption class="image-caption">Entity fields</figcaption>
    </figure></p>
<p>Give yourself some time to play around between <code>MS Forms</code>, <code>MS Automate</code> and <code>Visual Studio</code>. You will finally see the relations between them.</p>
]]></description></item><item><title>Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 1)</title><link>https://dynamics365.github.io/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><author>Kome Hoang</author><guid>https://dynamics365.github.io/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/</guid><description><![CDATA[<p>With any D365FO users, Data Management workspace and Data Entities should have become one of the most used and well-known tools in the system. We all agree how powerful such integration framework is, especially when it comes to a large number of records that we would need to import into different tables.</p>
<p>The classic method that we have been utilizing is to include all source data in a single (or multiple, much depending on the purpose and order of data integration) Excel sheet, trigger an import execution, pass any validation layers that present and ultimately have the data available on D365FO. Now, I would like to propose another method that might come useful in some circumstances: Using Microsoft Forms.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/Introduction.png" title="Introduction" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/Introduction.png" data-sub-html="<h2>The trio</h2><p>Introduction</p>">
        
    </a><figcaption class="image-caption">The trio</figcaption>
    </figure></p>
<h2 id="when">When</h2>
<p>This method should be at its finest when you are planning to outsource the input to any external users.</p>
<p>Imagine you are a company who is using D365FO to leverage your daily work. You now want to add many local vendors to your system in form of new Vendor Accounts. It is fine to collect all information from them (i.e. Vendor Company’s name, their address, their contact details and so on), put everything in an Excel sheet and import it. Yet, chance is that it would take (a lot of) time for you to finish this task. You would then be very likely to try coming up with some methods to cut down time for it.</p>
<p>That demand should raise two questions:</p>
<ul>
<li>How can we let the vendors enter their information by themselves?</li>
<li>And, how can we then have all such information in our system?</li>
</ul>
<h2 id="what">What</h2>
<p>What should be needed?</p>
<ul>
<li><a href="https://forms.office.com/" target="_blank" rel="noopener noreffer ">Microsoft Forms</a>: To establish a process in which you will publish a prepared form. Any vendors out there will have the access to it and they can fill any fields on in.</li>
<li><a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreffer ">Microsoft Power Automate aka. Microsoft Flow</a>: To set up a protocol to push the input information (form responses) to the target (D365FO Data Entities).</li>
<li><em>(Optional)</em> Access to Visual Studio on your virtual machine: To help you determine the target Data Entities more easily and efficiently.</li>
</ul>
<h2 id="how">How</h2>
<p>The flow should go like this.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/Biggest-Flow.png" title="Biggest FLow" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/Biggest-Flow.png" data-sub-html="<h2>The Biggest FLow</h2><p>Biggest FLow</p>">
        
    </a><figcaption class="image-caption">The Biggest FLow</figcaption>
    </figure></p>
<p>To make it short, when a response is submitted in Microsoft Form, the Flow in MS Power Automate is triggered automatically. An approval request will be sent to your Outlook mailbox and if it is approved, a new record will be created in the target data entity.</p>
<p>Let go through three examples in the next articles in the series (from the simplest to a more complicated) so we will see the logic behind this process.</p>
<p>As easy as it sounds, in this example, we will create a new Vendor Account from Microsoft Forms with only a small number of fields being populate.
<strong>Note</strong></p>
<blockquote>
<p><em>To help simplify the example, the number of fields is minimised. In other words, we will import just enough fields so the new Vendor Account is valid.</em>
<em>Given that, only <code>Vendor Account</code> and <code>Vendor Group</code> are chosen to be imported.</em></p>
</blockquote>
<h3 id="step-1-create-a-ms-form">Step 1: Create a MS Form</h3>
<p>To do so, we will access <a href="https://forms.office.com/" target="_blank" rel="noopener noreffer ">Microsoft Forms</a> and create a new form. To make the new form usable, we will create two questions asking for inputs of Vendor Account and Vendor Group.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-1-NewForm.png" title="Example 1 Form" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-1-NewForm.png" data-sub-html="<h2>Example 1 Form</h2><p>Example 1 Form</p>">
        
    </a><figcaption class="image-caption">Example 1 Form</figcaption>
    </figure></p>
<p>Note all information on the form is customisable.
<strong>Note 1-1</strong></p>
<blockquote>
<p>We can make the questions&hellip;any questions that suit the purpose of the form. Say, in reality, the question can be <code>&quot;What is your company's name?&quot;</code> if you want to send this form to any external vendor users. The question does not change the usability of the returned response&rsquo;s value. It can still be mapped to VendAccount not matter what the question is.
<strong>Note 1-2</strong>
The second question is being set in form of a Choice question. The given choices should match with available Vendor Group values found on your D365FO client. If this question is a Text one, chance is that its response might not match with any available Vendor Group values, thus, will return an error during Flow runtime.
Vendor Groups can be found under <code>Account Payable &gt; Vendors &gt; Vendor Groups</code>. In this example, <code>TopVendor</code> and <code>Others</code> are two available Vendor Groups in my D365FO client.</p>
</blockquote>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-2-VendorGroups.png" title="Vendor Groups" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-2-VendorGroups.png" data-sub-html="<h2>Vendor Groups</h2><p>Vendor Groups</p>">
        
    </a><figcaption class="image-caption">Vendor Groups</figcaption>
    </figure></p>
<h3 id="step-2-create-a-ms-flow">Step 2: Create a MS Flow</h3>
<p>To do so, we will access <a href="https://flow.microsoft.com/" target="_blank" rel="noopener noreffer ">Microsoft Power Automate</a> and create a new flow. We will go with an <code>Automated</code> one in this case.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-3-Flow-1.png" title="Flow step 1" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-3-Flow-1.png" data-sub-html="<h2>Automated flow</h2><p>Flow step 1</p>">
        
    </a><figcaption class="image-caption">Automated flow</figcaption>
    </figure></p>
<p>Search for <code>form</code> and choose the trigger <code>When a new response is submitted</code>. Hit <code>Create</code> to create a new flow.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-4-Flow-2.png" title="Flow step 2" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-4-Flow-2.png" data-sub-html="<h2>Form trigger</h2><p>Flow step 2</p>">
        
    </a><figcaption class="image-caption">Form trigger</figcaption>
    </figure></p>
<p>Choose the <code>form</code> that we just created using the dropdown list.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-5-Flow-3.png" title="Flow step 3" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-5-Flow-3.png" data-sub-html="<h2>Choose form</h2><p>Flow step 3</p>">
        
    </a><figcaption class="image-caption">Choose form</figcaption>
    </figure></p>
<p>Press <code>New step</code>, search for <code>form</code> and go with <code>Get response details</code>.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-6-Flow-4.png" title="FLow step 4" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-6-Flow-4.png" data-sub-html="<h2>New step: Get response details</h2><p>FLow step 4</p>">
        
    </a><figcaption class="image-caption">New step: Get response details</figcaption>
    </figure></p>
<p>In the new step, choose the <code>Form ID</code>. As soon as we move the cursor to the <code>Response ID</code> field, the <code>FLow</code> will suggest the <code>Dynamics content</code> that we can use. In this case, there should be only one dynamic content, which is <code>List of response notifications Response ID</code>. We will go with it by choosing it.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-7-Flow-5.png" title="FLow step 5" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-7-Flow-5.png" data-sub-html="<h2>Get response details</h2><p>FLow step 5</p>">
        
    </a><figcaption class="image-caption">Get response details</figcaption>
    </figure></p>
<p>After doing so, the flow should look like this.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-8-Flow-6.png" title="FLow step 6" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-8-Flow-6.png" data-sub-html="<h2>Form done</h2><p>FLow step 6</p>">
        
    </a><figcaption class="image-caption">Form done</figcaption>
    </figure></p>
<p>Now, the reponse details will be sent from the <code>Form</code> to the <code>Flow</code> when a new response is submitted. Next, we will set up the step to create a new Vendor Account.</p>
<p>Create a new step, search for <code>dynamics</code> and go with <code>Dynamics 365 for Finance and Operations</code>.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-9-Flow-7.png" title="FLow step 7" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-9-Flow-7.png" data-sub-html="<h2>Dynamics 365 FinOps</h2><p>FLow step 7</p>">
        
    </a><figcaption class="image-caption">Dynamics 365 FinOps</figcaption>
    </figure></p>
<p>Choose <code>Create record</code> action.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-10-Flow-8.png" title="FLow step 8" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-10-Flow-8.png" data-sub-html="<h2>Create record action</h2><p>FLow step 8</p>">
        
    </a><figcaption class="image-caption">Create record action</figcaption>
    </figure></p>
<p>Choose the Dynamics 365 FinOps <code>Instance</code> from the dropdown list. If your client does not appear here, choose <code>Enter custom value</code>. For privacy, environments&rsquo; name will be censored in our example.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-11-Flow-9.png" title="FLow step 9" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-11-Flow-9.png" data-sub-html="<h2>Set D365FO instance</h2><p>FLow step 9</p>">
        
    </a><figcaption class="image-caption">Set D365FO instance</figcaption>
    </figure></p>
<p>The <code>Instance</code> should be the <code>link</code> to your D365FO client. Set <code>Entity name</code> VendorsV2.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-12-Flow-10.png" title="FLow step 10" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-12-Flow-10.png" data-sub-html="<h2>Set Instance and Entity</h2><p>FLow step 10</p>">
        
    </a><figcaption class="image-caption">Set Instance and Entity</figcaption>
    </figure></p>
<p><code>Note 1-3</code></p>
<blockquote>
<p><em>Later in this series, we will see how to find the exact <code>Entity name</code> using <code>Visual Studio</code>. Also, we will see in which condition, the Entity can be used in <code>Power Automate</code>.</em></p>
</blockquote>
<p>Populate the fields that we want to import. In this example, we will populate only 3 fields: <code>Group (VendorGroupID)</code>, <code>Company (DataAreaId)</code> and <code>Supplier Account (VendorAccountNumber)</code>.</p>
<p><code>Dynamic content</code> will be suggested automatically when the cursor is placed in each field.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-13-Flow-11.png" title="FLow step 11" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-13-Flow-11.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 11</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We can map <code>Form fields</code> with <code>Automate fields</code> or <code>hardcode</code> in these fields:</p>
<ul>
<li><code>Group</code> = Response of <code>What is the Vendor Group?</code> question.</li>
<li><code>Company</code> = <em>(hardcode)</em> <code>usmf</code>.</li>
<li><code>Supplier Account</code> = Response of <code>What is the Vendor Account?</code> question.</li>
<li><code>Name</code> = <code>Supplier Account</code> =  Response of <code>What is the Vendor Account?</code> question (<code>Show advanced option</code> on the Flow to find the field <code>Name (VendorOrganisationName)</code>).
These fields should be required when creating a new Vendor Account on D365FO client.</li>
</ul>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-14-Flow-12.png" title="FLow step 12" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-14-Flow-12.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 12</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>We are done here with the set up.</p>
<h3 id="step-3-testing-out">Step 3: Testing out</h3>
<p>On <code>Forms</code>, choose the form that we just created, click on <code>Preview</code> so we can submit a form response.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-15-Flow-13.png" title="FLow step 13" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-15-Flow-13.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 13</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p>Check out <code>All Vendors (VendTableListPage)</code> on the client to find a new Vendor Account is created.</p>
<p><figure><a class="lightgallery" href="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-16-Flow-14.png" title="FLow step 14" data-thumbnail="/2020-05-24-dynamics-365-finops-data-integration-using-microsoft-forms-part-1/E1-16-Flow-14.png" data-sub-html="<h2>Map Form fields with Automate fields</h2><p>FLow step 14</p>">
        
    </a><figcaption class="image-caption">Map Form fields with Automate fields</figcaption>
    </figure></p>
<p><code>Note 1-4</code></p>
<blockquote>
<p><em>Use <code>Test</code> option in Power Automate to follow the process of the Flow. This, in other words, is so-called <code>&quot;Run Flow with Debug&quot;</code> option.</em></p>
</blockquote>
]]></description></item></channel></rss>