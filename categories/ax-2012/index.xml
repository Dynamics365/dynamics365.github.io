<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AX 2012 - Category - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/categories/ax-2012/</link>
        <description>AX 2012 - Category - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/categories/ax-2012/" rel="self" type="application/rss+xml" /><item>
    <title>Handle AIF error messages in dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-12-handle-aif-error-messages-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>Normally, when we consume AIF Service, we use this code like below to handle Error messages</p>
<p>{% highlight csharp %}
try
{
client.register(ctx, contract);
Console.WriteLine(&ldquo;items registed on Trans Id: &quot; + contract.InventTransId + &quot; with &quot; + contract.Qty + &quot; quantities.&quot;);
Console.ReadLine();
}
catch (Exception ex)
{
Console.WriteLine(string.Format(&ldquo;Ex: {0}&rdquo;, ex.Message));
Console.ReadLine();
}
{% endhighlight %}</p>
<p>If it cause error, message would return like this</p>
<p>




</p>]]></description>
</item><item>
    <title>How to create HTTP adapter port</title>
    <link>https://nuxulu.com/2017-01-12-how-to-create-http-adapter-port/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-12-how-to-create-http-adapter-port/</guid>
    <description><![CDATA[<p>We normally use <code>NETTCP</code> adapter for .NET system, It going to very easy to consume by.</p>
<p>As my experience, if we use <code>NETTCP</code> adapter for consuming by Java system, we will need add some extension or 3rd party due to binding and mismatch schema and of course client doesn’t want to do that either me.</p>
<p>So, my solution is creating HTTP adapter for Java, you can also use .NET system to consume HTTP adapter without any problems</p>]]></description>
</item><item>
    <title>Response in AIF custom service class</title>
    <link>https://nuxulu.com/2017-01-12-respone-in-aif-custom-service-class/</link>
    <pubDate>Thu, 12 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-12-respone-in-aif-custom-service-class/</guid>
    <description><![CDATA[<p>At the previous <a href="http://nuxulu.com/ax2012/trick/tools/integration/AIF-Custom-response-value-in-Dynamics-AX-2012-R3/" target="_blank" rel="noopener noreffer">post</a> I already show how to customize Response Value list in AIF Document standard service, today we will talk about response in Custom AIF service class.</p>
<p>We already know for Custom AIF service we actually need 2 classes, one is <code>contract</code> for data input and one is <code>service</code> to process a logic. With <code>Response</code> class, it&rsquo;s literally same with <code>contract</code> class. They both hold parm value.</p>
<ul>
<li>
<p><strong><code>contract</code> class</strong> gets parametters.</p>
</li>
<li>
<p><strong><code>Response</code> class</strong> sets return values.</p>
</li>
</ul>
<h3 id="scenario" class="headerLink"><a href="#scenario" class="header-mark"></a>Scenario</h3><p>I want to get <code>HcmPersonnelNumberId</code> and <code>HcmWorkerName</code> of current userID on C#.NET application.</p>]]></description>
</item><item>
    <title>AIF Custom response value in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</link>
    <pubDate>Wed, 11 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-11-aif-custom-response-value-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>For this demonstration, I use AIF service to create Sales order with <code>SalesSalesOrderService</code> and I gonna consume AIF using C#.NET.</p>
<p>Normally, in consume service application we handle return value by using <code>EntityKeyList</code>, <code>EntityKey</code>, <code>KeyData[0].Value</code>. And for Sales Order It will return Created SalesID.</p>
<p>Let&rsquo;s take a look on <code>AxdSalesOrder</code> class. More about <code>Axd</code> class please prefer <a href="https://technet.microsoft.com/en-us/library/aa862063.aspx" target="_blank" rel="noopener noreffer">this</a>.</p>
<p>Then go to <code>createList</code> method, this method will handle response value</p>
<p>{% highlight csharp %}
public AifEntityKeyList createList(
AifDocumentXml                  _xml,
AifEndpointActionPolicyInfo     _actionPolicyInfo,
AifConstraintListCollection     _constraintListCollection)
{
AifEntityKeyList aifEntityKeyList;</p>
<pre><code>aifEntityKeyList = super(_xml, _actionPolicyInfo, _constraintListCollection);

// Sales orders are committed - master planning explosion can be executed and confirmed dates be set
this.postSalesOrderCreation(aifEntityKeyList);

return aifEntityKeyList;
</code></pre>
<p>}
{% endhighlight %}</p>
<p>So, how about customer wants another meaning value beside <code>SalesID</code> likes <code>InventTransId</code> information in <code>SalesLine</code> table or another tables base on your requirement. To do that, we need to customize this method.</p>]]></description>
</item><item>
    <title>How to block vendor and send email for notification.</title>
    <link>https://nuxulu.com/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</link>
    <pubDate>Tue, 10 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-10-block-vendor-and-send-email-for-notification-in-dynamics-ax/</guid>
    <description><![CDATA[<p>Main requirements is Using batch to find and block vendor base on last transaction condition and notify for them by emails.</p>
<h3 id="set-up-e-mail-parameters" class="headerLink"><a href="#set-up-e-mail-parameters" class="header-mark"></a>Set up E-mail parameters</h3><p>For set up email, we need Go to AX <code>System administrator &gt; Setup &gt; E-mail parameters</code></p>
<p>




</p>]]></description>
</item><item>
    <title>CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Thu, 29 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2016-12-29-crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>The workflow process moves purchase requisitions through the review process, from an initial status of <strong>Draft</strong> to a final status of <strong>Approved</strong>. When a purchase requisition is submitted for review, the workflow process is started. After a purchase requisition is approved, a purchase order can be generated for the purchase requisition lines and submitted to the vendor for order fulfillment.</p>
<p>We will use AIF standard service for import PR from outside, service name <code>PurchReqImportService</code>.</p>
<p>in <code>AxPurchReqTable</code> class and <code>setPurchReqId()</code> method</p>
<p>{% highlight csharp %}
protected void setPurchReqId()
{
NumberSequenceReference numberSequenceReference;</p>
<pre><code>if (this.isMethodExecuted(funcName()))
{
    return;
}

if (this.isFieldSetExternally(fieldNum(PurchReqTable, PurchReqId)))
{
    if (this.isSetMethodsCalledFromSave())
    {
        if (!this.purchReqTable())
        {
            numberSequenceReference = PurchReqTable::numRefPurchReqId();
            this.checkNumber(numberSequenceReference.numberSequenceTable(),fieldNum(PurchReqTable,PurchReqId),this.parmPurchReqId());
            if (numberSequenceReference.NumberSequenceId &amp;&amp; numberSequenceReference.numberSequenceTable().Continuous)
            {
                NumberSeq::newReserveNum(numberSequenceReference).reserve(this.parmPurchReqId());
            }
        }
    }
}
else
{
    if (this.isFieldSet(fieldNum(PurchReqTable, PurchReqId)))
    {
        return;
    }

    if (!this.parmPurchReqId())
    {
        if (this.isSetMethodsCalledFromSave())
        {
            //this.parmPurchReqId(NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num());
            numberSequenceReference = PurchReqTable::numRefPurchReqId();
            if(numberSequenceReference)
            {
                this.setField(fieldNum(PurchReqTable, PurchReqId), NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num());
            }
            else
            {
                this.setField(fieldNum(PurchReqTable, PurchReqId), this.parmExternalSourceID());
            }
        }
    }
}
</code></pre>
<p>}</p>
<p>{% endhighlight %}</p>
<p>Base on this method, you could know how System get PurchReqId.</p>]]></description>
</item><item>
    <title>CRUD Purchase order using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Wed, 28 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<p>Due to Purchase order doesn’t have Standard document service so we have to create new Document service for that using AIF wizards.</p>
<p>I’m using AIF document service with <code>NETTCP</code> or <code>HTTP</code> Adapter to Create Purchase order service, here is steps</p>
<h2 id="create-query" class="headerLink"><a href="#create-query" class="header-mark"></a>Create Query</h2><p>with three <strong>datasouce</strong> (<code>PurchTable, PurchLine, InventDim</code>) likes below</p>
<p>




</p>
<blockquote>
<p>As best practice for Document service, name of query should be start with Axd* prefix.</p>
</blockquote>
<h2 id="using-aif-wizards" class="headerLink"><a href="#using-aif-wizards" class="header-mark"></a>Using AIF Wizards</h2><p>In AX development environment, go to <em>Tools &gt; Wizards &gt; AIF document service wizards</em></p>
<p>




</p>
<p>Choose recent created query and click <strong>next</strong>.</p>
<h2 id="create-service-operation-and-axbc-class" class="headerLink"><a href="#create-service-operation-and-axbc-class" class="header-mark"></a>Create Service operation and <code>AxBC class</code></h2><p>




</p>
<p>Click <code>next</code> and then <code>Generate</code>.</p>]]></description>
</item><item>
    <title>Insert, update, Delete order line through AIF In AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</link>
    <pubDate>Wed, 28 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2016-12-28-insert-update-delete-order-line-through-aif-in-ax-2012-r3/</guid>
    <description><![CDATA[<p>In previous <a href="https://dynamics365.github.io/ax2012/integration/CRUD-Purchase-order-using-AIF-in-Dynamics-AX-2012-R3/" target="_blank" rel="noopener noreffer">post</a>, I already show how to create purchase order through AIF with <code>NETTCP</code> or <code>HTTP adapter</code>. In this post, we will get little deep more about action on line of order.</p>
<p>The following code sample shows how to <code>insert</code>, <code>update</code>, <code>delete</code> a line of an existing purchase order through AIF, currently I’m using C#.NET console project for demo.</p>
<p>As Partial update, we must include just the fields to change and any fields required by the document (you can check <code>Data policies</code> in AIF Service ports form for that).</p>
<p>Also, notice how action properties are specified – no matter we do with the line, which means updating the order.</p>
<p>I’m giving you an idea how it looks like, here is the code</p>
<p><code>The first method will handle the key of AIF Service</code></p>
<p>{% highlight csharp %}
private static EntityKey[] EntityForPurchId(string purchId)
{
KeyField field = new KeyField()
{
Field = &ldquo;PurchId&rdquo;,
Value = purchId
};</p>
<pre><code>EntityKey key = new EntityKey()
{
	KeyData = new[] { field }
};

return new[] { key };
</code></pre>
<p>}</p>
<p>{% endhighlight %}</p>]]></description>
</item><item>
    <title>CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3</title>
    <link>https://nuxulu.com/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</link>
    <pubDate>Tue, 27 Dec 2016 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2016-12-27-crud-items-products-products-master-dimension-variants-using-aif-in-dynamics-ax-2012-r3/</guid>
    <description><![CDATA[<h2 id="scenarios" class="headerLink"><a href="#scenarios" class="header-mark"></a>Scenarios:</h2><p>I’m trying to create <strong>product/master product</strong> in Dynamics AX using AIF inbound port, the AIF services consume by C#.NET.</p>
<p>From AX 2012 R2, Item is replaced with Product. Item master was in Inventory Management Module, now there is a separate module for item/product creation <code>Product information Management</code>.</p>
<p>Some definitions you should know
There are two types of Products in 2012 they are:</p>
<ol>
<li>
<p><strong>Product</strong></p>
<p><em>Product information management/Common/Products/Products</em></p>
</li>
<li>
<p><strong>Product Master</strong></p>
<p><em>Product information management/Common/Products/Products master</em></p>
<p>a. <strong>Variants:</strong></p>
</li>
</ol>
<p>To create a product variant, you must define at least one product dimension for a product master. You can also rename dimensions.
To create product variants, you must complete the following tasks:</p>
<ul>
<li>
<p>Set up dimensions, such as size, color, and style.</p>
</li>
<li>
<p>Set up variant groups.</p>
</li>
<li>
<p>Assign variant groups to a retail hierarchy.</p>
</li>
<li>
<p>Create a product master and variants.</p>
</li>
</ul>]]></description>
</item></channel>
</rss>
