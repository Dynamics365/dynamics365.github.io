<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Query - Category - Dynamics 365 &amp; Power Platform | NUXULU</title>
        <link>https://nuxulu.com/categories/query/</link>
        <description>Query - Category - Dynamics 365 &amp; Power Platform | NUXULU</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 01 Jan 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://nuxulu.com/categories/query/" rel="self" type="application/rss+xml" /><item>
    <title>Difference between QueryFilter and QueryBuildRrange</title>
    <link>https://nuxulu.com/2017-01-01-difference-between-queryfilter-and-querybuildrange/</link>
    <pubDate>Sun, 01 Jan 2017 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2017-01-01-difference-between-queryfilter-and-querybuildrange/</guid>
    <description><![CDATA[<p>In Dynamics AX, we have two way to filter the result set of records in joined query is using <code>QueryFilter</code> class and <code>QueryBuildRange</code> class.</p>
<p>So what&rsquo;s difference between them? when do we use <code>QueryFilter</code> class? When do we use <code>QueryBuildRange</code> class?</p>
<p>Today, i will make a simple sample to show what is difference between them.</p>]]></description>
</item><item>
    <title>HOW TO USE &#34;LIKE&#34; OPERATOR IN QueryBuildRange</title>
    <link>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</link>
    <pubDate>Fri, 13 Nov 2015 00:00:00 &#43;0000</pubDate>
    <author>maxnguyen</author>
    <guid>https://nuxulu.com/2015-11-13-how-to-use-like-operator-in-querybuildrange/</guid>
    <description><![CDATA[To make something as the LIKE operator in a query, just assign a value to the QueryRange including a wildcard.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  static void QueryBuildRange_Sample(Args _args) { Query query = new Query(); QueryRun queryRun; QueryBuildDataSource qbds; QueryBuildRange queryRange; CustTable custTable; qbds.addDataSource(tableNum(CustTable)); queryRange = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange.value(&#34;axd*&#34;); queryRun = new QueryRun(query); while(queryRun.]]></description>
</item></channel>
</rss>
