<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>FinOps - Category - Dynamics 365 Finance &amp; Operations | nuxulu.com</title><link>https://dynamics365.github.io/categories/finops/</link><description>FinOps - Category - Dynamics 365 Finance &amp; Operations | nuxulu.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>luan52@outlook.com (Max Nguyen)</managingEditor><webMaster>luan52@outlook.com (Max Nguyen)</webMaster><lastBuildDate>Tue, 04 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dynamics365.github.io/categories/finops/" rel="self" type="application/rss+xml"/><item><title>Microsoft Dynamics 365 Commerce - Component Overview</title><link>https://dynamics365.github.io/2023-07-04-microsoft-dynamics-365-commerce-component-overview/</link><pubDate>Tue, 04 Jul 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-07-04-microsoft-dynamics-365-commerce-component-overview/</guid><description><![CDATA[<p><figure><a class="lightgallery" href="/2023-07-04-microsoft-dynamics-365-commerce-component-overview/commerce_architecture_component_overview.png" title="Microsoft Dynamics 365 Commerce - Component Overview" data-thumbnail="/2023-07-04-microsoft-dynamics-365-commerce-component-overview/commerce_architecture_component_overview.png" data-sub-html="<h2>Microsoft Dynamics 365 Commerce - Component Overview</h2><p>Microsoft Dynamics 365 Commerce - Component Overview</p>">
        
    </a><figcaption class="image-caption">Microsoft Dynamics 365 Commerce - Component Overview</figcaption>
    </figure></p>
]]></description></item><item><title>Microsoft ecosystem supporting Dynamics 365 Finance</title><link>https://dynamics365.github.io/2023-02-14-comparation-finops-business-central-copy/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-02-14-comparation-finops-business-central-copy/</guid><description><![CDATA[<p><figure><a class="lightgallery" href="/2023-02-14-comparation-finops-business-central-copy/microsoft-ecosystem-supporting-dynamics-365-finance.png" title="Microsoft ecosystem supporting Dynamics 365 Finance" data-thumbnail="/2023-02-14-comparation-finops-business-central-copy/microsoft-ecosystem-supporting-dynamics-365-finance.png" data-sub-html="<h2>Microsoft ecosystem supporting Dynamics 365 Finance</h2><p>Microsoft ecosystem supporting Dynamics 365 Finance</p>">
        
    </a><figcaption class="image-caption">Microsoft ecosystem supporting Dynamics 365 Finance</figcaption>
    </figure></p>
]]></description></item><item><title>Visual Studio Tips for Dynamics 365 Finance Operations</title><link>https://dynamics365.github.io/2023-02-02-vs-tips-finops/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-02-02-vs-tips-finops/</guid><description><![CDATA[<p>Some configurations that you should make for Visual studio in newly deplopyed FinOps environments.</p>
<h2 id="1-show-line-number">1. Show line number</h2>
<ul>
<li>Open Visual studio as Administrator right.</li>
<li>Click on the <strong>Dynamics 365</strong> drop down menu on the toolbar and select <em>Options</em>.</li>
<li>Text editor -&gt; X++</li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/show-line-number.png" title="Show line number" data-thumbnail="/2023-02-02-vs-tips-finops/show-line-number.png" data-sub-html="<h2>Show line number</h2><p>Show line number</p>">
        
    </a><figcaption class="image-caption">Show line number</figcaption>
    </figure></p>
<h2 id="2-best-practice-rules">2. Best practice rules</h2>
<ul>
<li>Click on the <strong>Dynamics 365</strong> drop down menu on the toolbar and select <em>Options</em>.</li>
<li>In <strong>Dynamics 365</strong>, select <em>Best Practices</em> and select each of the following:
<ul>
<li>Microsoft.Dynamics.AX.Framework.BestPracticeFramework.UIRules</li>
<li>Microsoft.Dynamics.AX.Framework.CodeStyleRules</li>
<li>Microsoft.Dynamics.AX.Framework.DataAccessRules</li>
<li>Microsoft.Dynamics.AX.Framework.DataEntityRules</li>
<li>Microsoft.Dynamics.AX.Framework.DataMethodRules</li>
<li>Microsoft.Dynamics.AX.Framework.DepreciatedElementsRules</li>
<li>Microsoft.Dynamics.AX.Framework.MaintainabilityRules</li>
<li>Microsoft.Dynamics.AX.Framework.StaticCodeValidationRules</li>
</ul>
</li>
</ul>
<h2 id="3-build">3. Build</h2>
<p>If you want to lower building time</p>
<ul>
<li>Click on the <strong>Dynamics 365</strong> drop down menu on the toolbar and select <em>Options</em>.</li>
<li>In <strong>Dynamics 365</strong>, select <em>Build</em> and select <em>Build Modules in Parallel</em></li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/build.png" title="Build" data-thumbnail="/2023-02-02-vs-tips-finops/build.png" data-sub-html="<h2>Build</h2><p>Build</p>">
        
    </a><figcaption class="image-caption">Build</figcaption>
    </figure></p>
<p><a href="https://community.dynamics.com/365/financeandoperations/b/peter-s-x-developer-blog/posts/visual-studio-s-parallel-compilation-flag" target="_blank" rel="noopener noreffer ">More information on this feature</a></p>
<h2 id="4-projects">4. Projects</h2>
<ul>
<li>Click on the <strong>Dynamics 365</strong> drop down menu on the toolbar and select <em>Options</em>.</li>
<li>In <strong>Dynamics 365</strong>, select <em>Build</em> and select
<ul>
<li>Organize projects by element type</li>
<li>Synchronize database on build for newly created project</li>
<li>Order labels in label file by their ID</li>
</ul>
</li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/project.png" title="project" data-thumbnail="/2023-02-02-vs-tips-finops/project.png" data-sub-html="<h2>project</h2><p>project</p>">
        
    </a><figcaption class="image-caption">project</figcaption>
    </figure></p>
<h2 id="5-customize-toolbars">5. Customize toolbars</h2>
<ul>
<li>Right click on Toolbars, choose <em>Customize</em></li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-1.png" title="toolbars-1" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-1.png" data-sub-html="<h2>toolbars-1</h2><p>toolbars-1</p>">
        
    </a><figcaption class="image-caption">toolbars-1</figcaption>
    </figure></p>
<ul>
<li>Create a new toolbar named <strong>D365</strong></li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-2.png" title="toolbars-2" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-2.png" data-sub-html="<h2>toolbars-2</h2><p>toolbars-2</p>">
        
    </a><figcaption class="image-caption">toolbars-2</figcaption>
    </figure></p>
<!-- <figure><figcaption>
      <p>Lighthouse (<code>image</code>)</p>
    </figcaption>
</figure>
 -->
<ul>
<li>Switch to <strong>Commands</strong> tab, Choose <strong>D365</strong> in Toolbar</li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-3.png" title="toolbars-3" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-3.png" data-sub-html="<h2>toolbars-3</h2><p>toolbars-3</p>">
        
    </a><figcaption class="image-caption">toolbars-3</figcaption>
    </figure></p>
<ul>
<li>Choose <strong>Add Command</strong> -&gt; <strong>Extensions</strong> -&gt; Add commands that you want</li>
</ul>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-4.png" title="toolbars-4" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-4.png" data-sub-html="<h2>toolbars-4</h2><p>toolbars-4</p>">
        
    </a><figcaption class="image-caption">toolbars-4</figcaption>
    </figure></p>
<p>Here are my favorites</p>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-5.png" title="toolbars-5" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-5.png" data-sub-html="<h2>toolbars-5</h2><p>toolbars-5</p>">
        
    </a><figcaption class="image-caption">toolbars-5</figcaption>
    </figure></p>
<p>Now you can access them directly from toolbars, it will save you some clicks.</p>
<p><figure><a class="lightgallery" href="/2023-02-02-vs-tips-finops/toolbars-6.png" title="toolbars-6" data-thumbnail="/2023-02-02-vs-tips-finops/toolbars-6.png" data-sub-html="<h2>toolbars-6</h2><p>toolbars-6</p>">
        
    </a><figcaption class="image-caption">toolbars-6</figcaption>
    </figure></p>
]]></description></item><item><title>A comparison between Dynamics 365 Finance &amp; Supply Chain Management and Dynamics 365 Business Central in terms of features, capabilities and suitability for different types of businesses</title><link>https://dynamics365.github.io/2023-01-26-comparation-finops-business-central/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-01-26-comparation-finops-business-central/</guid><description><![CDATA[<p>The basic comparation that helps you choose which solution is optimized for your company.</p>
<table>
<thead>
<tr>
<th>Dynamics 365 Finance Operations</th>
<th>Dynamics 365 Business Central</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dynamics 365 Finance Operations applications that are specifically designed to connect individuals, procedures, information, and insights across various business areas such as finance, project management, human resources, supply chain, and commerce. It allows for flexible deployment options and the ability to adapt to new business priorities as needed.</td>
<td>A all-in-one business management tool that assists small and medium-sized businesses in integrating their financial, sales, service, and operations teams through a single user-friendly application that can be implemented quickly. It is distributed, maintained, and expanded by specialized partner channels.</td>
</tr>
<tr>
<td>Mid-market to large enterprises with 50 – 1000+ users</td>
<td>Small to medium-sized businesses (SMBs) with 3 to 250+ users</td>
</tr>
<tr>
<td>Organizations with in-house IT resources to support go-live and maintenance</td>
<td>Businesses who need fast deployment and have limited IT resources to support</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>Heavily invested in Dynamics AX and looking to move to the cloud</td>
<td>Heavily invested in Dynamics NAV, GP, or SL and ready to move to the cloud</td>
</tr>
<tr>
<td>Deep industry and vertical capabilities within applications</td>
<td>Over 2000+ industry and horizontal apps on AppSource optimized for SMBs</td>
</tr>
<tr>
<td>Individually deployable solutions for sales, service, customer insights, finance, projects, HR, supply chain, commerce, and more</td>
<td>Single solution that supports finance, sales, service, projects, supply chain, warehousing, manufacturing, and more</td>
</tr>
<tr>
<td>Centralized operating models, with a single deployment spanning multiple companies, entities, and/or countries</td>
<td>Decentralized operating model, with separate deployments for each company, entity, and or country</td>
</tr>
</tbody>
</table>
<p>There is also an ability to use a hub and spoke model is provided, where Dynamics 365 Finance &amp; Supply Chain is deployed in the main office and Business Central in subsidiary locations.</p>
]]></description></item><item><title>Advanced filtering and query syntax</title><link>https://dynamics365.github.io/2023-01-01-advanced-query-syntax/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-01-01-advanced-query-syntax/</guid><description><![CDATA[<blockquote>
<p><a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/advanced-filtering-query-options" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/advanced-filtering-query-options</a></p>
</blockquote>
<h2 id="advanced-query-syntax">Advanced query syntax</h2>
<table>
<thead>
<tr>
<th>Syntax</th>
<th>Character description</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>value</em></td>
<td>Equal to the value that is entered</td>
<td>Type the value to find.</td>
<td><strong>Smith</strong> finds &quot;Smith&quot;.</td>
</tr>
<tr>
<td>!<em>value</em> (exclamation point)</td>
<td>Not equal to the value that is entered</td>
<td>Type an exclamation point and then the value to exclude.</td>
<td><strong>!Smith</strong> finds all values except &quot;Smith&quot;.</td>
</tr>
<tr>
<td><em>from-value</em>..<em>to-value</em> (double period)</td>
<td>Between the two values that are separated by double periods</td>
<td>Type the from-value, then two periods, and then the to-value.</td>
<td><strong>1..10</strong> finds all values from 1 through 10. However, in a string field, <strong>A..C</strong> finds all values that start with &quot;A&quot; and &quot;B&quot;, and values that are exactly equal to &quot;C&quot;. For example, this query won't find &quot;Ca&quot;. To find all values from &quot;A<em>&quot; through &quot;C</em>&quot;, type <strong>A..D</strong>.</td>
</tr>
<tr>
<td>..<em>value</em> (double period)</td>
<td>Less than or equal to the value that is entered</td>
<td>Type two periods and then the value.</td>
<td><strong>..1000</strong> finds any number that is less than or equal to 1000, such as &quot;100&quot;, &quot;999.95&quot;, and &quot;1,000&quot;.</td>
</tr>
<tr>
<td><em>value</em>.. (double period)</td>
<td>Greater than or equal to the value that is entered</td>
<td>Type the value and then two periods.</td>
<td><strong>1000..</strong> finds any number that is greater than or equal to 1000, such as &quot;1,000&quot;, &quot;1,000.01&quot;, and &quot;1,000,000&quot;.</td>
</tr>
<tr>
<td>&gt;<em>value</em> (greater than sign)</td>
<td>Greater than the value that is entered</td>
<td>Type a greater than sign (<strong>&gt;</strong>) and then the value.</td>
<td><strong>&gt;1000</strong> finds any number that is greater than 1000, such as &quot;1000.01&quot;, &quot;20,000&quot;, and &quot;1,000,000&quot;.</td>
</tr>
<tr>
<td>&lt;<em>value</em> (less than sign)</td>
<td>Less than the value that is entered</td>
<td>Type a less than sign (<strong>&lt;</strong>) and then the value.</td>
<td><strong>&lt;1000</strong> finds any number that is less than 1000, such as &quot;999.99&quot;, &quot;1&quot;, and &quot;-200&quot;.</td>
</tr>
<tr>
<td><em>value</em>* (asterisk)</td>
<td>Starting from the value that is entered</td>
<td>Type the starting value and then an asterisk (<strong>*</strong>).</td>
<td><strong>S*</strong> finds any string that starts with &quot;S&quot;, such as &quot;Stockholm&quot;, &quot;Sydney&quot;, and &quot;San Francisco&quot;.</td>
</tr>
<tr>
<td>*<em>value</em> (asterisk)</td>
<td>Ending with the value that is entered</td>
<td>Type an asterisk and then the ending value.</td>
<td><strong>*east</strong> finds any string that ends with &quot;east&quot;, such as &quot;Northeast&quot; and &quot;Southeast&quot;.</td>
</tr>
<tr>
<td>*<em>value</em>* (asterisk)</td>
<td>Containing the value that is entered</td>
<td>Type an asterisk, then a value, and then another asterisk.</td>
<td><strong>*th*</strong> finds any string that contains &quot;th&quot;, such as &quot;Northeast&quot; and &quot;Southeast&quot;.</td>
</tr>
<tr>
<td>? (question mark)</td>
<td>Having one or more unknown characters</td>
<td>Type a question mark at the position of the unknown character in the value.</td>
<td><strong>Sm?th</strong> finds &quot;Smith&quot; and &quot;Smyth&quot;.</td>
</tr>
<tr>
<td><em>value</em>,<em>value</em> (comma)</td>
<td>Matching the values that are separated by commas</td>
<td>Type all your criteria, and separate them by using commas.</td>
<td><strong>A, D, F, G</strong> finds exactly &quot;A&quot;, &quot;D&quot;, &quot;F&quot;, and &quot;G&quot;. <strong>10, 20, 30, 100</strong> finds exactly &quot;10, 20, 30, 100&quot;.</td>
</tr>
<tr>
<td>"" (two double quotes)</td>
<td>Matching a blank value</td>
<td>Type two consecutive double quotes to filter for blank values in that field.</td>
<td>Two consecutive double quotes (<strong>""</strong>) finds rows with no value for the current column.</td>
</tr>
<tr>
<td>(<span class="code">Finance and operations query</span>) (finance and operations query between parentheses)</td>
<td>Matching a defined query</td>
<td>Type a query as an SQL statement between parentheses using the finance and operations query language.</td>
  <td><strong><span class="code">((AccountNum LIKE "US*") && (DirPartyTable.Name LIKE "Cont*"))</span></strong><br><br> 
       as an example of syntax for a filter condition on a field from the root datasource as well as a field from a different datasource (for the All customers page)</td>
</tr>
<tr>
<td>T</td>
<td>Today's date</td>
<td>Type <strong>T</strong>.</td>
<td><strong>T</strong> matches today's date.</td>
</tr>
<tr>
<td>(methodName(parameters)) (<strong>SysQueryRangeUtil</strong> method between parentheses)</td>
<td>Matching the value or range of values that are specified by the parameters of the <strong>SysQueryRangeUtil</strong> method</td>
<td>Type a <strong>SysQueryRangeUtil</strong> method that has parameters that specify the value or range of values.</td>
<td>
<ol>
<li>Click <strong>Accounts receivable</strong> &gt; <strong>Invoices</strong> &gt; <strong>Open customer invoices</strong>.</li>
<li>Press Ctrl+Shift+F3 to open the <strong>Inquiry</strong> page.</li>
<li>On the <strong>Range</strong> tab, click <strong>Add</strong>.</li>
<li>In the <strong>Table</strong> field, select <strong>Open customer transactions</strong>.</li>
<li>In the <strong>Field</strong> field, select <strong>Due date</strong>.</li>
<li>In the <strong>Criteria</strong> field, enter <strong>(yearRange(-2,0))</strong>.</li>
<li>Click <strong>OK</strong>. The list page is updated and lists the invoices that match the criterion that you entered. For this example, invoices that were due in the previous two years are listed.</li>
</ol>
See the table in the next section for additional details about <strong>SysQueryRangeUtil</strong> date methods, and several examples.</td>
</tr>
</tbody>
</table>
<h2 id="advanced-date-queries-that-use-sysqueryrangeutil-methods">Advanced date queries that use SysQueryRangeUtil methods</h2>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>Day (_relativeDays=0)</td>
<td>Find a date relative to the session date. Positive values indicate future dates, and negative values indicate past dates.</td>
<td>
<ul>
<li><strong>Tomorrow</strong> – Enter <strong>(Day(1))</strong>.</li>
<li><strong>Today</strong> – Enter <strong>(Day(0))</strong>.</li>
<li><strong>Yesterday</strong> – Enter <strong>(Day(-1))</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>DayRange (_relativeDaysFrom=0, _relativeDaysTo=0)</td>
<td>Find a range of dates relative to the session date. Positive values indicate future dates, and negative values indicate past dates.</td>
<td>
<ul>
<li><strong>Last 30 days</strong> – Enter <strong>(DayRange(-30,0))</strong>.</li>
<li><strong>Previous 30 days and next 30 days</strong> – Enter <strong>(DayRange(-30,30))</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>GreaterThanDate (_relativeDays=0) GreaterThanUtcDate (_relativeDays=0)</td>
<td>Find all dates after the specified relative date.</td>
<td>
<ul>
<li><strong>More than 30 days from now</strong> – Enter <strong>(GreaterThanDate(30))</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>GreaterThanUtcNow ()</td>
<td>Find all date/time entries after the current time.</td>
<td>
<ul>
<li><strong>All future date/times</strong> – Enter <strong>(GreaterThanUtcNow())</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>LessThanDate (_relativeDays=0) LessThanUtcDate (_relativeDays=0)</td>
<td>Find all dates before the specified relative date.</td>
<td>
<ul>
<li><strong>Less than seven days from now</strong> – Enter <strong>(LessThanDate(7))</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>LessThanUtcNow ()</td>
<td>Find all date/time entries before the current time.</td>
<td>
<ul>
<li><strong>All past date/times</strong> – Enter <strong>(LessThanUtcNow())</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>MonthRange (_relativeFrom=0, _relativeTo=0)</td>
<td>Find a range of dates, based on months relative to the current month.</td>
<td>
<ul>
<li><strong>Previous two months</strong> – Enter <strong>(MonthRange(-2,0))</strong>.</li>
<li><strong>Next three months</strong> – Enter <strong>(MonthRange(0,3))</strong>.</li>
</ul>
</td>
</tr>
<tr>
<td>YearRange (_relativeFrom=0, _relativeTo=0)</td>
<td>Find a range of dates, based on years relative to the current year.</td>
<td>
<ul>
<li><strong>Next year</strong> – Enter <strong>(YearRange(0, 1))</strong>.</li>
<li><strong>Previous year</strong> – Enter <strong>(YearRange(-1,0))</strong>.</li>
</ul>
</td>
</tr>
</tbody>
</table>]]></description></item><item><title>Filtering options Dynamics 365 Finance Operations</title><link>https://dynamics365.github.io/2023-01-01-filtering/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-01-01-filtering/</guid><description><![CDATA[<blockquote>
<p><a href="https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/user-interface/filtering" target="_blank" rel="noopener noreffer ">https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/user-interface/filtering</a></p>
</blockquote>
<ul>
<li><a href="#1-introduction" rel="">1. Introduction</a></li>
<li><a href="#2-filter-expressions" rel="">2. Filter expressions</a>
<ul>
<li><a href="#21-other-frequent-filter-expressions" rel="">2.1. Other frequent filter expressions</a></li>
</ul>
</li>
<li><a href="#3-filter-pane" rel="">3. Filter Pane</a>
<ul>
<li><a href="#31-when-is-the-filter-pane-available" rel="">3.1. When is the Filter Pane available?</a></li>
<li><a href="#32-what-data-does-the-filter-pane-work-on" rel="">3.2. What data does the Filter Pane work on?</a></li>
<li><a href="#33-what-fields-are-initially-shown-in-the-filter-pane" rel="">3.3. What fields are initially shown in the Filter Pane?</a></li>
<li><a href="#34-can-i-control-the-default-fields-that-appear-in-the-filter-pane" rel="">3.4. Can I control the default fields that appear in the Filter Pane?</a></li>
<li><a href="#35-i-dont-want-users-to-be-able-to-filter-on-a-specific-field-or-modify-an-existing-filter-how-do-i-accomplish-this" rel="">3.5. I don’t want users to be able to filter on a specific field or modify an existing filter. How do I accomplish this?</a></li>
<li><a href="#36-can-i-control-the-fields-that-appear-in-the-add-a-filter-field-list-in-the-filter-pane" rel="">3.6. Can I control the fields that appear in the Add a filter field list in the Filter Pane?</a></li>
<li><a href="#37-how-is-the-filter-pane-used" rel="">3.7. How is the Filter Pane used?</a></li>
</ul>
</li>
<li><a href="#4-quickfilter" rel="">4. QuickFilter</a>
<ul>
<li><a href="#41-why-dont-i-have-a-column-selector-in-my-quickfilter" rel="">4.1. Why don&rsquo;t I have a column selector in my QuickFilter?</a></li>
<li><a href="#42-can-i-use-the-quickfilter-to-filter-other-collection-controls-such-as-trees" rel="">4.2. Can I use the QuickFilter to filter other collection controls (such as trees)?</a></li>
</ul>
</li>
<li><a href="#5-grid-column-header-filteringsorting" rel="">5. Grid column header filtering/sorting</a></li>
</ul>
<h2 id="1-introduction">1. Introduction</h2>
<p>Microsoft Dynamics AX 2012 offers the following filtering options.</p>
<table>
<thead>
<tr>
<th>Filter option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Filter by grid</td>
<td>The user defines filter conditions in input fields below the grid column headers.</td>
</tr>
<tr>
<td>Filter by selection (filter by field)</td>
<td>The user selects a field value and uses that value as a filter condition.</td>
</tr>
<tr>
<td>Advanced filter</td>
<td>The user opens a dialog box that contains advanced filtering options (filter on columns, not on the form; join additional data sources; sort by multiple columns; and so on).</td>
</tr>
</tbody>
</table>
<p>Finance and operations offers the following filtering options.</p>
<table>
<thead>
<tr>
<th>Filter option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Filter Pane</td>
<td>An inline pane that slides in from the left, and that contains multiple filter criteria that can be applied to the targeted content.</td>
</tr>
<tr>
<td>QuickFilter</td>
<td>A framework-provided filtering mechanism that can appear above any list or grid, and that provides fast single-column filtering.</td>
</tr>
<tr>
<td>Grid column filtering</td>
<td>The user can define filter conditions and perform single-column sorting by using a drop dialog that is opened from the grid column header.</td>
</tr>
<tr>
<td>Advanced filter or sort</td>
<td>For most advanced filtering scenarios, the migrated <strong>Advanced filter</strong> form from Dynamics AX 2012 is still available.</td>
</tr>
</tbody>
</table>
<h2 id="2-filter-expressions">2. Filter expressions</h2>
<p>One important difference between filtering in finance and operations apps and filtering in Dynamics AX 2012 is related to the way that query symbols are used when filter values are defined (for example, &ldquo;*&rdquo; to match 0 or more characters, or &ldquo;..&rdquo; to specify a range of values to match). In Dynamics AX 2012, these symbols are highly visible during the filtering experience. For example, for the filter by grid option, if a user selects the <strong>contains</strong> operator on a field, the system translates that operator by adding wildcard characters (*) to each end of the current expression. In the current version, the query symbols are implied by the selected operator and aren&rsquo;t injected into the user interface. This makes filtering more intuitive and simpler for users. For users who want to specify additional filter conditions by using specific query symbols, or users who must enter more complex conditions, the <strong>matches</strong> operator is provided for each data type. For all other operators, the query symbols are interpreted as literals. For example, the filter condition &ldquo;First name MATCHES A&rdquo; finds all records where the first name starts with the letter A. However, the filter condition &ldquo;First Name IS A*&rdquo; finds records where the first name is literally equal to &ldquo;A*.&rdquo; The following table shows how the client translates between finance and operations apps filter operators and Dynamics AX 2012 query syntax.</p>
<table>
<thead>
<tr>
<th>Filter operator</th>
<th>Finance and operations apps query syntax</th>
</tr>
</thead>
<tbody>
<tr>
<td>Is exactly “circle” /  Is equal to “circle”</td>
<td>“circle”</td>
</tr>
<tr>
<td>Is not “circle” / Is not equal to “circle”</td>
<td>“!circle”</td>
</tr>
<tr>
<td>Is one of “circle”, “square”, “circlesquare”</td>
<td>“circle,square,circlesquare”</td>
</tr>
<tr>
<td>Contains “circle”</td>
<td>“*circle*”</td>
</tr>
<tr>
<td>Does not contain “circle”</td>
<td>“!*circle*”</td>
</tr>
<tr>
<td>Begins with “circle”</td>
<td>“circle*”</td>
</tr>
<tr>
<td>After “circle” / Greater than “circle”</td>
<td>“&gt;circle”</td>
</tr>
<tr>
<td>Greater than or equal “circle”</td>
<td>“circle..”</td>
</tr>
<tr>
<td>Before “circle” / Less than “circle”</td>
<td>“&lt;circle”</td>
</tr>
<tr>
<td>Less than or equal “circle”</td>
<td>“..circle”</td>
</tr>
<tr>
<td>Between “square” and “circle”</td>
<td>“square..circle”</td>
</tr>
</tbody>
</table>
<p>Any query syntax that doesn&rsquo;t match the preceding templates is interpreted as the <strong>matches</strong> operator.</p>
<h3 id="21-other-frequent-filter-expressions">2.1. Other frequent filter expressions</h3>
<p>Users may want to filter for blank values in column. While there is no filter operator for this specifically, the syntax for performing this filtering remains the same as Dynamics AX 2012. With either the <strong>matches</strong> operator or the <strong>is equal to</strong> operator, users can type <strong>&quot;&quot;</strong> to retrieve rows with blank values for the current column. For example, <strong>First Name IS &ldquo;&rdquo;</strong> will find all records where the first name is blank. Note that &quot;&quot; only matches rows where the column value is the empty string and does not match rows where the column value is NULL or 0.</p>
<p>Users may also want to filter for records that do not belong to a specific list of values. While &ldquo;is not one of&rdquo; is not a filter operator, this filter expression can be achieved using the <strong>matches</strong> operator by negating each list item in the list. For example,  <strong>!circle, !square</strong> will find all records that are neither &ldquo;circle&rdquo; nor &ldquo;square.&rdquo;</p>
<h2 id="3-filter-pane">3. Filter Pane</h2>
<p>The Filter Pane provides an easy-to-use interface for filtering full page lists. The Filter Pane is an inline pane that slides in from the left side of the screen and pushes the page content to the right, so that users can see the data that they want to filter. Users open this filter mechanism by clicking the system-defined <strong>Show filters</strong> button on the left side of the page. After it has been opened, the Filter Pane remains visible until the user goes to a new page, or until the user closes the Filter Pane by using the <strong>Hide filters</strong> button.</p>
<h3 id="31-when-is-the-filter-pane-available">3.1. When is the Filter Pane available?</h3>
<p>Currently, the Filter Pane is available for all forms except the following forms:</p>
<ul>
<li>Drop dialogs</li>
<li>Dialogs</li>
<li>Enhanced previews</li>
<li>Lookups</li>
<li>Form parts</li>
<li>Parts</li>
<li>Table of contents form type</li>
<li>Forms that have no data sources</li>
</ul>
<p><strong>Note:</strong> The availability of the Filter Pane on particular forms and form types is evolving, so this list might change.</p>
<h3 id="32-what-data-does-the-filter-pane-work-on">3.2. What data does the Filter Pane work on?</h3>
<p>Because the Filter Pane is targeted at full page lists, it works only on the tables and fields that are directly joined (by inner/outer joins) to the first master data source on the form. This filtering mechanism isn&rsquo;t intended for filtering on secondary collections, or for filtering on other root data sources and their directly joined data sources. Other filtering mechanisms (QuickFilter, grid column filtering, and so on) are available to meet these other requirements.</p>
<h3 id="33-what-fields-are-initially-shown-in-the-filter-pane">3.3. What fields are initially shown in the Filter Pane?</h3>
<p>Here is how the fields that are initially shown in the Filter Pane are selected:</p>
<ol>
<li>All ranges/filters that currently exist on the query (only non-hidden filters/ranges are shown) are used.</li>
<li>If no ranges filters currently exist on the query, the fields from the primary index from the first master data source are used.</li>
<li>If there are no fields from the primary index from the first master data source, the TitleFields that are defined directly on the first master data source are used.  If no TitleFields are defined, no default fields are shown. (Currently, if the first master data source extends another table (for example, table B), we don&rsquo;t show the TitleFields from table B. However, we plan to add that check in the future.)</li>
</ol>
<h3 id="34-can-i-control-the-default-fields-that-appear-in-the-filter-pane">3.4. Can I control the default fields that appear in the Filter Pane?</h3>
<p>Developers can make sure that a particular field appears in the Filter Pane by adding an empty filter for that field to the query. For an example, see the <strong>FmCustomer</strong> form, which adds the filters post super() in form init(). Note that after an empty field has been added to guarantee that it appears in the Filter Pane, the fields in the Filter Pane will always be those that are explicitly on the query, and will never be the TitleFields or fields from the primary index on the first master data source.</p>
<h3 id="35-i-dont-want-users-to-be-able-to-filter-on-a-specific-field-or-modify-an-existing-filter-how-do-i-accomplish-this">3.5. I don’t want users to be able to filter on a specific field or modify an existing filter. How do I accomplish this?</h3>
<p>Developers can affect whether users can modify/add filters on certain fields by changing the status of the filters. The allowed values are in the <strong>RangeStatus</strong> enum:</p>
<ol>
<li><strong>Open (default)</strong> – The user can see and modify this filter.</li>
<li><strong>Locked</strong> – The user can see the filter value but can&rsquo;t modify it. The user also can&rsquo;t add another filter on this column.</li>
<li><strong>Hidden</strong> – The user can&rsquo;t see that there is a filter on this column. The user also can&rsquo;t add another filter on this column.</li>
</ol>
<h3 id="36-can-i-control-the-fields-that-appear-in-the-add-a-filter-field-list-in-the-filter-pane">3.6. Can I control the fields that appear in the Add a filter field list in the Filter Pane?</h3>
<p>The fields that appear in the <strong>Add a filter field</strong> list are all the filterable fields from the query that involves the first master data source on the form. Therefore, developers can&rsquo;t control the fields that appear in this list. Usually, if you see unexpected fields or can&rsquo;t find the fields that you want to filter on, the fields that you&rsquo;re expecting are either on a different master data source (not the first) or on a child collection.</p>
<h3 id="37-how-is-the-filter-pane-used">3.7. How is the Filter Pane used?</h3>
<p>The Filter Pane is simple and straightforward to use. First, select a filtering operator in the list that is associated with each filter field. Note that the set of operators that appears depends on the data type of the field. Then enter an appropriate value for the filter condition, and click <strong>Apply</strong>. The form is updated based on the filter criteria that you specified.</p>
<h2 id="4-quickfilter">4. QuickFilter</h2>
<p>In Dynamics AX 2012, the QuickFilter was a framework control that was automatically added only to list pages. In finance and operations apps, the QuickFilter is now a modeled control that can be associated with any grid in the system. As the user starts to type, a column selector drop-down appears to guide the user toward the column that the filter will be applied to. The developer can also specify the default column for the QuickFilter. If no column is specified by the developer, the default column is the first field that can be filtered in the grid.</p>
<p><figure><a class="lightgallery" href="/2023-01-01-filtering/3_filter.png" title="QuickFilter control." data-thumbnail="/2023-01-01-filtering/3_filter.png" data-sub-html="<h2>QuickFilter control.</h2><p>QuickFilter control.</p>">
        
    </a><figcaption class="image-caption">QuickFilter control.</figcaption>
    </figure></p>
<h3 id="41-why-dont-i-have-a-column-selector-in-my-quickfilter">4.1. Why don&rsquo;t I have a column selector in my QuickFilter?</h3>
<p>Column selectors are shown only for QuickFilters that are attached to grids. If you don&rsquo;t see a column selector, the most likely reason is that the <strong>TargetControl</strong> property on the QuickFilter is blank. This property must point to the grid that it should operate on. If the <strong>TargetControl</strong> property is set correctly, but you don&rsquo;t see a column selector, you might not have any filterable columns in your grid. In addition to non-text controls (such as images), controls that are bound to data methods aren&rsquo;t filterable.</p>
<h3 id="42-can-i-use-the-quickfilter-to-filter-other-collection-controls-such-as-trees">4.2. Can I use the QuickFilter to filter other collection controls (such as trees)?</h3>
<p>Yes, you can use the QuickFilter to filter other collection controls, but you must manually wire up the filtering. Here are the general steps:</p>
<ul>
<li>Leave the <strong>TargetControl</strong> property blank.</li>
<li>Override the <strong>applyFilter()</strong> method on the QuickFilter.</li>
<li>Write code in that method to perform the desired filtering.</li>
</ul>
<h2 id="5-grid-column-header-filteringsorting">5. Grid column header filtering/sorting</h2>
<p>In finance and operations apps, the grid filtering experience is more closely aligned with the experience in Microsoft Excel. When the user clicks a column header, a drop-down dialog appears, and the user can use it to filter the column. The filtering experience here mimics the filtering experience in the Filter pane. Additionally, there are options to sort the grid based on the column that is currently selected.</p>
<blockquote>
<p>[!NOTE]
Some columns in a grid may not be filterable. In these cases, the column header will not be clickable. From a technical perspective, only columns corresponding to fields in a SQL table can be filtered on or sorted. Columns whose values are computed via code are not filterable or sortable using grid column headers, the Filter pane, QuickFilter, or Advanced filter or sort.</p>
</blockquote>
<p><a href="/2023-01-01-filtering/4_filter.png" rel=""></a></p>
]]></description></item><item><title>Metadata search in Visual Studio</title><link>https://dynamics365.github.io/2023-01-01-metadata-search-in-visual-studio/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2023-01-01-metadata-search-in-visual-studio/</guid><description><![CDATA[<h1 id="metadata-search-in-visual-studio">Metadata search in Visual Studio</h1>
<p>This article describes how to use metadata search to search your code and metadata for arbitrary patterns and content.</p>
<p>Given the large volume of the code base and metadata, it is often necessary to find things in the code that meet a certain criteria. For example, you might not know the name of the metadata element that contains the pattern or meets the criteria. Metadata search is exposed in Visual Studio through two user interfaces: the Metadata Search tool window and the Navigate To window.</p>
<h2 id="metadata-search-tool-window">Metadata search tool window</h2>
<p>You can access the Metadata search tool window from the <strong>Dynamics 365 &gt; Metadata Search</strong> menu command. Enter your search query to start the search. Results will start populating in the window asynchronously as you type. You can double-click any result line to navigate to the corresponding X++ code or metadata that matches your search query.</p>
<p><figure><a class="lightgallery" href="/2023-01-01-metadata-search-in-visual-studio/posted_metasearch.png" title="Metadata search tool window." data-thumbnail="/2023-01-01-metadata-search-in-visual-studio/posted_metasearch.png" data-sub-html="<h2>Metadata search tool window</h2><p>Metadata search tool window.</p>">
        
    </a><figcaption class="image-caption">Metadata search tool window</figcaption>
    </figure></p>
<p>You can also select one or more results, right-click, and then add these elements to a project. You don’t need to wait for the search to complete before you start interacting with the search results.</p>
<p><figure><a class="lightgallery" href="/2023-01-01-metadata-search-in-visual-studio/addnewproject_metasearch.png" title="Add to new project from metadata search." data-thumbnail="/2023-01-01-metadata-search-in-visual-studio/addnewproject_metasearch.png" data-sub-html="<h2>Add to new project from metadata search</h2><p>Add to new project from metadata search.</p>">
        
    </a><figcaption class="image-caption">Add to new project from metadata search</figcaption>
    </figure></p>
<h2 id="navigate-to-window">Navigate To window</h2>
<p>The <strong>Navigate To</strong> window is invoked using the <strong>Ctrl+‘,’</strong> (the comma character) shortcut keys. Pressing <strong>Ctrl+‘,’</strong> displays the query entry box in top-right corner of the Visual Studio main document window. You can also access the <strong>Navigate To</strong> window from the Visual Studio <strong>Edit</strong> menu. Enter you search query and see the results appear as you type. A progress indicator will stop when the search is complete. You don’t need to wait for the search to complete to start interacting with the results.</p>
<p><figure><a class="lightgallery" href="/2023-01-01-metadata-search-in-visual-studio/typeform_metasearch.png" title="Navigate To window." data-thumbnail="/2023-01-01-metadata-search-in-visual-studio/typeform_metasearch.png" data-sub-html="<h2>Navigate To window</h2><p>Navigate To window.</p>">
        
    </a><figcaption class="image-caption">Navigate To window</figcaption>
    </figure></p>
<h2 id="search-query-syntax">Search query syntax</h2>
<p>This section describes the search query syntax and provides example queries.</p>
<h3 id="syntax">Syntax</h3>
<p>The search query is a search string that consists of a set of filters in this general form:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;filter_1&gt;</span>:<span class="nt">&lt;filter_1_value&gt;</span> [<span class="nt">&lt;filter_2&gt;</span>:<span class="nt">&lt;filter_2_value&gt;</span> … [ <span class="nt">&lt;filter_N&gt;</span>:<span class="nt">&lt;filter_N_value&gt;</span>]]
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="/2023-01-01-metadata-search-in-visual-studio/syntax.png" title="The syntax for searching in the Metadata searc." data-thumbnail="/2023-01-01-metadata-search-in-visual-studio/syntax.png" data-sub-html="<h2>The syntax for searching in the Metadata searc</h2><p>The syntax for searching in the Metadata searc.</p>">
        
    </a><figcaption class="image-caption">The syntax for searching in the Metadata searc</figcaption>
    </figure></p>
<p>Where <code>&lt;filter_i&gt;</code> is one of the acceptable filter names, and &lt;<code>filter_i_value&gt;</code> are comma separated (and possibly quoted) filtering values.</p>
<h3 id="filter-names">Filter names</h3>
<ul>
<li>
<p><strong>Name</strong>: Filter by element name. This is the default filter, meaning if you just type a filter value, it is assumed to be an element name. Each comma-separated value is an acceptable element name.</p>
</li>
<li>
<p><strong>Type</strong>: Filter by element type. Each comma-separated value should be the name of an element or subelement type (root type or subtype) (that is, table, class, field). Logic of filtering is:</p>
<p><code>(roottype_1 OR roottype_2 OR … OR roottype_N) AND (subtype_1 OR subtype_2 OR … OR subtype_N)</code></p>
</li>
<li>
<p><strong>Model</strong>: Filter by model name. Each comma-separated value should be the name of a model in your application.</p>
</li>
<li>
<p><strong>Property</strong>: Apply property filters. Each comma-separated value should be in the form <code>property_name=property_value</code>.</p>
</li>
<li>
<p><strong>Code</strong>: Filter using code snippets, use quotes around code snippets. The matching source code is the elements that contain the specified code snippet.</p>
</li>
</ul>
<p>You can get help about using filter and filter syntax by opening the drop-down menu available in the search box.</p>
<p><figure><a class="lightgallery" href="/2023-01-01-metadata-search-in-visual-studio/metadatasearchfilter.jpg" title="Metadata search filter button." data-thumbnail="/2023-01-01-metadata-search-in-visual-studio/metadatasearchfilter.jpg" data-sub-html="<h2>Metadata search filter button</h2><p>Metadata search filter button.</p>">
        
    </a><figcaption class="image-caption">Metadata search filter button</figcaption>
    </figure></p>
<h2 id="examples">Examples</h2>
<table>
<thead>
<tr>
<th>Query string</th>
<th>What it does</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>TrvExpTable</code></td>
<td>If the token is by itself, it is assumed to be the name. So this will find everything in the application that has &ldquo;TrvExpTable&rdquo; in the name.</td>
</tr>
<tr>
<td><code>type:form ccount</code></td>
<td>Finds all forms that have &ldquo;ccount&rdquo; in their names.</td>
</tr>
<tr>
<td><code>type:form property:formtemplate=listpage</code></td>
<td>Finds all forms that contain the property &ldquo;FormTemplate&rdquo; equal to ‘ListPage’.</td>
</tr>
<tr>
<td><code>type:table,formDesign property:&quot;WorkflowDataSource=TrvExpTable&quot;</code></td>
<td>Finds formDesign nodes under tables, nothing would be found.</td>
</tr>
<tr>
<td><code>type:form,formmenufunctionbuttoncontrol property:Text=@SYS311998</code></td>
<td>Finds all menu function button controls with the Text property equal to (a label) ‘@SYS311998’.</td>
</tr>
<tr>
<td><code>type:table,method name:insert</code></td>
<td>Finds tables with a method containing &ldquo;insert&rdquo; in the method name.</td>
</tr>
<tr>
<td><code>type:table,tableindex name:Export</code></td>
<td>Finds tables with an index name containing the word &ldquo;Export&rdquo;.</td>
</tr>
<tr>
<td><code>type:table,tableindexfield name:xpNum</code></td>
<td>Finds table indexes with &ldquo;xpNum&rdquo; in the index field name.</td>
</tr>
<tr>
<td><code>type:table,tablefieldgroup name:EPNew</code></td>
<td>Finds FieldGroups (in tables) containing ‘EPNew’ in their names.</td>
</tr>
<tr>
<td><code>type:form,formgridcontrol property:allowedit=no,heightmode=column</code></td>
<td>Finds form grid controls, with properties <strong>allowedit</strong> equal to &ldquo;no&rdquo; and heightmode equal to &ldquo;column&rdquo;.</td>
</tr>
<tr>
<td><code>type:form,formtabcontrol property:arrangeMethod=Vertical,ViewEditMode=view,WidthMode=Auto</code></td>
<td>Finds form tab controls, with properties arrangeMethod equal to &ldquo;Vertical&rdquo; and ViewEditMode equal to &ldquo;view&rdquo; and WidthMode equal to &ldquo;Auto&rdquo;.</td>
</tr>
<tr>
<td><code>type:form,formDesign property:&quot;WorkflowDataSource=TrvExpTable&quot;</code></td>
<td>Finds all forms with the &ldquo;WorkflowDataSource&rdquo; property in the FormDesign node set to the value &ldquo;TrvExpTable&rdquo;.</td>
</tr>
<tr>
<td><code>model:”Application Suite” type:formdesign property:style=simplelistdetail</code></td>
<td>Find all forms in Application Suite model that has the style property set to simpleListDetail in the FormDesign node.</td>
</tr>
<tr>
<td><code>code:&quot;return null&quot;</code></td>
<td>Finds all places in the source code that contains &ldquo;return null&rdquo;.</td>
</tr>
<tr>
<td><code>code:&quot;element.lock()&quot; type:form</code></td>
<td>Finds all places in the forms source code that contain the snippet &ldquo;element.lock()&rdquo;.</td>
</tr>
<tr>
<td><code>code:&quot;insert&quot; type:table,form</code></td>
<td>Finds all places in the source code of either forms or tables that contain &ldquo;insert&rdquo;.</td>
</tr>
<tr>
<td><code>code:&quot;public display&quot; type:form,method</code></td>
<td>Finds all form methods that contain the code &ldquo;public display&rdquo;.</td>
</tr>
<tr>
<td><code>type:formbuttoncontrol property:text=</code></td>
<td>Finds all form Button Controls that have <strong>empty</strong> text properties.</td>
</tr>
</tbody>
</table>
]]></description></item><item><title>Extend on-hand inventory entities FinOps</title><link>https://dynamics365.github.io/2022-11-13-extend-on-hand-entities-fin-ops/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2022-11-13-extend-on-hand-entities-fin-ops/</guid><description><![CDATA[<p>There are some entities that you can use to get the on-hand inventory from Dynamics 365 Finance Operations:</p>
<p><i class="fa-solid fa-shield-check" aria-hidden="true"></i></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="n">InventorySiteOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventorySiteOnHandV2Entity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseInventoryStatusOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseInventoryStatusOnHandV2Entity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseOnHandEntity</span>
</span></span><span class="line"><span class="cl"><span class="n">InventWarehouseOnHandV2Entity</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can extend the ententies by <a href="/2022-09-23-add-custom-fields-to-composite-entity/" rel="">adding new fields to tables and entities</a>.</p>
<p>After you add fields to tables that are used by the <code>inventSiteOnHandView</code> view, you must sync the engine so that the extensions are correctly recognized.</p>
<ol>
<li>Extend the <code>InventSiteOnHandView</code> view by adding the extension field.</li>
<li>Extend the <code>InventSiteOnHandAggregatedView</code> view with the extension fields.</li>
<li>Extend the <code>InventSiteOnHandAggregatedViewBuilder</code> viewBuilder class by modifying the <code>getExtensionFields()</code> method. In this way, you map old view fields to new view fields when viewBuilder synchronization is run.</li>
</ol>
<p>For example, you&rsquo;ve added the following four fields to the InventTable table through extension:</p>
<ul>
<li>Custom field 1</li>
<li>Custom field 2</li>
<li>Custom field 3</li>
<li>Custom field 4</li>
</ul>
<p>In the case, you must modify the <code>getExtensionFields()</code> method in the following way.</p>
]]></description></item><item><title>Reservation and on-hand inventory in warehouse management</title><link>https://dynamics365.github.io/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/</guid><description><![CDATA[<h2 id="1-inventory-reservation-hierarchy-in-warehouse-management">1. <strong>Inventory reservation hierarchy in Warehouse management</strong></h2>
<p>The reservation functionality can be used only for items that are enabled for warehouse management processes. However, if an item is itself enabled for <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/flexible-warehouse-level-dimension-reservation" target="_blank" rel="noopener noreffer ">warehouse management processes</a>, it can be used both in warehouses that are enabled for warehouse management processes and warehouses that are not. The behavior in reservation scenarios is different, depending on the warehouse setup.</p>
<p>The functionality is built on reservation hierarchies and is intended to support the following:</p>
<ul>
<li>Flexible warehouse operations.</li>
<li>Postponement of reservation details.</li>
<li>Clear separation of which inventory dimensions can be specified, and when they can be specified.</li>
</ul>
<h3 id="11-reservation-hierarchies">1.1 <strong>Reservation hierarchies</strong></h3>
<p>A typical reservation hierarchy for an item that uses the <code>Site</code>, <code>Warehouse</code>, <code>Inventory status</code>, <code>Location</code>, and <code>License plate</code> dimensions as physical inventory dimensions.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies.png" data-sub-html="<h2>Reservation-hierarchies</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Reservation-hierarchies</figcaption>
    </figure></p>
<!-- <figure><figcaption>
      <h4>Issue</h4>
    </figcaption>
</figure>
 -->
<!-- <figure><figcaption>
      <h4>Issue</h4>
    </figcaption>
</figure>
 -->
<p>The level with the lowest value in the Reservation hierarchy level column is the least-specific level, in the example above this is the site level.
The higher the value, the more details are required to make a reservation on that level.</p>
<h3 id="12-reservation-hierarchies-implementation">1.2 <strong>Reservation hierarchies implementation</strong></h3>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies-implementation.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/Reservation-hierarchies-implementation.png" data-sub-html="<h2>Reservation-hierarchies-implementation</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">Reservation-hierarchies-implementation</figcaption>
    </figure></p>
<p>The definitions of reservation hierarchies are stored in the <strong>WHSReservationHierarchy</strong> and <strong>WHSReservationHierarchyElement</strong> tables. These are shared tables. A reservation hierarchy can be associated with one item within a company which presents by <strong>WHSReservationHierarchyItem</strong>.
The <strong>WHSReservationHierarchyProvider</strong> class provides a large number of APIs that are useful when you work with and query the reservation hierarchy for an item.</p>
<h3 id="13-making-reservations-on-different-levels">1.3 Making reservations on different levels</h3>
<p>Based on the reservation hierarchy, you can make reservations on different levels without providing details about where to reserve and what dimensions to reserve on. This lets you postpone specific details, such as the location or license plate to make the reservation. The location to reserve items on can be determined later by the <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/warehouse-configuration" target="_blank" rel="noopener noreffer "><strong>location directive</strong></a>.</p>
<p>As another example, you make reservations for a sales order created on <strong>site</strong> <code>Site1</code> and <strong>warehouse</strong> <code>WHS42</code>, which is a warehouse that is enabled for WHS processes, and for the Available inventory status. For this example, the reservation is made only
on the inventory status level.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservations-on-different-levels.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservations-on-different-levels.png" data-sub-html="<h2>reservations-on-different-levels</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">reservations-on-different-levels</figcaption>
    </figure></p>
<p>Location <code>Main006</code> will be specified when processing the work</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/location.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/location.png" data-sub-html="<h2>location</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">location</figcaption>
    </figure></p>
<h2 id="2-impact-of-the-reservation-hierarchy-setup">2. Impact of the reservation hierarchy setup</h2>
<p>For warehouses that are enabled for warehouse management processes, the setup of reservation hierarchies greatly affects the processes for <a href="https://learn.microsoft.com/en-us/dynamics365/supply-chain/warehousing/release-to-warehouse-process" target="_blank" rel="noopener noreffer ">outbound orders</a>, such as sales orders and transfer orders.</p>
<p>When you set up a reservation hierarchy, the key is to determine which dimensions should be positioned above the location level in the hierarchy, and which should be below. The following table describes the effects of arranging dimensions either above or below the location level.</p>
<table>
<thead>
<tr>
<th>Dimension placement</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Dimension above location</td>
<td>The inventory dimension above the location level must be determined before the</td>
</tr>
<tr>
<td></td>
<td>Warehouse management functionality can be used. Therefore, this typically happens</td>
</tr>
<tr>
<td></td>
<td>during order processing or by letting the reservation system determine the dimensions.</td>
</tr>
<tr>
<td>Batch above location</td>
<td>Process industry functionality for batches requires that the Batch number dimension be</td>
</tr>
<tr>
<td></td>
<td>above the Location dimension in the reservation hierarchy. When this is the case, all</td>
</tr>
<tr>
<td></td>
<td>functionality for First Expiry First Out (FEFO), same batch, batch disposition codes, and</td>
</tr>
<tr>
<td></td>
<td>batch attributes is supported.</td>
</tr>
<tr>
<td>Dimensions below location</td>
<td>WHS and warehouse workers can determine the Location dimension and the</td>
</tr>
<tr>
<td></td>
<td>dimensions below it.</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>The Location dimension and any dimensions below it should not be entered into the sales</td>
</tr>
<tr>
<td></td>
<td>and transfer lines if you expect work to be created. For example, if the Batch number</td>
</tr>
<tr>
<td></td>
<td>dimension is below the Location dimension, it should not be specified on the sales line.</td>
</tr>
<tr>
<td></td>
<td>Otherwise, WHS cannot create work to carry out the pick and pack operations.</td>
</tr>
</tbody>
</table>
<h2 id="3-on-hand-representation-and-calculations">3. On-hand representation and calculations</h2>
<h3 id="31-on-hand-for-items-that-are-using-warehouse-management-processes">3.1 On-hand for items that are using warehouse management processes</h3>
<p>The following table shows how the data might look for an item with 10 pieces available physical and 2 pieces reserved physical on the status level.</p>
<table>
<thead>
<tr>
<th>Level</th>
<th>Site</th>
<th>Warehouse</th>
<th>Inventory status</th>
<th>Location</th>
<th>License plate</th>
<th>Available physical</th>
<th>Available ordered</th>
<th>Reserved physical</th>
<th>Reserved ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>Item</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Site</td>
<td>S1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Warehouse</td>
<td>S1</td>
<td>WH1</td>
<td></td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Status</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td></td>
<td></td>
<td>10</td>
<td>10</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>Location</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td>L001</td>
<td></td>
<td>12</td>
<td>12</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>License plate</td>
<td>S1</td>
<td>WH1</td>
<td>Available</td>
<td>L001</td>
<td>LP1</td>
<td>12</td>
<td>12</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>The reservations are tracked only on the levels that are affected by the reservation. Because of the way that information about availability and reservations is stored, the corresponding values from the <strong>InventSum</strong> table cannot be used directly for items that are using warehouse management processes.</p>
<p>The following steps provide a high-level overview of the algorithm that determines the available on-hand quantity for
an item and a set of inventory dimensions:</p>
<ul>
<li>Determine the available on-hand quantity, based on the exact dimensions. This is the lowest level in the hierarchy.</li>
<li>Determine the smallest available quantity from all levels above the level found in step 1.</li>
<li>Return the smaller of the quantities found in step 1 and step 2. This is the available quantity.</li>
</ul>
<h4 id="example-a">Example A</h4>
<p>The following physical inventory exists for the item (some dimensions like site, inventory status, license plate are irrelevant and are omitted throughout the scenario):</p>
<ul>
<li><em>Warehouse: W1, Location: L1, Physical inventory: 6</em></li>
</ul>
<p>A sales order with one line is created and reserved:</p>
<ul>
<li><em>Warehouse: W1, Quantity: 5</em></li>
</ul>
<p>The sales order is released to warehouse. As a result warehouse work is created:</p>
<ul>
<li><em>Work type: Pick, Warehouse: W1, Location: L1, Quantity: 5</em></li>
<li><em>Work type: Put, Warehouse: W1, Location: Baydoor, Quantity: 5</em></li>
</ul>
<p>Now we have the following inventory transactions:</p>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Warehouse</th>
<th>Location</th>
<th>Status issue</th>
<th>Quantity</th>
</tr>
</thead>
<tbody>
<tr>
<td>Sales line</td>
<td>W1</td>
<td></td>
<td>Reserved physical</td>
<td>-5</td>
</tr>
<tr>
<td>Pick work</td>
<td>W1</td>
<td>L1</td>
<td>Reserved physical</td>
<td>-5</td>
</tr>
<tr>
<td>Put work</td>
<td>W1</td>
<td>Baydoor</td>
<td>Ordered</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>So once we roll up the transactions into the <strong>InventSum</strong> table the contents of the table will look like this</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Location</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td></td>
<td>0</td>
<td>5</td>
<td>-5</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L1</td>
<td>6</td>
<td>5</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>Baydoor</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>On hand quantities for warehouse W1 like we used to do it in versions prior to AX 2012 R3 (sum up InventSum quantities for warehouse W1)</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td>6</td>
<td>10</td>
<td>-4</td>
<td>5</td>
</tr>
</tbody>
</table>
<p>We should have shipped 5 items and we have 6 items on stock, 1 item is available. This is exactly the reason why summing up available and reserved quantities from the <strong>InventSum</strong> table may produce incorrect results for items that use warehouse management processes.</p>
<p>The sales reservation was taken on the warehouse level of the reservation hierarchy to ensure that we keep enough on hand in the warehouse to ship the reserved quantity. The pick work reservation was taken on the location level and it ensures that the reserved quantity will still be physically available when the warehouse worker comes to the warehouse location to pick it. Work reservation does not affect physical availability on the warehouse level. This means that the new reservation engine will be able to figure out that we still have one item available on the warehouse level.</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td>6</td>
<td>5</td>
<td>1</td>
<td>5</td>
</tr>
</tbody>
</table>
<h4 id="example-b">Example B</h4>
<table>
<thead>
<tr>
<th>Reference</th>
<th>Warehouse</th>
<th>Location</th>
<th>Status issue</th>
<th>Status receipt</th>
<th>Quantity</th>
</tr>
</thead>
<tbody>
<tr>
<td>Purchase line</td>
<td>W1</td>
<td>L1</td>
<td></td>
<td>Purchased</td>
<td>10</td>
</tr>
<tr>
<td>Purchase line</td>
<td>W1</td>
<td>L2</td>
<td></td>
<td>Purchased</td>
<td>20</td>
</tr>
<tr>
<td>Sales line</td>
<td>W1</td>
<td></td>
<td>Reserved physical</td>
<td></td>
<td>-25</td>
</tr>
<tr>
<td>Pick work</td>
<td>W1</td>
<td>L1</td>
<td>Reserved physical</td>
<td></td>
<td>-10</td>
</tr>
<tr>
<td>Put work</td>
<td>W1</td>
<td>Baydoor</td>
<td>Ordered</td>
<td></td>
<td>10</td>
</tr>
</tbody>
</table>
<p>After the transactions are aggregated the <strong>InventSum</strong> table contains the following information</p>
<table>
<thead>
<tr>
<th>Warehouse</th>
<th>Location</th>
<th>Physical inventory</th>
<th>Reserved physical</th>
<th>Available physical</th>
<th>Ordered</th>
</tr>
</thead>
<tbody>
<tr>
<td>W1</td>
<td></td>
<td>0</td>
<td>25</td>
<td>-25</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L1</td>
<td>10</td>
<td>10</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>L2</td>
<td>20</td>
<td>0</td>
<td>20</td>
<td>0</td>
</tr>
<tr>
<td>W1</td>
<td>Baydoor</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>10</td>
</tr>
</tbody>
</table>
<p>For each of the levels of the reservation hierarchy it stores available and reserved quantities in the <code>WHSInventReserve</code> table which allows the engine to calculate availability correctly.</p>
<p>To work with available quantities regardless of whether the item is using warehouse management processes or not the <code>InventIAvailability</code> interface was introduced. The following list contains the InventSum fields and methods that should not be used directly and the corresponding InventIAvailability methods that should be used instead:</p>
<table>
<thead>
<tr>
<th>Obsolete field/method</th>
<th>Corresponding InventIAvailability method</th>
</tr>
</thead>
<tbody>
<tr>
<td>InventSum.AvailOrdered</td>
<td>InventIAvailability.availTotal()</td>
</tr>
<tr>
<td>InventSum.availOrderedCalculated()</td>
<td>InventIAvailability.availTotal()</td>
</tr>
<tr>
<td>InventSum.AvailPhysical</td>
<td>InventIAvailability.availPhysical()</td>
</tr>
<tr>
<td>InventSum.availPhysicalCalculated()</td>
<td>InventIAvailability.availPhysical()</td>
</tr>
<tr>
<td>InventSum.availReservation()</td>
<td>InventIAvailability.availReservation()</td>
</tr>
<tr>
<td>InventSum.Ordered</td>
<td>InventIAvailability.ordered()</td>
</tr>
<tr>
<td>InventSum.orderedSum()</td>
<td>InventIAvailability.orderedSum()</td>
</tr>
<tr>
<td>InventSum.ReservOrdered</td>
<td>InventIAvailability.reservOrdered()</td>
</tr>
<tr>
<td>InventSum.ReservPhysical</td>
<td>InventIAvailability.reservPhysical()</td>
</tr>
</tbody>
</table>
<h3 id="32-implementation-of-on-hand-calculations">3.2 Implementation of on-hand calculations</h3>
<p>Three major APIs were introduced for retrieving item availability:</p>
<p>– <code>InventAvailabilityProvider</code>
– <code>InventAvailabilityFormCache</code>
– <code>InventOnhand</code></p>
<ul>
<li><strong>InventAvailabilityProvider</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventIAvailability</span>  <span class="n">inventIAvailability</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">findByItemDim</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                                            <span class="n">InventTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">itemdId</span><span class="p">),</span> <span class="n">dim</span><span class="p">).</span><span class="n">parmInventAvailability</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventIAvailability, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">ordered</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">(),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventIAvailability</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">()));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">InventAvailabilityByUnit</span> <span class="n">inventAvailabilityByUnitSum</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">findByItemSumDim</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                                                        <span class="n">InventTable</span><span class="p">::</span><span class="n">find</span><span class="p">(</span><span class="n">itemdId</span><span class="p">),</span> <span class="n">inventSum</span><span class="p">,</span> <span class="n">dim</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventAvailabilityByUnitSum, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="kc">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">ordered</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="kc">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="kc">false</span><span class="p">),</span> 
</span></span><span class="line"><span class="cl">                <span class="n">inventAvailabilityByUnitSum</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">().</span><span class="n">qty</span><span class="p">(</span><span class="kc">false</span><span class="p">)));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>InventAvailabilityFormCache</strong></li>
</ul>
<p>In scenarios where you want to display available quantities on a form you can use the InventAvailabilityFormCache class.
It is responsible for retrieving and caching available on hand quantities per item per inventory dimension combination. To use it on a form you need to:</p>
<p>– Declare an <code>InventAvailabilityFormCache</code> field in <code>classDeclaration</code> of the form.
– Initialize the cache field in the <code>init</code> method of the form:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="kd">public</span> <span class="k">void</span> <span class="k">init</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventAvailabilityFormCache</span> <span class="p">=</span> <span class="n">InventAvailabilityFormCache</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>– Flush the cache in the <code>executeQuery</code> method of the primary data source that the <code>InventSum</code> data source is joined to:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="kd">public</span> <span class="k">void</span> <span class="n">executeQuery</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">refreshCache</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="n">super</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>– Create display methods for available on hand fields that need to be displayed on the form. If <code>InventDim</code> is joined to <code>InventSum</code> then the display methods should be declared on the <code>InventSum</code> data source:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">display</span> <span class="n">InventQtyReservPhysical</span> <span class="n">reservPhysical</span><span class="p">(</span><span class="n">InventSum</span> <span class="n">_inventSum</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">availabilityFromSumJoinedWithDim</span><span class="p">(</span><span class="n">_inventSum</span><span class="p">,</span> <span class="n">inventDim_ds</span><span class="p">).</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that the <code>availabilityFromSumJoinedWithDim</code> method should be used. Otherwise, if <code>InventSum</code> is joined to InventDim then the display method should be declared on the <code>InventDim</code> data source:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">display</span> <span class="n">InventQtyReservPhysical</span> <span class="n">reservPhysical</span><span class="p">(</span><span class="n">InventDim</span> <span class="n">_inventDim</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">inventAvailabilityFormCache</span><span class="p">.</span><span class="n">availabilityFromDimJoinedWithSum</span><span class="p">(</span><span class="n">_inventDim</span><span class="p">,</span> <span class="n">inventSum_ds</span><span class="p">).</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that the <code>availabilityFromDimJoinedWithSum</code> method should be used.</p>
<ul>
<li><strong>InventOnhand</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventOnhand</span> <span class="n">inventOnHand</span> <span class="p">=</span> <span class="n">InventOnhand</span><span class="p">::</span><span class="n">newParameters</span><span class="p">(</span><span class="n">itemdId</span><span class="p">,</span> <span class="n">dim</span> <span class="p">,</span> <span class="n">dimParm</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Info</span><span class="p">(</span><span class="n">strFmt</span><span class="p">(</span><span class="s">&#34;inventOnHand, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4&#34;</span><span class="p">,</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">ordered</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">(),</span> <span class="n">inventOnHand</span><span class="p">.</span><span class="n">reservOrdered</span><span class="p">()));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The on-hand information is stored in a table called <code>WHSInventReserve</code>. The <code>WHSInventReserveDelta</code> table is used to track changes that the current transaction causes in the on-hand quantity. On the final commit, the <code>WHSInventReserve</code> table is updated based on the changes in the <code>WHSInventReserveDelta</code> table.</p>
<p>Because many scenarios involve calculating on-hand quantities based on <code>itemId</code>, <code>InventDim</code>, or <code>InventSum</code> records for
both WHS-enabled and non-WHS-enabled items, APIs are provided to support the calculations in a seamless way.</p>
<p>The following example shows how to instantiate the class that can be used to calculate availability for both WHSenabled and non-WHS-enabled items.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-C#" data-lang="C#"><span class="line"><span class="cl"><span class="n">InventAvailabilitySearch</span> <span class="n">availabilitySearch</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">InventIAvailability</span> <span class="n">availability</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span> <span class="p">=</span> <span class="n">InventAvailabilitySearch</span><span class="p">::</span><span class="n">construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setItemId</span><span class="p">(</span><span class="n">_itemId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setInventDimCriteria</span><span class="p">(</span><span class="n">_inventDimCriteria</span><span class="p">,</span> <span class="n">_inventDimCriteriaParm</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availabilitySearch</span><span class="p">.</span><span class="n">setInventSum</span><span class="p">(</span><span class="n">_inventSum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">availability</span> <span class="p">=</span> <span class="n">InventAvailabilityProvider</span><span class="p">::</span><span class="n">construct</span><span class="p">().</span><span class="n">find</span><span class="p">(</span><span class="n">availabilitySearch</span><span class="p">).</span><span class="n">parmInventAvailability</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">AvailOrderedCalculated</span>         <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">availTotal</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">AvailPhysicalCalculated</span>        <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">availPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">ReservPhysical</span>                 <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">reservPhysical</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="p">.</span><span class="n">OrderedSum</span>                     <span class="p">=</span> <span class="n">availability</span><span class="p">.</span><span class="n">orderedSum</span><span class="p">();</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>InventAvailabilityProvider</code> class provides numerous other APIs that are used to determine the availability based on various types of input. The existing <code>InventOnHandQty</code> class has been updated so that it also provides correct results for items that are enabled for warehouse management processes.</p>
<p>The following illustration shows the various classes and interfaces that are used to provide and encapsulate the calculations. Note that, for the sake of simplicity, some details have been omitted.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/InventAvailabilityProvider.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/InventAvailabilityProvider.png" data-sub-html="<h2>InventAvailabilityProvider</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">InventAvailabilityProvider</figcaption>
    </figure></p>
<h2 id="4-reservation-strategies">4. Reservation strategies</h2>
<p>To control the levels of the reservation hierarchy at which reservations are made, the system uses the concept of a reservation strategy. A reservation strategy determines the outcome of a reservation, and the dimensions that are used to make the reservation. Reservation strategies are implemented in the code and are not currently user-configurable.</p>
<p>Each reservation strategy determines the level that the reservation should be made on. If the dimensions that are passed to the reservation system do not cover all the dimensions to the level defined by the strategy, the reservation system queries the on-hand availability until the required level; then, based on the results of this query, it does the reservation so that it covers all the required dimensions.</p>
<p>The reservation strategies that are chosen for a reservation depend on multiple factors, such as the following:
• Warehouse setup
• Order type</p>
<p>The following table describes the reservation strategies that the reservation system uses.</p>
<table>
<thead>
<tr>
<th>Reservation strategy</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>None</td>
<td>The reservation is made on the dimensions that are passed, if possible. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used by inventory blocking, and lets you make reservations on, for example, the site</td>
</tr>
<tr>
<td></td>
<td>level or the warehouse level.</td>
</tr>
<tr>
<td>All</td>
<td>The reservation is made on all of the dimensions in the reservation hierarchy. This</td>
</tr>
<tr>
<td></td>
<td>strategy is used, for example, for transfer journals, or for warehouses that have not</td>
</tr>
<tr>
<td></td>
<td>been enabled for warehouse management processes.</td>
</tr>
<tr>
<td>Above location</td>
<td>The reservation is made only on the locations above the location level. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used, for example, for sales and transfer orders when reservations are made in a</td>
</tr>
<tr>
<td></td>
<td>warehouse that is enabled for warehouse management processes.</td>
</tr>
<tr>
<td>All not allowed blank</td>
<td>The reservation is made on the first lowest level that does not allow for blank issue for</td>
</tr>
<tr>
<td></td>
<td>the inventory dimensions. This strategy enables automatic reservations on non-licenseplate-controlled locations.</td>
</tr>
<tr>
<td>Batch level</td>
<td>This strategy is applied for items for which the Batch number dimension is selected and</td>
</tr>
<tr>
<td></td>
<td>positioned above the Location dimension in the reservation hierarchy. This strategy is</td>
</tr>
<tr>
<td></td>
<td>used when only reservations that are reserved ordered can be made. In that case, a</td>
</tr>
<tr>
<td></td>
<td>reservation until the batch level is attempted.</td>
</tr>
</tbody>
</table>
<p>The reservation system supports multiple reservation strategies in sequential order when reservations are made. For example, the system uses the All and All not allowed blank strategies to make reservations for transfer journals.</p>
<h2 id="5-details-about-the-implementation-of-reservation-strategies">5. Details about the implementation of reservation strategies</h2>
<p>The following illustration shows the classes that are used to implement the reservation strategies, and the main consumers of the classes. Note that, for the sake of simplicity, some details have been omitted.</p>
<p><figure><a class="lightgallery" href="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservation-strategies.png" title="Image" data-thumbnail="/2022-11-09-reservation-and-on-hand-inventory-in-warehouse-management/reservation-strategies.png" data-sub-html="<h2>reservation-strategies</h2><p>Image</p>">
        
    </a><figcaption class="image-caption">reservation-strategies</figcaption>
    </figure></p>
<p>The implementation is easy to extend, because the instantiation uses the <code>SysExtension</code> framework.</p>
<h2 id="6-synchronization-of-dimensions-between-receipts-and-issues">6. Synchronization of dimensions between receipts and issues</h2>
<p>When an inventory transaction is marked or reserved ordered, the inventory dimensions are typically synchronized between <em>receipts</em> and <em>issues</em>. For example, when a purchase order that was created based on a sales order is modified or received, the dimensions are transferred to the inventory transactions for the sales line.</p>
<p>For items that are enabled for warehouse management processes, the synchronization differs from the standard behavior. When work must be created, the source line transactions can be reserved only until the level above the location level. If all dimensions are synchronized, work cannot be created. Therefore, dimensions above the location level are not synchronized for all scenarios.</p>
<p>If the item and warehouse are enabled for warehouse management processes, and if the issue type is a type that can generate work, such as a sales line, only dimensions above the location level are synchronized. This means that if an item uses batch numbers, and the batch number is placed below the location in the reservation hierarchy, the batch number is not synchronized from receipt to issue transactions.</p>
<h2 id="7-details-about-the-implementation-of-synchronization-between-receipts-and-issues">7. Details about the implementation of synchronization between receipts and issues</h2>
<p>The logic that determines how the dimensions are synchronized is implemented in the following methods on the <strong>inventMovement</strong> class:</p>
<ul>
<li><code>getInventDimForReservedTransPhysChange</code></li>
<li><code>getInventDimForIssueTransFromReceipt</code></li>
</ul>
]]></description></item><item><title>Deploy SSRS reports in Dynamics 365 Finance, SCM using Powershell</title><link>https://dynamics365.github.io/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/</link><pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate><author>Max Nguyen</author><guid>https://dynamics365.github.io/2021-01-27-deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/</guid><description><![CDATA[<p>Open Windows PowerShell in Admin mode</p>
<p>Navigate to the PowerShell scripts</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">cd</span> <span class="nf">K:\AosService\PackagesLocalDirectory\Plugins\AxReportVmRoleStartupTask\</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Execute the below commands:</p>
<ul>
<li>For deploying all SSRS reports</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ps" data-lang="ps"><span class="line"><span class="cl"><span class="nf">.</span><span class="nv">/DeployAllReportsToSSRS.ps1</span> <span class="nf">-PackageInstallLocation</span> <span class="nf">“K:\AosService\PackagesLocalDirectory”</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>For deploying the specific reports</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSSRS</span><span class="p">.</span><span class="py">ps1</span> <span class="n">-Module</span> <span class="n">ApplicationSuite</span> <span class="n">-ReportName</span> <span class="p">&lt;</span><span class="n">ReportName</span><span class="p">&gt;</span> <span class="n">-PackageInstallLocation</span> <span class="err">“</span><span class="n">K:</span><span class="p">\</span><span class="n">AosService</span><span class="p">\</span><span class="n">PackagesLocalDirectory</span><span class="err">”</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Example:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSsrs</span><span class="p">.</span><span class="py">ps1</span> <span class="n">-Module</span> <span class="n">MaxCustomization</span> <span class="n">-ReportName</span> <span class="n">MaxCheque_US</span><span class="p">.</span><span class="py">Report</span> <span class="n">-PackageInstallLocation</span> <span class="s2">&#34;K:\AosService\PackagesLocalDirectory&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">./</span><span class="n">DeployAllReportsToSsrs</span><span class="p">.</span><span class="py">ps1</span> <span class="n">-Module</span> <span class="n">ApplicatoinSuite</span> <span class="n">-ReportName</span> <span class="n">Cust</span><span class="p">*</span> <span class="n">-PackageInstallLocation</span> <span class="s2">&#34;C:\AosService\PackagesLocalDirectory&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>